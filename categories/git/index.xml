<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Git on hacklog</title>
    <link>https://sjp38.github.io/categories/git/</link>
    <description>Recent content in Git on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Jan 2020 21:10:05 +0100</lastBuildDate>
    <atom:link href="https://sjp38.github.io/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A thing you should know if you are using multiple email accounts with `git send-email`</title>
      <link>https://sjp38.github.io/posts/en/git_send_email_multiple_email_caution/</link>
      <pubDate>Mon, 06 Jan 2020 21:10:05 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/git_send_email_multiple_email_caution/</guid>
      <description>In some case, we need to send patches that made by other people instead. git send-email command can know this situation by itself by comparing the commit author information and mail sender&amp;rsquo;s information. In that case, git send-email automatically add From: line pointing the real author of the patch in the body of the mail so that maintainers applying the patches can set the author information correctly.
For example, if &amp;ldquo;Alice alice@abc.</description>
    </item>
    <item>
      <title>Git 을 사용해 이메일 보내기</title>
      <link>https://sjp38.github.io/posts/ko/git_email_setup/</link>
      <pubDate>Sat, 28 Dec 2019 09:58:49 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/ko/git_email_setup/</guid>
      <description>많은 개발 커뮤니티가 요즘은 Github 을 사용합니다만, 일부 커뮤니티는 여전히 메일링 리스트 기반 개발 스타일을 고수하고 있습니다. 리눅스 커널 커뮤니티가 좋은 예가 되겠죠. 이런 스타일에서는 모든 주요 커뮤니케이션이 이메일을 통해 이루어집니다. 패치는 메인테이너와 하나 이상의 공개 메일링 리스트를 향해 메일의 형태로 보내어집니다. 리뷰 또한 이에 대한 답장의 형태로 이루어지지요.
그런데, 일부 이메일 클라이언트는 ``rich user experience&amp;rsquo;&amp;rsquo; 라는 명목하에 원래 내용을 오염시키곤 합니다. 탭을 스페이스로 바꾸거나 html 코드를 집어넣거나 하는 식이죠. 때문에 패치를 보내는 사람은 자신의 메일 내용이 원래 의도한대로 읽는 사람에게 보내지도록 조심해야합니다.</description>
    </item>
    <item>
      <title>Setting Git for email send</title>
      <link>https://sjp38.github.io/posts/en/git_email_setup/</link>
      <pubDate>Sat, 28 Dec 2019 09:58:49 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/git_email_setup/</guid>
      <description>Many communities are using Github nowadays, but some communities still use mailing list based development style. The Linux kernel community would be a good example. In the style, all major communications are made by email only. Patches are submitted to the maintainers and one more open mailing lists as a mail. Reviews are also made as replies to the mail.
Because some email clients can distort the original content for so-called ``rich user experience&amp;rsquo;&amp;rsquo; (e.</description>
    </item>
  </channel>
</rss>
