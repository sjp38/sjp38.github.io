<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pi | hacklog</title>
    <link>https://sjp38.github.io/categories/raspberry-pi/</link>
      <atom:link href="https://sjp38.github.io/categories/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <description>Raspberry Pi</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 27 Aug 2018 17:16:35 +0900</lastBuildDate>
    <image>
      <url>https://sjp38.github.io/img/tux.png</url>
      <title>Raspberry Pi</title>
      <link>https://sjp38.github.io/categories/raspberry-pi/</link>
    </image>
    
    <item>
      <title>Raspberry Pi 3 Serial Connection</title>
      <link>https://sjp38.github.io/post/rasp3-serial/</link>
      <pubDate>Mon, 27 Aug 2018 17:16:35 +0900</pubDate>
      <guid>https://sjp38.github.io/post/rasp3-serial/</guid>
      <description>&lt;p&gt;라즈베리 파이를 메인 컴퓨터로 사용하려는게 아니라면, 라즈베리 파이에 모니터와
키보드, 마우스를 연결하고 사용하는게 아무래도 번거롭습니다.  ssh 로 붙어서
작업하는 것도 한 방법이지만, 그게 여의치 않은 상황도 있습니다.  그저 터미널만
연결되면 되는 상황이라면, 가장 간단한 건 UART Serial 통신을 사용하는 겁니다.&lt;/p&gt;
&lt;p&gt;라즈베리 파이는 UART 통신을 지원하고 있는데, GPIO 핀 중 14번과 15번이[2] 각각
TX, RX 입니다.  호스트 컴퓨터와 이 두개의 핀을 연결하면 UART 통신을 할 수
있어서 라즈베리 파이의 터미널에 바로 접근할 수 있습니다.&lt;/p&gt;
&lt;p&gt;호스트 머신에 핀을 연결하는게 번거로울 수 있는데, 시리얼-USB 젠더를 여기저기서
저렴한 가격에 팝니다[1].  이걸 이용해 TX/RX 핀을 라즈베리 파이의 GPIO 14, 15번에
각각 연결하고 USB 를 호스트 머신에 연결합니다.&lt;/p&gt;
&lt;p&gt;이제 호스트 머신의 &lt;code&gt;/dev/&lt;/code&gt; 디렉토리에 &lt;code&gt;ttyUSB&lt;/code&gt; 로 시작하는 파일이 생겼을
겁니다.  제 경우 &lt;code&gt;ttyUSB0&lt;/code&gt; 라는 이름의 파일이 생겼군요.  이제, 시리얼 통신
프로그램인 &lt;code&gt;minicom&lt;/code&gt; 을 사용해서 이 포트로 연결해서 UART 통신을 합시다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo minicom -D /dev/ttyUSB0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 라즈베리 파이를 부팅 시키면 부팅 로그부터 터미널에 나오고, 로그인 화면까지
뜹니다.&lt;/p&gt;
&lt;h1 id=&#34;라즈베리파이3-시리얼-문제와-해결법&#34;&gt;라즈베리파이3 시리얼 문제와 해결법&lt;/h1&gt;
&lt;p&gt;하지만, 라즈베리 파이 3 에서는 내장으로 블루투스와 WiFi 가 들어가면서 GPIO 핀이
겹치게 되어 앞의 과정만으로는 시리얼 통신을 할 수 없습니다.  블루투스를 끄고
시리얼을 켜줘야 합니다.&lt;/p&gt;
&lt;p&gt;먼저, 다음과 같이 &lt;code&gt;/boot/config.txt&lt;/code&gt; 파일에 다음 두줄을 추가합니다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo echo &amp;quot;enable_uart=1&amp;quot; &amp;gt;&amp;gt; /boot/config.txt
$ sudo echo &amp;quot;dtoverlay=pi3-miniuart-bt&amp;quot; &amp;gt;&amp;gt; /boot/config.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 /boot/cmdline.txt 를 열어서 &lt;code&gt;console=tty1&lt;/code&gt; 이라는 내용을 추가해줍니다.&lt;/p&gt;
&lt;p&gt;준비가 끝났습니다.  재부팅 하면 &lt;code&gt;minicom&lt;/code&gt; 에 라즈비안 콘솔이 연결됩니다.&lt;/p&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://www.devicemart.co.kr/29565&#34;&gt;https://www.devicemart.co.kr/29565&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://www.raspberrypi.org/documentation/usage/gpio/&#34;&gt;https://www.raspberrypi.org/documentation/usage/gpio/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi 3 Model B Setup</title>
      <link>https://sjp38.github.io/post/rasp3-modelb-setup/</link>
      <pubDate>Mon, 27 Aug 2018 16:03:42 +0900</pubDate>
      <guid>https://sjp38.github.io/post/rasp3-modelb-setup/</guid>
      <description>&lt;p&gt;OSSE 2016 에서 받아온 라즈베리 파이3 셋업을 해봅니다.
셋업에 사용된 호스트 환경은 Ubuntu 16.04 데스크탑입니다.&lt;/p&gt;
&lt;p&gt;라즈베리 파이는 SD 카드를 저장소로 사용합니다.  따라서 여기에 운영체제를 깔아야
합니다.  다만, 라즈베리 파이를 구매하면 SD 카드는 따라오지 않습니다.  각자
알아서 사야 합니다.  전 예전에 사둔 16 GiB 짜리 SD 카드를 사용하겠습니다.&lt;/p&gt;
&lt;p&gt;라즈베리 파이를 지원하는 운영체제는 여러가지 있는데, 데비안 계열의 Raspbian 이
공식 운영체제입니다.  &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;다운로드 페이지&lt;/a&gt;
에서 Raspbian stretch lite 를 다운받고 압축을 풀어줍니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls
2018-06-27-raspbian-stretch-lite.zip
$ unzip 2018-06-27-raspbian-stretch-lite.zip 
Archive:  2018-06-27-raspbian-stretch-lite.zip
  inflating: 2018-06-27-raspbian-stretch-lite.img  

$ ls
2018-06-27-raspbian-stretch-lite.img  2018-06-27-raspbian-stretch-lite.zip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;압축 파일이 350 MiB, 압축 푼 이미지는 1.8 GiB 나 하는군요.&lt;/p&gt;
&lt;p&gt;이제 요걸 SD 카드에 써야하는데요, 일단 SD 카드를 데스크탑에 연결하고, &lt;code&gt;df&lt;/code&gt; 명령을 이용해 이게 어떤 디바이스 파일로 인식되었는지 봅시다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.8G     0  7.8G   0% /dev
tmpfs           1.6G  174M  1.4G  11% /run
/dev/sda1       222G  127G   84G  61% /
tmpfs           7.8G  161M  7.7G   3% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup
tmpfs           1.6G   68K  1.6G   1% /run/user/1000
/dev/sdb        917G  541G  330G  63% /media/sjpark/47f422d0-445f-4dfc-86ca-559b801eb9d3
/dev/sdc2        15G  4.7G  9.3G  34% /media/sjpark/f24a4949-f4b2-4cad-a780-a138695079ec
/dev/sdc1        56M   24M   33M  42% /media/sjpark/boot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;제가 사용한 SD 카드는 기존에 라즈베리파이2 모델 B+ 운영체제가 설치되어
있었습니다.  /&lt;code&gt;dev/sdc&lt;/code&gt; 로 SD 카드가 잡혔고, &lt;code&gt;/dev/sdc1&lt;/code&gt; 으로 부팅 파티션이,
&lt;code&gt;/dev/sdc2&lt;/code&gt; 로 데이터 파티션이 잡힌 것 같군요.&lt;/p&gt;
&lt;p&gt;이제 마운트된 파티션들을 언마운트하고, &lt;code&gt;dd&lt;/code&gt; 명령으로 이미지를 덮어씌웁시다:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo umount /media/sjpark/f24a4949-f4b2-4cad-a780-a138695079ec
$ sudo umount /media/sjpark/boot
$ sudo dd bs=4M if=./2018-06-27-raspbian-stretch-lite.img of=/dev/sdc
444+0 records in
444+0 records out
1862270976 bytes (1.9 GB, 1.7 GiB) copied, 199.44 s, 9.3 MB/s
$ sync
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;처음 두개 커맨드가 언마운트를 하고, 세번째 커맨드가 이미지를 덮어씌우는
커맨드입니다.  혹시 모르니 네번째 커맨드에서 &lt;code&gt;sync&lt;/code&gt; 해서 데이터가 확실히
씌워지게 했습니다.&lt;/p&gt;
&lt;p&gt;이제 라즈베리 파이의 HDMI 단자에 모니터를 연결하고 micro USB 포트에 스마트폰
충전하듯이 USB 를 연결해 전원을 인가해주면 라즈베리 파이가 라즈비안으로
부팅됩니다.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
