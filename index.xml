<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hacklog on Hacklog</title>
    <link>https://sjp38.github.io/</link>
    <description>Recent content in Hacklog on Hacklog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Your Name</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LKML News v5.4</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4/</link>
      <pubDate>Tue, 19 Nov 2019 23:13:19 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4/</guid>
      <description>

&lt;h2 id=&#34;patch-rfc-v3-00-36-add-kernelmemorysanitizer-infrastructure&#34;&gt;[PATCH RFC v3 00/36] Add KernelMemorySanitizer infrastructure&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191122112621.204798-1-glider@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191122112621.204798-1-glider@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;초기화 되지 않은 메모리 영역에 접근함으로써 생기는 에러를 검출해내는 구글의
KMSAN 세번째 RFC 패치셋입니다.  다른 SAN 시리즈와 마찬가지로 구글 syzkaller 에
사용되어 지난 2년간 200개가 넘는 버그를 찾아냈다고 하네요.&lt;/p&gt;

&lt;h2 id=&#34;lsf-mm-bpf-2020-call-for-proposals&#34;&gt;LSF/MM/BPF: 2020: Call for Proposals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191122172502.vffyfxlqejthjib6@macbook-pro-91.dhcp.thefacebook.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191122172502.vffyfxlqejthjib6@macbook-pro-91.dhcp.thefacebook.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;내년 LSF/MM 의 CFP 가 나왔습니다.  근데, 내년부턴 LSF/MM 에 BPF 세션이
추가되네요, 명칭도 LSF/MM/BPF 로 바뀌었습니다.  BPF 의 위상이 새삼 느껴지네요!&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4&#34;&gt;Linux 5.4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wjmzaD=BZ1hjUYu+RTnSGDLfCRwCdg99GeQpCjEwo9uzw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wjmzaD=BZ1hjUYu+RTnSGDLfCRwCdg99GeQpCjEwo9uzw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;여덟번의 rc 릴리즈를 끝으로 드디어 5.4 정식 버전이 릴리즈 되었습니다.  다행히
지난 일주일 간은 정말 별일 없었다는군요.  Thanksgiving 을 대비해 일찍 들어온
5.5 를 위한 풀리퀘스트가 대부분이었고, 네트워킹과 GPU 쪽의 일부 업데이트가
대부분이었다고 합니다.&lt;/p&gt;

&lt;p&gt;이렇게 5.5 머지 윈도우가 열렸는데, 머지윈도우 중에 Thanksgiving 이 있다는게
조금 걱정되긴 합니다만, 토발즈는 큰일은 없을 걸로 믿으며, 아이들 돌보느라 조금
처리가 늦어질 순 있겠다고 하네요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc8</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc8/</link>
      <pubDate>Tue, 12 Nov 2019 20:08:10 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc8/</guid>
      <description>

&lt;h2 id=&#34;patch-00-13-finish-off-smp-read-barrier-depends&#34;&gt;&lt;code&gt;[PATCH 00/13] Finish off [smp_]read_barrier_depends()&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191108170120.22331-1-will@kernel.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191108170120.22331-1-will@kernel.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alpha 에만 의존적인 메모리 모델 요소인 &lt;code&gt;smp_read_barrier_depends()&lt;/code&gt; 는
&lt;code&gt;READ_ONCE()&lt;/code&gt; 에 내장됨으로써 Alpha-specific 하지 않은 커널 코드에서는 Alpha 를
신경쓰지 않아도 되게 되었죠.  그럼에도 불구하고 이걸 신경쓰는 코드가 올라오는게
신경쓰였나 봅니다.
이 패치셋은 커널 코드의 모든 문서와 주석에서 해당 기능에 대한 설명을 삭제해
버립니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-v4-00-10-add-kernel-concurrency-sanitizer-kcsan&#34;&gt;[PATCH v4 00/10] Add Kernel Concurrency Sanitizer (KCSAN)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191114180303.66955-1-elver@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191114180303.66955-1-elver@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;구글의 동시성 버그를 잡아주는 KCSAN 패치입니다.  이번 버전은 x86 만을 위한
버전이지만 조만간 ARM64 와 POWER 지원을 추가할 예정이라는군요.  이번 네번째
버전은 이전 버전에 비해 성능이 33% 향상되었다고 합니다.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc8&#34;&gt;Linux 5.4-rc8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wiyR4Np_n5O6=rbf1GVNdr_zUd1WAC_GJDnc_hUhHqwWg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wiyR4Np_n5O6=rbf1GVNdr_zUd1WAC_GJDnc_hUhHqwWg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;정식버전이 나올지 rc8 이 나올지 나름 두근두근한 일주일이었는데, 결국 rc8 이
나왔습니다.  하지만 딱히 문제가 있었던 건 아니라는군요.  떠들썩했던 인텔 취약점
패치가 들어온 한주였음에도 매우 조용했다고 합니다.&lt;/p&gt;

&lt;p&gt;다다음주는 Thanksgiving 이군요.  이 점을 생각하면 다음주는 5.4 에 대한
수정사항보다는 5.5 머지윈도우를 위한 early pull request 가 오길 바란다고
합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc7</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc7/</link>
      <pubDate>Mon, 11 Nov 2019 07:17:00 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc7/</guid>
      <description>

&lt;h2 id=&#34;linux-5-4-rc7&#34;&gt;Linux 5.4-rc7&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wivmGEOTha5XkRHgH6VwfiroiN+PFVMNK3B0r-d0eFLPQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wivmGEOTha5XkRHgH6VwfiroiN+PFVMNK3B0r-d0eFLPQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;일곱번째 rc 버전이 릴리즈 되었습니다.  지난 rc6 때도 변경량이 생각보다 많아
토발즈가 고민했는데, 이번주도 토발즈가 원했던 것보단 변경량이 많았다고
하는군요.  다음주에 rc8 을 낼지 5.4 정식 버전을 낼지는 좀 더 고민해 봐야겠다고
합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc6</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc6/</link>
      <pubDate>Sat, 02 Nov 2019 09:24:21 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc6/</guid>
      <description>

&lt;h2 id=&#34;patch-v8-mm-debug-add-tests-validating-architecture-page-table-helpers&#34;&gt;[PATCH V8] mm/debug: Add tests validating architecture page table helpers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1572240562-23630-1-git-send-email-anshuman.khandual@arm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1572240562-23630-1-git-send-email-anshuman.khandual@arm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;아키텍쳐별 페이지 테이블 헬퍼 등을 테스트 하는 코드를 추가하는 패치입니다.
&lt;code&gt;CONFIG_DEBUG_VM_PGTABLE&lt;/code&gt; 컨피규레이션이 켜져 있으면 동작합니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-rfc-v2-00-25-add-kernelmemorysanitizer-infrastructure&#34;&gt;[PATCH RFC v2 00/25] Add KernelMemorySanitizer infrastructure&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191030142237.249532-1-glider@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191030142237.249532-1-glider@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;초기화 되지 않은 메모리 영역에 액세스 하는 에러를 찾아주는 KMSAN 을 커널에
추가하는 패치입니다.
KCSAN 과 비슷하게 syzkaller 를 통해 돌아가게끔 되어 있군요.&lt;/p&gt;

&lt;p&gt;False positive 문제가 존재할 수는 있는 모양입니다만, 구글 내부에서 syzbot 을
통해 테스트 한 환경에서는 중요한 false positive 는 나오지 않은 모양입니다.
구글 외부에서는 또 모른다는 거죠.&lt;/p&gt;

&lt;p&gt;요즘 커널 개발 프로세스를 개선하자는 이야기가 있고, 그 중에는 패치의 히스토리를
알고 싶다는 이야기가 많죠.
그래서인지 이 메일은 구글 내부 리뷰 시스템인 Gerrit 으로의 링크를 포함시켰네요.&lt;/p&gt;

&lt;h2 id=&#34;rfc-v2-mm-proactive-compaction&#34;&gt;[RFC v2] mm: Proactive compaction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191031005127.8037-1-nigupta@nvidia.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191031005127.8037-1-nigupta@nvidia.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Huge page 할당을 위해선 연속된 메모리 할당이 필요합니다.
Fragmentation 이 심한 시스템에선 이 할당이 어렵죠.
리눅스는 그래서 compaction 기법을 사용하는데요, 이걸 좀 더 적극적으로 하자는
패치입니다.
이를 통해 latency 가 개선될 수 있죠.&lt;/p&gt;

&lt;p&gt;단순히 hugepage 를 최대한, compaction 을 요청해가며 할당받는 드라이버를 통해 성능을 테스트 했군요.
80th percentile latency 까지는 몇십배 넘게 할당 응답시간을 줄였는데, 90th
percentile 부턴 별 차이 없군요.&lt;/p&gt;

&lt;h2 id=&#34;rfc-00-10-autonuma-optimize-memory-placement-in-memory-tiering-system&#34;&gt;[RFC 00/10] autonuma: Optimize memory placement in memory tiering system&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191101075727.26683-1-ying.huang@intel.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191101075727.26683-1-ying.huang@intel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DRAM 과 PMEM 등으로 구성되어 PMEM 을 NUMA node 로 간주하는 multi-tiering memory
system 을 염두에 두고 hot page / cold page 를 구분할 수 있게 해주는
패치셋입니다.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc6&#34;&gt;Linux 5.4-rc6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wg+8=w=sEx9WBF0OJj0SumQ4p-LuP8waRH=TSdAYDeqGg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wg+8=w=sEx9WBF0OJj0SumQ4p-LuP8waRH=TSdAYDeqGg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OSSEU 가 종료되고 토발즈는 집에 잘 도착했고, 시차 적응도 큰 문제는 없었기에
평소대로의 타이밍에 릴리즈가 가능했다고 합니다.
지난 rc5 도 큰 크기였고, rc6 는 이제 슬슬 변경사항이 줄어들어야 할, 토발즈
말로는 그러길 바라는 시점인데, 그렇지 못했습니다.
네트워킹 쪽에서 시점을 맞추지 못한 뒤늦은 풀리퀘스트들이 있었기 때문인데, 딱히
급작스런 문제가 있는 건 아니라는군요.
그렇다곤 해도 토발즈는 조금 찜찜한 모양입니다.
다음주까지 동향을 지켜봐야겠지만 다음주까지도 충분히 변경사항이 줄어들지
않는다면 rc8 까지 가야할 수도 있겠다고 합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc5</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc5/</link>
      <pubDate>Sun, 27 Oct 2019 12:48:30 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc5/</guid>
      <description>

&lt;h2 id=&#34;patch-00-12-mm-remove-arch-has-4level-hack&#34;&gt;&lt;code&gt;[PATCH 00/12] mm: remove __ARCH_HAS_4LEVEL_HACK&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1571822941-29776-1-git-send-email-rppt@kernel.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1571822941-29776-1-git-send-email-rppt@kernel.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;서로 다른 아키텍쳐 간의 페이지 테이블 구조로 인해 사용해야 했던
&lt;code&gt;__ARCH_HAS_4LEVEL_HACK&lt;/code&gt; 을 제거하는 패치입니다.  Alpha, arm, c6x 등의
아키텍쳐가 변경되는군요.
UML, qemu 등에서 부팅 테스트를 거쳤군요.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc5&#34;&gt;Linux 5.4-rc5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wgpewLxHxnO71tFHh=M4C4iUofJykMqq3r=eRyxUyVsiw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wgpewLxHxnO71tFHh=M4C4iUofJykMqq3r=eRyxUyVsiw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다섯번째 rc 버전 릴리즈입니다.
하지만 안타깝게도 이번 릴리즈는 마냥 조용하진 않았다는군요.
최근의 다른 rc5 들에 비하면 조금 큰 크기의 릴리즈가 되었습니다.
그렇다곤 해도 아주 특이할 만한 정도는 아니라 토발즈도 큰 걱정은 없다는군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc4</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc4/</link>
      <pubDate>Wed, 16 Oct 2019 20:29:00 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc4/</guid>
      <description>

&lt;h2 id=&#34;patch-0-8-add-kernel-concurrency-sanitizer-kcsan&#34;&gt;[PATCH 0/8] Add Kernel Concurrency Sanitizer (KCSAN)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191016083959.186860-1-elver@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191016083959.186860-1-elver@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;구글에서 만든 동시성 버그 탐색기능, KCSAN 을 추가하는 패치셋입니다.
처음 세상에 모습을 드러낸건 9월이었고, 최근 컨퍼런스들에서도 발표가 있었죠.
메커니즘은 간단하다면 간단한, 샘플링 기반입니다.
구글 내부 fuzzing tester 인 syzkaller 는 이미 이 기능을 켠채 돌아간다는군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-2-2-mm-zswap-support-thp&#34;&gt;[PATCH &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;] mm, zswap: Support THP&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1571111349-5041-2-git-send-email-teawater@gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1571111349-5041-2-git-send-email-teawater@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zswap 이THP 를 지원하도록 수정하는 패치입니다.  그냥 &lt;code&gt;zswap_frontswap_store()&lt;/code&gt;
함수가 THP 페이지를 연속적인 4 KiB 페이지로 인식하고 처리하게끔 했군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-rfc-v1-00-26-add-kernelmemorysanitizer-infrastructure&#34;&gt;[PATCH RFC v1 00/26] Add KernelMemorySanitizer infrastructure&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191018094304.37056-1-glider@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191018094304.37056-1-glider@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;구글에서 만든 또다른 sanitizer, KMSAN 입니다.  자매품으로 address sanitizer
등이 있고, 앞서 소개한 concurrency sanitizer 도 있죠.  KMSAN 은 초기화 안된
메모리에의 접근 문제를 찾아내는 Sanitizer 입니다.
Syzkaller 에 적용되어 지난 2년간 무려 200개가 넘는 문제를 발견했다고 합니다.&lt;/p&gt;

&lt;p&gt;이 패치셋은 KMSAN 을 적용한 커널을 QEMU 에서 부팅시킬 수 있게 해줍니다.
알려진 false positive 는 없지만 실제로 적용해보면 있을수도 있다고 하는군요.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc4&#34;&gt;Linux 5.4-rc4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wh3jhffc0u7s5n=-zUFpztuh+0Hfth4vwuyfc5SpBmvSA@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wh3jhffc0u7s5n=-zUFpztuh+0Hfth4vwuyfc5SpBmvSA@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;네번째 rc 버전 릴리즈입니다.  딱히 특별한 일 없이 평범한 릴리즈라고
자평하는군요.  토발즈는 이번주에 OSSummit Europe 참가를 위해 프랑스로 가는
모양입니다.  하지만 지금처럼 조용하면 큰일은 없을 것 같다고 하네요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc3</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc3/</link>
      <pubDate>Sun, 13 Oct 2019 12:22:50 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc3/</guid>
      <description>

&lt;h2 id=&#34;linux-5-4-rc3&#34;&gt;Linux 5.4-rc3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wjOhveT=qrq8HHyL7gpA5fmBtDa2ue7sO5ZSEBrrcY6Vg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wjOhveT=qrq8HHyL7gpA5fmBtDa2ue7sO5ZSEBrrcY6Vg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;세번째 rc 릴리즈입니다.  실제 문제가 발견되고 그에 대한 수정이 본격적으로
시작되는 시즌이라 rc2보단 당연히 크지만 역대 rc3 들과 비교하면 작은 편의
릴리즈라는군요.
staging driver 일부가 사라진 게 조금 릴리즈 크기를 크게 보이게 만들 수 있다는게
그나마 유의할 점일까요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc2</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc2/</link>
      <pubDate>Sat, 05 Oct 2019 11:46:07 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc2/</guid>
      <description>

&lt;h2 id=&#34;patch-v18-00-19-kunit-introduce-kunit-the-linux-kernel-unit-testing-framework&#34;&gt;[PATCH v18 00/19] kunit: introduce KUnit, the Linux kernel unit testing framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190923090249.127984-1-brendanhiggins@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190923090249.127984-1-brendanhiggins@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;어떻게 보면 별거 아닌 이유로 5.4 머지윈도우에서 튕겨나가고 만 kunit.
요청받은대로 파일 위치를 하위 디렉토리로 변경한 kunit 새 버전의 패치셋이
올라왔습니다.
&amp;lsquo;kunit/&amp;rsquo; 디렉토리와 kunit 을 위한 &amp;lsquo;Kconfig&amp;rsquo; 파일을 &amp;lsquo;lib/&amp;rsquo; 아래로 옮겼군요.&lt;/p&gt;

&lt;p&gt;이후 벌어진 대화가 재미있는데요, 토발즈는 이걸 5.5에 넣을 예정인데, 가능하면
그동안 실제 테스트 코드도 추가되면 좋겠다고 했습니다.
근데 테스트 프레임웍이 머지안되었는데 테스트 코드를?  메인테이너 간에 일이
복잡해지고 컨플릭 날 확률이 높아지니 이걸로 꽤 많은 이야기가 있었습니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-v2-perf-script-python-integrate-page-reclaim-analyze-script&#34;&gt;[PATCH v2] perf script python: integrate page reclaim analyze script&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1569899984-16272-1-git-send-email-laoar.shao@gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1569899984-16272-1-git-send-email-laoar.shao@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Page reclaim 을 좀더 잘 분석하기 위한 perf script 를 추가하는 패치셋의 두번째
버전입니다.
첫번째 버전은 이 블로그에서도 소개한 바 있죠.
첫번째 버전 이후로의 변화 중 눈에 띄는 건 파이썬 2.7 과 3.6 에서 모두
돌아가게끔 한 것이군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-v5-00-11-introduces-new-count-based-method-for-tracking-lockless-pagetable-walks&#34;&gt;[PATCH v5 00/11] Introduces new count-based method for tracking lockless pagetable walks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191003013325.2614-1-leonardo@linux.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191003013325.2614-1-leonardo@linux.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;THP promotion/demotion 과 동시에 page table 조작이 일어나는 걸 막기 위해
존재하는 &lt;code&gt;serialize_against_pte_lookup()&lt;/code&gt; 함수로 인해 발생하는 &lt;code&gt;munmap()&lt;/code&gt;
레이턴시 문제를 동시의 page table walk 존재 여부를 카운트 기반으로 추적해,
필요없을 땐 락을 잡지 않게 함으로써 레이턴시를 놀랍게 개선한 패치셋의 다섯번째
버전입니다.
이 블로그에서도 소개했죠.
지난 버전 이후로 인터럽트 처리 부분을 포함한 일부 부분이 조금 수정되었군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-mm-export-cma-alloc-and-release&#34;&gt;[PATCH] mm: export cma alloc and release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20191002212257.196849-1-salyzyn@android.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20191002212257.196849-1-salyzyn@android.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cma_alloc()&lt;/code&gt; 과 &lt;code&gt;cma_release()&lt;/code&gt; 함수를 드라이버에서도 쓸 수 있게 export 해주는
패치셋입니다.
안드로이드 ION 이라던지 RDMA, Camera 모듈들이 이에 의존적이어서 드라이버 레벨로
빌드가 안되기 때문에 이런 변경을 제안했다네요.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc2&#34;&gt;Linux 5.4-rc2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wiNT4Yk+36OXMyPuesrU88cFyDG_XnjRiKwaac09PJpQw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wiNT4Yk+36OXMyPuesrU88cFyDG_XnjRiKwaac09PJpQw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다시 일요일 오후 릴리즈로 돌아왔습니다.
큰 변화는 없고 그저 소소한 수정 사항들 뿐이었다는군요.
일반적으로 진짜 regression 에 대한 파악이 이루어지고 그에 대한 수정이
시작되는건 rc2 후라는 걸 감안하면 매우 평범한 릴리즈라고 합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.4-rc1</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.4-rc1/</link>
      <pubDate>Sat, 21 Sep 2019 10:00:48 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.4-rc1/</guid>
      <description>

&lt;h2 id=&#34;patch-0-2-introduce-new-perf-script-page-reclaim&#34;&gt;[PATCH 0/2] introduce new perf-script page-reclaim&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1568817522-8754-1-git-send-email-laoar.shao@gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1568817522-8754-1-git-send-email-laoar.shao@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Page reclaim 관련 성능 메트릭을 분석하기 위한 perf script 커맨드를 추가하는
패치입니다.  Direct reclaim 으로 인한 응답시간 폭증, page reclaim 이 왜
일어났는지, page reclaim 의 효과는 어땠는지 등을 알 수 있다는군요.&lt;/p&gt;

&lt;p&gt;구체적으로는 direct reclaim 이 몇번 일어났는지, 그 latency 분포는 어땠는지,
file / anon page 별로 reclaim, scan, sync write, async write 이 몇번
일어났는지, kswapd 는 몇번 일어났는지, kswapd latency 는 어땠는지 등등을
보입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ perf script report page-reclaim
    Direct reclaims: 4924
    Direct latency (ms)        total         max         avg         min
                          177823.211    6378.977      36.114       0.051
    Direct file reclaimed 22920
    Direct file scanned 28306
    Direct file sync write I/O 0
    Direct file async write I/O 0
    Direct anon reclaimed 212567
    Direct anon scanned 1446854
    Direct anon sync write I/O 0
    Direct anon async write I/O 278325
    Direct order      0     1     3
                   4870    23    31
    Wake kswapd requests 716
    Wake order      0     1
                  715     1

    Kswapd reclaims: 9
    Kswapd latency (ms)        total         max         avg         min
                           86353.046   42128.816    9594.783     120.736
    Kswapd file reclaimed 366461
    Kswapd file scanned 369554
    Kswapd file sync write I/O 0
    Kswapd file async write I/O 0
    Kswapd anon reclaimed 362594
    Kswapd anon scanned 693938
    Kswapd anon sync write I/O 0
    Kswapd anon async write I/O 330663
    Kswapd order      0     1     3
                      3     1     5
    Kswapd re-wakes 705

    Per process latency (ms):
         pid[comm]             total         max         avg         min
               timestamp  latency(ns)
           1[systemd]        276.764     248.933       21.29       0.293
           3406860552338: 16819800
           3406877381650: 5532855
           3407458799399: 929517
           3407459796042: 916682
           3407460763220: 418989
           3407461250236: 332355
           3407461637534: 401731
           3407462092234: 449219
           3407462605855: 292857
           3407462952343: 372700
           3407463364947: 414880
           3407463829547: 949162
           3407464813883: 248933444
         163[kswapd0]      86353.046   42128.816    9594.783     120.736
           3357637025977: 1026962745
           3358915619888: 41268642175
           3400239664127: 42128816204
           3443784780373: 679641989
           3444847948969: 120735792
           3445001978784: 342713657
           ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;git-pull-kselftest-update-for-linux-5-4-rc1&#34;&gt;[GIT PULL] Kselftest update for Linux 5.4-rc1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/be8059f4-8e8f-cd18-0978-a9c861f6396b@linuxfoundation.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/be8059f4-8e8f-cd18-0978-a9c861f6396b@linuxfoundation.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이블로그에서도 여러차례 소개했던 kunit 은 제가 오랫동안 메인라인에 머지되기를
기다려 왔던 기능입니다.
이번 kernel summit 에서 발표한 제 damon 이란 프로젝트도 kunit 을 이용해 test
driven development 기법을 적용했고, 그 효과를 톡톡히 봤죠.
이 패치셋이 4.9에 들어갈 예정이었고, Shuah Kahn 이 이번 머지 윈도우에
풀리퀘스트에 이 패치셋을 포함해 보냈는데요.
토발즈가 바로 퉤에엣 을 시전했습니다.&lt;/p&gt;

&lt;p&gt;이유가 재미있습니다, kunit 패치는 리눅스 소스코드 루트 디렉토리에 &lt;code&gt;kunit/&lt;/code&gt;
디렉토리를 추가하는데, 이게 토발즈 마음에 들지 않았습니다.
토발즈의 tab 키를 활용한 자동완성 기능을 부셨기 때문이죠.
&lt;code&gt;kernel/&lt;/code&gt; 디렉토리로 이용하기 위해 &lt;code&gt;k&lt;/code&gt; 만 타이핑 하고 탭키를 누르면 되었는데,
이제 &lt;code&gt;kunit/&lt;/code&gt; 디렉토리 때문에 이게 안되는 거죠.&lt;/p&gt;

&lt;p&gt;생각하기에 따라선 좀 억지 아니냐고 생각할 수 있고 저도 kunit 의 오랜 팬으로써
좀 아쉬운 마음이 있었는데요.
또 이제와서 생각해 보면 저도 &lt;code&gt;kernel/&lt;/code&gt; 넘어가기 위해 한번 더 키보드에 손대야
하는게 좀 불쾌했던 거 같기도 하네요. ;)&lt;/p&gt;

&lt;h2 id=&#34;patch-v4-00-11-introduces-new-count-based-method-for-monitoring-lockless-pagetable-walks&#34;&gt;[PATCH v4 00/11] Introduces new count-based method for monitoring lockless pagetable walks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190927234008.11513-1-leonardo@linux.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190927234008.11513-1-leonardo@linux.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;128개 vcpu 의 qemu 가 THP 로 매핑된 496 GiB 메모리 영역을 &lt;code&gt;munmap()&lt;/code&gt; 완료하는데
무려 275초가 걸린다고 합니다.
그 원인은 &lt;code&gt;serialize_against_pte_lookup()&lt;/code&gt; 함수였다고 하는군요.
이 함수는 &lt;code&gt;find_current_mm_pte()&lt;/code&gt; 내에서의 &lt;code&gt;pmd_t&lt;/code&gt; 에서 &lt;code&gt;pte_t&lt;/code&gt; 로의 캐스팅
또는 lockless page table walk 이 THP promotion/demotion 과 동시에 이루어지지
않게끔 보호하는 용도로 사용됩니다.
그렇다면, 실제 lockless page table walk 이 없다면
&lt;code&gt;serialize_against_pte_lookup()&lt;/code&gt; 은 호출될 필요가 없겠죠.&lt;/p&gt;

&lt;p&gt;이를 위해 이 패치셋은 현재 수행되고 있는 &lt;code&gt;find_current_mm_pte()&lt;/code&gt; 함수 갯수를
세고 그 갯수가 0이면 이 오버헤드가 되는 동시성 보호 코드를 생략하게 합니다.&lt;/p&gt;

&lt;p&gt;이 패치를 적용한 후 앞의 문제시 되던 작업에 걸리는 시간이 275초에서 무려 418 ms
으로 줄었다는군요!&lt;/p&gt;

&lt;h2 id=&#34;linux-5-4-rc1&#34;&gt;Linux 5.4-rc1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wgbGJ-SGeevEcgrThhPp+RwYOUUgWoZ3W27cbUpuB3VgA@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wgbGJ-SGeevEcgrThhPp+RwYOUUgWoZ3W27cbUpuB3VgA@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;평소보다 하루 늦은 월요일에 5.4 머지윈도우가 닫히고 rc1 릴리즈가
이루어졌습니다.
좀 미뤄진 머지를 처리하느라 늦어져서 하루 늦은 릴리즈가 되긴 했지만 대수로운
일은 아니라는군요.&lt;/p&gt;

&lt;p&gt;전체적인 릴리즈 내용도 평시와 크게 다른 내용은 없습니다.
AMD DRM 관련 변경이 많이 있지만 이는 하드웨어 구성에 따른 변화니까 무시하면
되고, 그걸 제외하고 보면 평소와 변경사항들의 분포도 비슷하다는군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Richard Stallman Resigns</title>
      <link>https://sjp38.github.io/post/rms_resigns/</link>
      <pubDate>Thu, 19 Sep 2019 21:57:01 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/rms_resigns/</guid>
      <description>&lt;p&gt;몇일 전, 리차드 스톨만이 FSF 회장은 물론이고 의장직에서도 사임한다는 소식이
전해졌습니다.  무슨 일이 있었는지 아래의 reddit 코멘트가 가장 잘 설명하고
있다는 LWN 코멘트[1] 를 참고해, 해당 reddit 코멘트를 번역해 봅니다.&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://lwn.net/Articles/799391/&#34; target=&#34;_blank&#34;&gt;https://lwn.net/Articles/799391/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;최근 공개된 한 여성의 증언에 따르면 그녀가 17세 때, Epstein 이 그녀에게 Marvin
Minsky 와 성관계를 가지라고 했습니다.
Minsky 는 MIT Media Lab 창시자이자 A.I 선도자였으며, 2016년에 사망했습니다.
스톨만은 한 메일링 리스트에서 (Minsky 를 성폭행으로 비난하는 어느 시위 주도자의
주장에 대한 답변으로) 이렇게 주장했습니다, 자신도 Epstein 은 비난하지만, Minsky
는 그녀가 강요당한 걸 몰랐을 가능성이 있다구요:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;많은 시나리오를 상상해 볼 수 있겠습니다만, 가장 그럴싸한 시나리오는 그에게는
그녀가 스스로 원해서 그러는듯 보였을 거라는 겁니다.
Epstein 이 그녀를 강요했다면, 그는 그가 연관된 것을 그녀가 감추도록 해야 했을
겁니다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;일부 SJW 는 &amp;ldquo;Remove Richard Stallman&amp;rdquo; 이라는 Medium 포스트를 작성했습니다.
Vice 와 The Daily Beast 와 같은 미디어 직판장은 Stallman 이 그 여성이 &amp;ldquo;완전히
원했다&amp;rdquo; 그리고 &amp;ldquo;Epstein 을 방어하고 있다&amp;rdquo; 라고 했다고 거짓말하고 그의 발언을
잘못된 의미로 인용했습니다.
Stallman 은 이제 MIT 에서 사퇴하라는 압력을 받고 있습니다.&lt;/p&gt;

&lt;p&gt;더 나아가서 이 증언에 그녀가 Minsky 와 성관계를 가졌다는 이야기는 없고, Epstein
이 그녀에게 그러라 했을 뿐이라는 이야기만 있습니다, 그리고 물리학자 Greg
Benford 에 따르면 그녀가 Minsky 를 유혹했고 그는 그녀를 거절했다고 합니다:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;내가 알죠, 내가 거기 있었습니다.
Minsky 는 그녀를 거절했고, 제게 그 이야기를 했습니다.
그녀는 우리가 이야기 하는걸 보았고 제게 다가오지 않았습니다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이는 Stallman 의 생각에 대한 완전한 검증 같습니다.
Minsky 가 무엇을 알았는지가 중요치 않다면, &amp;ldquo;Minsky 가 한 여성을 성폭행 했다&amp;rdquo; 와
&amp;ldquo;Epstein 이 17살 여성에게 그의 강요를 Minsky 에게 알리지 않은 채 성행위를
가지라 했다&amp;rdquo; 사이에 차이가 없다면, 왜 그는 그녀를 거절했을까요?&lt;/p&gt;

&lt;p&gt;추가 수정: 그는 그가 설립한 Free Software Foundation 에서도 사임했습니다.
자유 소프트웨어에의 우울한 소식입니다, 저는 Stallman 같은 순수한 믿음을 가진
사람이 다양한 종류의 피해야할 선택을 막는데 필수적이라 생각하거든요.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Context: In a recently unsealed deposition a woman testified that, at the age
of 17, Epstein told her to have sex with Marvin Minsky. Minsky was a founder of
the MIT Media Lab and pioneer in A.I. who died in 2016. Stallman argued on a
mailing list (in response to a statement from a protest organizer accusing
Minsky of sexual assault) that, while he condemned Epstein, Minsky likely did
not know she was being coerced:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;We can imagine many scenarios, but the most plausible scenario is that she
presented herself to him as entirely willing. Assuming she was being coerced by
Epstein, he would have had every reason to tell her to conceal that from most
of his associates.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some SJW responded by writing a Medium post called &amp;ldquo;Remove Richard Stallman&amp;rdquo;.
Media outlets like Vice and The Daily Beast then lied and misquoted Stallman as
saying that the woman was likely &amp;ldquo;entirely willing&amp;rdquo; and as &amp;ldquo;defending Epstein&amp;rdquo;.
He has now been pressured to resign from MIT&lt;/p&gt;

&lt;p&gt;Furthermore the deposition doesn&amp;rsquo;t say she had sex with Minsky, only that
Epstein told her to do so, and according to physicist Greg Benford she
propositioned Minsky and he turned her down:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I know; I was there. Minsky turned her down. Told me about it. She saw us
talking and didn’t approach me.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This seems like a complete validation of the distinction Stallman was making.
If what Minsky knew doesn&amp;rsquo;t matter, if there&amp;rsquo;s no difference between &amp;ldquo;Minsky
sexually assaulted a woman&amp;rdquo; and &amp;ldquo;Epstein told a 17-year-old to have sex with
Minsky without his knowledge or consent&amp;rdquo;, then why did he turn her down?&lt;/p&gt;

&lt;p&gt;Edit: He has also resigned from the Free Software Foundation, which he founded.
Grim news for free software, since I think true-believing purists like Stallman
are vital to prevent various kinds of co-option.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.3</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.3/</link>
      <pubDate>Thu, 12 Sep 2019 17:59:25 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.3/</guid>
      <description>

&lt;h2 id=&#34;patch-x86-mm-enable-5-level-paging-support-by-default&#34;&gt;[PATCH] x86/mm: Enable 5-level paging support by default&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190913095452.40592-1-kirill.shutemov@linux.intel.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190913095452.40592-1-kirill.shutemov@linux.intel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5 레벨 페이지 테이블 기능이 들어간지도 어느덧 시간이 지났죠.
인텔 내부적 테스트 상으론 이 기능을 켰을 때 4 레벨 페이지 테이블 기계에서도
딱히 리그레션 등은 나타나지 않았고, 주요 배포판들은 5 레벨 페이지 테이블
서포트를 기본으로 켤것으로 보인다고 합니다.
따라서 이 기능을 아예 디폴트로 켜져있게 하는 패치입니다.&lt;/p&gt;

&lt;p&gt;v5.4 에 들어가기엔 좀 늦은 관계로, v5.5 에 들어갈 것 같다는군요.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-3&#34;&gt;Linux 5.3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LPC 와 커널 서밋 등으로 인해 한주 늦춰진 5.3 릴리즈가 이뤄졌습니다.
지난 일주일은 고요했을 뿐더러, 이 늦춰진 일정 덕에 몇가지 수정도 더 이뤄질 수
있었다고 토발즈는 평하는군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.3-rc8</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.3-rc8/</link>
      <pubDate>Wed, 04 Sep 2019 23:56:59 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.3-rc8/</guid>
      <description>

&lt;h2 id=&#34;patch-rfc-00-14-the-new-slab-memory-controller&#34;&gt;[PATCH RFC 00/14] The new slab memory controller&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190905214553.1643060-1-guro@fb.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190905214553.1643060-1-guro@fb.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;슬랩 할당자의 실제 메모리 활용률이 대부분 45-65 퍼센트에 불과했다고 합니다.
이는 슬랩 페이지가 각 메모리 cgroup 마다 배타적으로 사용되기 때문입니다.  적은
메모리만 사용하는 cgroup 여러개가 존재하면 슬랩에서 크게 받아놓은 메모리에서
조금씩만 실제 사용되니까 전체 활용률은 낮게 되는거죠.  이 RFC 패치셋은 서로
다른 cgroup 들이 슬랩 페이지를 공유할 수 있게 함으로써 이 문제를 해결합니다.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-3-rc8&#34;&gt;Linux 5.3-rc8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=whBQ+6c-h+htiv6pp8ndtv97+45AH9WvdZougDRM6M4VQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=whBQ+6c-h+htiv6pp8ndtv97+45AH9WvdZougDRM6M4VQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;평소대로라면 5.3 정식 릴리즈가 되었을테고 별다른 문제는 없었지만, rc7
릴리즈에서 이야기된대로 LPC 와 커널 서밋도 있고 한 이유로, -rc8 이 릴리즈
되었습니다.
그렇다보니 특기할 만한 사항은 없습니다만, 정식 릴리즈를 늦춘 덕에 stable 트리로
넘어갈 뻔한 수정사항 몇가지를 이번 릴리즈 내에 넣을 수 있게 되었다는군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.3-rc7</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.3-rc7/</link>
      <pubDate>Mon, 02 Sep 2019 10:57:44 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.3-rc7/</guid>
      <description>&lt;p&gt;평소보다 늦은 월요일 아침 릴리즈가 이뤄졌습니다.  일요일에 토발즈가
컴퓨터로부터 떨어져 있었다는군요.&lt;/p&gt;

&lt;p&gt;늦어진 릴리즈 덕분에 뒤늦게 들어온 풀리퀘스트를 더 받을 수 있었고, 이로 인해
이번 rc 릴리즈는 평소보다 좀 사이즈가 큽니다.
따라서 이번 릴리즈의 크기가 불안정성을 의미하는 게 아니라 5.3 정식 릴리즈를 늦출 필요는 없습니다만, 공교롭게도 또한 다음주는 LPC 와 커널 서밋이 있죠.
토발즈도 그렇고 많은 다른 개발자들도 이때 LPC 와 커널 서밋에 참가할 거라, rc7
을 마지막으로 5.3 릴리즈를 하면 5.4 머지 윈도우의 많은 시간을 여행에 보내게
되므로, 그냥 rc8 을 릴리즈 하겠다고 합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.3-rc6</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.3-rc6/</link>
      <pubDate>Thu, 22 Aug 2019 15:30:54 +0200</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.3-rc6/</guid>
      <description>

&lt;h2 id=&#34;linux-5-3-rc6&#34;&gt;Linux 5.3-rc6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wgAKCTq+t5YnG6HzrF62=rr9H=q3LqokEP0_bQRHLwYNw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wgAKCTq+t5YnG6HzrF62=rr9H=q3LqokEP0_bQRHLwYNw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;오늘은 리눅스의 28번째 생일입니다.  따라서 오늘 rc6 릴리즈는 28년만의
릴리즈이기도 하군요.  토발즈도 감회가 깊었는지 오늘의 릴리즈 메일엔 최초 릴리즈
메일에 적었던 내용과 비슷하게 시작 부분을 꾸몄네요.
감회 깊은 날, 감회 깊은 릴리즈입니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;리눅스를 사용하는 여러분들 안녕하세요,

저는 486 AT 클론과 그외의 많은 다른 하드웨어를 위한 (자유) 운영체제를 (취미보단
더 진지하게) 만들고 있습니다.  이 일은 28년째 지속되고 있고, 아직도 끝나지
않았습니다.  이 릴리즈에 의해 만들어진 (또는 그보다 오래된) 모든 버그에 대한
피드백을 부탁드립니다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;어쨌건, 아주 특별할 건 없는 릴리즈였습니다만, 토발즈가 원하던 것에 비하면
변경사항이 좀 많았다는군요.  다음주에 확실히 변경사항이 줄지 않는다면 rc8 을
만들어야 할 것 같다고 합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News v5.3-rc5</title>
      <link>https://sjp38.github.io/post/lkml_news_v5.3-rc5/</link>
      <pubDate>Mon, 19 Aug 2019 14:19:58 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v5.3-rc5/</guid>
      <description>

&lt;h2 id=&#34;rfc-patch-0-2-add-predictive-memory-reclamation-and-compaction&#34;&gt;[RFC PATCH 0/2] Add predictive memory reclamation and compaction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190813014012.30232-1-khalid.aziz@oracle.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190813014012.30232-1-khalid.aziz@oracle.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;커널의 page reclamation 과 compaction 등은 기본적으로 시스템 메모리 잔여량이
부족할 때 시작됩니다.  하지만 이땐 이미 때가 늦었습니다.  reclamation 과
compaction 을 열심히 하긴 하지만 어플리케이션은 이미 메모리 부족으로 인한
응답시간 폭증 등을 겪게 됩니다.&lt;/p&gt;

&lt;p&gt;이 패치셋은 시스템의 메모리 부족을 미리 예측하고 reclamation 과 compaction 을
시작하기 위한 패치셋입니다.  시간축에 따라 메모리 사용량 변화 추세를 보면 이걸
예측할 수 있지 않겠냐는 것이죠.&lt;/p&gt;

&lt;p&gt;이 패치셋은 이런 아이디어에 기반해 시스템의 메모리 부족을 예측하고 kswapd 를
깨울지 재울지를 결정합니다.  간단한 dd 기반의 테스트를 통해 그 성능을 측정한
결과도 있습니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-kbuild-change-fallthrough-comments-to-attributes&#34;&gt;[PATCH] kbuild: Change fallthrough comments to attributes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190812214711.83710-1-nhuck@google.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190812214711.83710-1-nhuck@google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C 언의 &lt;code&gt;switch&lt;/code&gt; 구문의 fall-through 기능은 복잡한 기능을 구현하기 좋긴 한데
암묵적으로 이루어지는 fall-through 를 방지하기 위해 &lt;code&gt;break;&lt;/code&gt; 를 추가하는 걸
깜박하곤 하는 경우가 많습니다.  GCC 는 주석으로 이 부분은 fall-through 가 맞다,
라는걸 지정할 수 있게 하고 이 주석이 없는 경우는 모두 fall-through 를
막아버림으로써 &lt;code&gt;switch&lt;/code&gt; 의 명시적 fall-through 기능이 가능하게 합니다.&lt;/p&gt;

&lt;p&gt;리눅스 커널 역시 이런 방식으로 암묵적 fall-through 에 의한 버그를 극복하려
노력하는데요, clang 은 이걸 주석 형태가 아니라 attribute 형태로 지원합니다.  이
패치는 이런 차이를 어드레스 하기 위한 패치입니다.&lt;/p&gt;

&lt;h2 id=&#34;rfc-mm-proactive-compaction&#34;&gt;[RFC] mm: Proactive compaction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20190816214413.15006-1-nigupta@nvidia.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20190816214413.15006-1-nigupta@nvidia.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Huge page 등의 할당 시간은 fragmentation 이 심한 메모리에선 길어지거나 아예
실패할 수 있죠.  Huge page 에 성능이 의존적인 어플리케이션에겐 큰 문제입니다.&lt;/p&gt;

&lt;p&gt;이 패치는 page order 별 fragmentation threshold 를 두고 이에 맞춰 page order
별로 다른 compaction 을 수행하자는 겁니다.&lt;/p&gt;

&lt;h2 id=&#34;linux-5-3-rc5&#34;&gt;Linux 5.3-rc5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CAHk-=wiO5-puMa30fCwtgze57MH2JOzedVcEVotEviYmmQNihQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CAHk-=wiO5-puMa30fCwtgze57MH2JOzedVcEVotEviYmmQNihQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다섯번째 rc 릴리즈입니다.  노드 로컬 할당 대 huge page 할당 관련 커밋 일부가
리버트 시키지 않는 등의 몇가지 문제를 제외하면 조용한 릴리즈 주간이었다는군요.
잘 안정화 되어가고 있다는 증거겠지요.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
