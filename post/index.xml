<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hacklog</title>
    <link>https://sjp38.github.io/post/</link>
    <description>Recent content in Posts on Hacklog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Your Name</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0900</lastBuildDate>
    <atom:link href="/post/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LKML News after v4.17-rc4</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.17-rc4/</link>
      <pubDate>Mon, 07 May 2018 12:12:32 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.17-rc4/</guid>
      <description>

&lt;h2 id=&#34;linux-4-17-rc4&#34;&gt;Linux 4.17-rc4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFyry0qeZvYjU5pf8a6zvb_ALmP-2T9+HZH2DHK93P6rQg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFyry0qeZvYjU5pf8a6zvb_ALmP-2T9+HZH2DHK93P6rQg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;어느새 네번째 rc 버전입니다.  v4.17 을 향한 여정이 절반을 넘어가는군요.  이번 릴리즈도 특이사항 없이 평범합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.17-rc3</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.17-rc3/</link>
      <pubDate>Mon, 30 Apr 2018 12:59:19 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.17-rc3/</guid>
      <description>

&lt;h2 id=&#34;linux-4-17-rc3&#34;&gt;Linux 4.17-rc3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFyu=y0SBesB+vx3JZFGcOhP+tuVG7sjfrkfBhXHTe0Skg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFyu=y0SBesB+vx3JZFGcOhP+tuVG7sjfrkfBhXHTe0Skg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;세번째 rc 버전이 나왔습니다.  평소보다 좀 일찍 왔군요.  rc2 에 비해 커다란
릴리즈이긴 한데, 그렇다 해도 평범한 릴리즈라고 리누스는 이야기 합니다.
대부분의 변경 사항이 드라이버 쪽 수정이기 때문이라고 하는군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-v4-00-16-rearrange-struct-page&#34;&gt;[PATCH v4 00/16] Rearrange struct page&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180430202247.25220-1-willy@infradead.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180430202247.25220-1-willy@infradead.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이 블로그에서도 소개했던, Matthew Wilcox 의 &amp;lsquo;struct page&amp;rsquo; 정리 패치의 네번째
버전입니다.  지난주 LSFMM 에서도 소개한 모양인데, 이 변화의 전/후를 google
spread sheet 로 정리한 문서도 여기서 공개했나보군요:
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1tvCszs_7FXrjei9_mtFiKV6nW1FLnYyvPvW-qNZhdog/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;https://docs.google.com/spreadsheets/d/1tvCszs_7FXrjei9_mtFiKV6nW1FLnYyvPvW-qNZhdog/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.17-rc2</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.17-rc2/</link>
      <pubDate>Mon, 23 Apr 2018 12:03:23 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.17-rc2/</guid>
      <description>

&lt;h2 id=&#34;linux-v4-17-rc2&#34;&gt;Linux v4.17-rc2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFwzkGuq5ASF-vhYj7mEX26V0K+uZCLWi1BLYq+9F1n-Rw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFwzkGuq5ASF-vhYj7mEX26V0K+uZCLWi1BLYq+9F1n-Rw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;두번째 rc 버전의 릴리즈입니다.  &lt;code&gt;perf&lt;/code&gt; 와 테스트 스크립트 쪽에 변경사항이 좀
많긴 하지만 평소와 크게 다르지 않은 추이라는군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.17-rc1</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.17-rc1/</link>
      <pubDate>Mon, 16 Apr 2018 10:59:58 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.17-rc1/</guid>
      <description>

&lt;h2 id=&#34;linux-v4-17-rc1&#34;&gt;Linux v4.17-rc1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFx62iBkj+hOmhLksUtvjwTcm_o1dwcyvaNnVpJ-AmvzVQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFx62iBkj+hOmhLksUtvjwTcm_o1dwcyvaNnVpJ-AmvzVQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2주간의 머지 윈도우가 지나고, v4.17-rc1 이 릴리즈 되었습니다.  크게 특별할 것
없이 평범한 머지 윈도우였다고 토발즈는 평하는군요.  그리고 이번에 git objects
mark 가 4백만을 넘겼습니다.  따라서 다음 커널이 v5.0 이어도 될 것 같은데, 꼭
다음 버전에서 그렇게 할지는 모르겠다는군요.  리눅스 커널에서 버전은 그저 시간이
흘렀음을 의미할 뿐, 큰 변화가 있어서 메이저 버전 넘버가 바뀌는게 아니기
때문이죠.  참고로 v3.0 과 v4.0 은 각각 git objects mark 2백만과 4백만에서
이루어졌군요.&lt;/p&gt;

&lt;p&gt;암튼 언젠가는 v5.0 을 릴리즈 하겠지만 너무 큰 의미를 부여하지 말아달라고 이야기 하고 있습니다.&lt;/p&gt;

&lt;p&gt;토발즈는 또한 이번 머지 윈도우에서의 변화로 몇가지를 꼽는데요.
오래된 아키텍쳐인 backfin, cris, frv, m32r, metag, mn10300, score, tile
아키텍쳐의 지원을 끊기로 했고 nds32 라는 새로운 아키텍쳐를 지원하게 되었군요.
해당 아키텍쳐에 지원이 더 필요하다면 언제든 되살려도 좋지만 본인이 잘 관리할 수
있음을 증명해야 함을 한번 더 언급하고 있습니다.&lt;/p&gt;

&lt;p&gt;또한, 이번 머지 윈도우에선 클린업이 꽤 있었습니다.  staging 드라이버들 몇개가
제거되었고, spdx 를 사용함으로써 카피라이트 문구도 많이 줄었습니다.
pre-shipped lexer / parser 파일들도 사라졌구요.&lt;/p&gt;

&lt;p&gt;결국, 이번 릴리즈는 추가된 코드 라인보다 삭제된 코드 라인이 많았던 릴리즈군요.
프로젝트 관리자로써 토발즈가 속시원할 것 같습니다.  이런 경우는 커널 릴리즈
역사상 처음이라는군요.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 13538 files changed, 627723 insertions(+), 818855 deletions(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;patch-v10-00-25-speculative-page-faults&#34;&gt;[PATCH v10 00/25] Speculative page faults&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1523975611-15978-1-git-send-email-ldufour@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1523975611-15978-1-git-send-email-ldufour@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;어느새 열번째 버전의 speculative page faults 패치셋입니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-v2-00-12-improve-shrink-slab-scalability-old-complexity-was-o-n-2-new-is-o-n&#34;&gt;[PATCH v2 00/12] Improve shrink_slab() scalability (old complexity was O(n^2), new is O(n))&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/152397794111.3456.1281420602140818725.stgit@localhost.localdomain&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/152397794111.3456.1281420602140818725.stgit@localhost.localdomain&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;많은 memort shrinker 들 또는 메모리 cgroups 를 가진 시스템에서는 그 수의 제곱에
비례해 &lt;code&gt;shrink_slab()&lt;/code&gt; 의 수행시간이 증가하는데, 이 문제를 해결하고자 하는
패치셋입니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# echo 3 &amp;gt; /proc/sys/vm/drop_caches&lt;/code&gt; 의 수행시간을 사용해 성능 차이를
측정했군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-00-21-mm-thp-swap-swapout-swapin-thp-as-a-whole&#34;&gt;[PATCH 00/21] mm, THP, swap: Swapout/swapin THP as a whole&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180417020230.26412-1-ying.huang@intel.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180417020230.26412-1-ying.huang@intel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;THP (Transparent Huge Page) 는 swap out 되기 전에 regular page 로 쪼개져야
했습니다.  이 작업에 많은 시간이 걸렸기에 한번에 THP 를 swap out 하기 위한
작업을 Huang Ying 이 해왔고 일단 쪼개는 작업은 최후로 미뤄뒀는데 마침내 완전히
THP 단위로 swap out 을 행하는 패치셋을 올렸습니다.&lt;/p&gt;

&lt;p&gt;RAM 으로 PMEM swap device 를 시뮬레이션 해서 vm-scalability 벤치마크의
swap-w-seq 테스트를 16개 프로세스로 실험한 결과, 약 10배의 성능 개선을
보았군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-tip-core-rcu-0-21-contention-reduction-for-v4-18&#34;&gt;[PATCH tip/core/rcu 0/21] Contention reduction for v4.18&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180423030258.GA23370@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180423030258.GA23370@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RCU 의 루트 &amp;lsquo;rcu_node&amp;rsquo; 구조체로의 락 컨텐션을 줄이는 Paul McKenney 의
패치셋입니다.  별 문제 없으면 4.18 버전에 들어가겠군요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.16</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16/</link>
      <pubDate>Mon, 02 Apr 2018 07:13:40 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16&#34;&gt;Linux 4.16&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFyxn0bu5jOAJvO_63GHaGMkJ0uA=bVBm2T3HVX9SimZzw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFyxn0bu5jOAJvO_63GHaGMkJ0uA=bVBm2T3HVX9SimZzw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;릴리즈 마지막 주 치고는 네트워킹 쪽에 조금 변경사항이 있었습니다만, 큰 문제가
될 정도는 아니었습니다.  결과, 4.16이 드디어 릴리즈 되었습니다!  동시에 4.17
머지 윈도우가 시작되는군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-0-2-move-kfree-rcu-out-of-rcu-code-and-use-kfree-bulk&#34;&gt;[PATCH 0/2] Move kfree_rcu out of rcu code and use kfree_bulk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1522647064-27167-1-git-send-email-rao.shoaib@oracle.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1522647064-27167-1-git-send-email-rao.shoaib@oracle.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;kfree_rcu() 대신 kfree_bulk() 라는 새로 만들어진, 더 효율적인 기능을 사용하도록
하는 패치입니다.&lt;/p&gt;

&lt;h2 id=&#34;rfc-patch-0-1-mm-support-multiple-kswapd-threads-per-node&#34;&gt;[RFC PATCH 0/1] mm: Support multiple kswapd threads per node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1522661062-39745-1-git-send-email-buddy.lumpkin@oracle.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1522661062-39745-1-git-send-email-buddy.lumpkin@oracle.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NUMA 아키텍쳐에서 리눅스 커널은 NUMA 노드당 하나의 kswapd 쓰레드를 띄웁니다.
노드당 kswapd 쓰레드 수를 늘려 성능을 높이려는 쓰레드입니다.  결국은 이런
움직임이 있어야 할거라고 봅니다만, 당장 이 패치에 대해서는 수정 요청 의견도 꽤
있군요.&lt;/p&gt;

&lt;h2 id=&#34;rfc-group-struct-page-elements&#34;&gt;[RFC] Group struct page elements&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180408142334.GA29357@bombadil.infradead.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180408142334.GA29357@bombadil.infradead.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;커널에서 페이지를 관리하는 구조체인 &lt;code&gt;struct page&lt;/code&gt; 는 매우 복잡한 구조로
되어있고, 페이지가 어떤 목적으로 쓰이느냐에 따라 같은 필드가 다른 목적으로
쓰이기도 합니다.
이 RFC 패치는 이 혼란스러운 구조를 좀 개선해 보려는 시도를 담고 있습니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-1-2-slab-gfp-zero-is-incompatible-with-a-constructor&#34;&gt;[PATCH &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;] slab: &lt;code&gt;__GFP_ZERO&lt;/code&gt; is incompatible with a constructor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180410125351.15837-1-willy@infradead.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180410125351.15837-1-willy@infradead.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;시작은 김민찬 님의 null pointer dereference 문제에 대한 수정을 담은
패치셋이었습니다
(&lt;a href=&#34;https://lkml.kernel.org/r/20180409015815.235943-1-minchan@kernel.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180409015815.235943-1-minchan@kernel.org&lt;/a&gt;).
이걸 Matthew 는 근본적인 실수가 있었던 것 같다고 보고 이 패치셋을 내놓았습니다.
메모리 할당 요청에 &lt;code&gt;__GFP_ZERO&lt;/code&gt; 플래그를 넣으면 메모리 영역을 0으로 초기화 해서
할당을 해줍니다.  그런데 constructor 가 있다면 초기화 작업을 constructor 에서
해야 하기에 &lt;code&gt;__GFP_ZERO&lt;/code&gt; 플래그를 여기에 넣는건 뭔가 이상하죠.
이 패치셋은 그런 경우는 모두 실수에 의한 것이라 보고 경고를 표시해 주도록
합니다.&lt;/p&gt;

&lt;h2 id=&#34;rfc-tip-locking-lockdep-v6-20-20-lockdep-selftest-add-a-test-case-for-srcu&#34;&gt;[RFC tip/locking/lockdep v6 &lt;sup&gt;20&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;] lockdep/selftest: Add a test case for SRCU&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180411135721.22723-1-boqun.feng@gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180411135721.22723-1-boqun.feng@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;리눅스 커널의 락킹 관련 문제 추적 기능인 &lt;code&gt;lockdep&lt;/code&gt; 이 SRCU 를 지원하게 하는
패치와 함께 올라온 패치입니다.
&lt;code&gt;lockdep&lt;/code&gt; 을 위한 selftest 에 SRCU 기능 역시 테스트하도록 테스트를
추가했습니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.16-rc7</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc7/</link>
      <pubDate>Mon, 26 Mar 2018 08:45:19 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc7/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc7&#34;&gt;Linux 4.16-rc7&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFxpxHnWBeTXN+DKqwCMW_=T2cR8UxSBVk_6c8LL7Et5JQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFxpxHnWBeTXN+DKqwCMW_=T2cR8UxSBVk_6c8LL7Et5JQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.16을 향한 일곱번째 rc 가 릴리즈 되었습니다.  평소대로라면 이게 마지막 rc 여야
할텐데, 평소와 다름없거나 변경사항이 적은 편이던 그동안의 rc와 달리 이번 rc 는
좀 변경사항이 많군요.  그렇다곤 해도 아마도 네트워킹 쪽 코드 머지가 늦었기
때문으로 보이며 rc8을 릴리즈할 생각은 아직은 없다고 토발즈는 이야기 하네요.&lt;/p&gt;

&lt;p&gt;더불어, 토발즈가 rc 릴리즈 때마다 변경 사항들을 정리하기 위해 주로 사용하는 git
사용 스크립트를 공개했습니다.&lt;/p&gt;

&lt;p&gt;다음주는 4.16이 릴리즈 될까요?  아니면, rc8이?&lt;/p&gt;

&lt;h2 id=&#34;patch-mm-list-lru-replace-spinlock-with-rcu-in-list-lru-count-one&#34;&gt;[PATCH] mm/list_lru: replace spinlock with RCU in &lt;code&gt;__list_lru_count_one&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1522137544-27496-1-git-send-email-lirongqing@baidu.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1522137544-27496-1-git-send-email-lirongqing@baidu.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;list_lru_count_one()&lt;/code&gt; 이 스핀락을 잡기 때문에 &lt;code&gt;shrink_slab()&lt;/code&gt; 이 많은 시간을
소모하게 되는데, 이를 스핀락 대신 RCU 를 사용하게 해서 최적화 시킨 패치입니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; 를 사용해 커다란 메모리를 사용한 후 파일을 제거하고서
&lt;code&gt;/cgroup/memory/test/memory.limit_in_bytes&lt;/code&gt; 의 크기를 작게 잡아 인위적으로
reclaim 을 유발시키고 여기에 걸리는 시간을 측정했군요.  기존 0.415초에서 최적화
후 0.395초로 개선되었습니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-v10-00-62-convert-page-cache-to-xarray&#34;&gt;[PATCH v10 00/62] Convert page cache to XArray&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180330034245.10462-1-willy@infradead.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180330034245.10462-1-willy@infradead.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;XArray 패치 중 일부가 이미 Andrew Morton 의 -next 트리에 들어갔습니다.  Matthew
Wilcox 는 XArray 를 활용하는 패치를 이어서 계속 올리고 있군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-mm-limit-a-process-rss&#34;&gt;[PATCH] mm: limit a process RSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1522386674-12047-1-git-send-email-lirongqing@baidu.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1522386674-12047-1-git-send-email-lirongqing@baidu.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ulimit -m&lt;/code&gt; 명령을 이용해 프로세스의 최대 RSS (Resident Set Size) 를 제어할 수
있는 인터페이스가 있지만 실제로 커널이 제한을 하고 있진 않습니다.  제한하도록
구현하는 패치입니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.16-rc6</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc6/</link>
      <pubDate>Mon, 19 Mar 2018 10:19:34 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc6/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc6&#34;&gt;Linux 4.16-rc6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFzV1nffUeriZLksK90noD49T+w+WmgBsYMAO13rTbn3Pg@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFzV1nffUeriZLksK90noD49T+w+WmgBsYMAO13rTbn3Pg@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.16 여섯번째 rc 버전이 나왔습니다.  4.16을 향한 이번 사이클은 상당히 순탄하게
진행되는군요.  rc7 까진 만들 예정이라고 하는데, 그 후엔 4.16이 안정적으로
나오게 될 것 같습니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.16-rc5</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc5/</link>
      <pubDate>Mon, 12 Mar 2018 10:08:11 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc5/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc5&#34;&gt;Linux 4.16-rc5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFxXAMHeD8zz1BLv9r_2rjWJ6xE=cNGVAoWOvQJog7oz9A@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFxXAMHeD8zz1BLv9r_2rjWJ6xE=cNGVAoWOvQJog7oz9A@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;여전히 특이사항 없는 한주를 거쳐 다섯번째 rc 버전이 나왔습니다.  이번 릴리즈가
기존의 rc5 단계보단 조금 크지만 특이할 정도는 아닌 모양이군요.  개인적으로 눈에
띈 부분은, overlayfs, xfs 등의 파일시스템의 변경, 그리고 perf 와 selftest 쪽
변경이 있군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-v9-00-24-speculative-page-faults&#34;&gt;[PATCH v9 00/24] Speculative page faults&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1520963994-28477-1-git-send-email-ldufour@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1520963994-28477-1-git-send-email-ldufour@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Speculative page faults 의 9번째 패치셋입니다.  Michael Hocko 가 이거 너무 자주
올리는 거 아니냐고 한마디 했고, 패치 저자인 Laurent Dufour 도 오케이 했네요.&lt;/p&gt;

&lt;h2 id=&#34;patch-00-32-docs-vm-convert-to-rest-format&#34;&gt;[PATCH 00/32] docs/vm: convert to ReST format&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1521660168-14372-1-git-send-email-rppt@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1521660168-14372-1-git-send-email-rppt@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;커널 문서의 ReST 화는 많은 사람들이 반기고 있는 변화지만 일부 메인테이너는 썩
반기지 않기도 합니다.  vm/ 쪽 문서를 모두 ReST 로 바꾸는 패치가 올라왔습니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.16-rc4</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc4/</link>
      <pubDate>Mon, 05 Mar 2018 10:50:48 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc4/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc4&#34;&gt;Linux 4.16-rc4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFxXg8hi+T_DNCG_OrAotqSheyREw-Njf9XgUD1vXqAyHQ@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFxXg8hi+T_DNCG_OrAotqSheyREw-Njf9XgUD1vXqAyHQ@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;벌써 개발 단계의 중반이라 할 수 있는 rc4 의 릴리즈입니다.  4.16 버전의 릴리즈도
얼마 남지 않았군요.  여전히 충분히 조용한 한주였습니다.  다만 여기저기에 조금씩
변경사항이 골고루 있군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-00-34-v3-pti-support-for-x32&#34;&gt;[PATCH 00/34 v3] PTI support for x32&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1520245563-8444-1-git-send-email-joro@8bytes.org&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1520245563-8444-1-git-send-email-joro@8bytes.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;x86-32 를 위한 Page Table Isolation 패치입니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lkml_news_v4.16 Rc3</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc3/</link>
      <pubDate>Mon, 26 Feb 2018 18:38:53 +0100</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc3/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc3&#34;&gt;Linux 4.16-rc3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFxk5KBxL9DvRtBivP3hKT-aOAzvSA_B47L1+y0P2GLe_A@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFxk5KBxL9DvRtBivP3hKT-aOAzvSA_B47L1+y0P2GLe_A@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.16 세번째 rc 버전이 릴리즈 되었습니다.  rc2 보단 변경사항이 많지만, rc2 때
이야기 했듯 rc2 때는 대부분의 경우 고칠 것들을 찾지도 못했기 때문이 크기
때문이죠.  즉, 스펙터와 멜트다운으로 끔찍했던 4.15 때와 달리, 모든게 정상적이고
예상대로라고 합니다.&lt;/p&gt;

&lt;p&gt;대부분의 변경은 드라이버이고, 네트워킹 쪽 변경도 좀 크군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-tip-core-rcu-0-5-srcu-updates&#34;&gt;[PATCH tip/core/rcu 0/5] SRCU updates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180226215614.GA31616@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180226215614.GA31616@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RCU critical section 안에서 sleep 을 할 수 있는 SRCU 의 간단한 업데이트
패치셋입니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-tip-core-rcu-0-12-torture-test-updates&#34;&gt;[PATCH tip/core/rcu 0/12] Torture-test updates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180226220225.GA32136@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180226220225.GA32136@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RCU 등의 동기화 도구의 동시성 버그를 찾는데 사용되는 torture test 의 업데이트
패치셋입니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lkml_news_v4.16 Rc2</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc2/</link>
      <pubDate>Mon, 19 Feb 2018 11:09:15 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc2/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc2&#34;&gt;Linux 4.16-rc2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFwDnBq9V6TVbc82DzVYpf-ELF7UcYzHuY0ei1Xjnob+0A@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFwDnBq9V6TVbc82DzVYpf-ELF7UcYzHuY0ei1Xjnob+0A@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.16 두번째 rc 버전의 릴리즈입니다.  이번 한주는 매우 조용한 한주였군요.  머지
윈도우가 끝나고 사람들이 좀 쉬기 때문일수도, 아직 버그를 찾지 못해서일 수도
있고 일반적으로 rc2 는 조용한 편이지만, 어쨌든 토발즈는 만족스러운 눈치입니다.
4.15 에서의 spectre &amp;amp; meltdown 때문에 더 그럴지도 모르겠지만요.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lkml_news_v4.16 Rc1</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.16-rc1/</link>
      <pubDate>Tue, 13 Feb 2018 13:56:47 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.16-rc1/</guid>
      <description>

&lt;h2 id=&#34;linux-4-16-rc1&#34;&gt;Linux 4.16-rc1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFzXVqgCMhPL9EaMW_D9E=HCQ9+JSQAbBPe3Oa_iQtky=g@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFzXVqgCMhPL9EaMW_D9E=HCQ9+JSQAbBPe3Oa_iQtky=g@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;어느덧 2주일이 지났습니다.  머지 윈도우가 닫히고 4.16 첫번째 rc 버전이
나왔습니다.  4.15는 역시 토발즈에게 고통스러웠던 시간이었던지 이번 머지
윈도우는 4.15 보다 훨씬 나았다는 토발즈의 이야기입니다.&lt;/p&gt;

&lt;p&gt;이번 릴리즈에서는 GPU 쪽 변경 사항이 많고 대부분은 드라이버라 아주 큰 변화는
거의 없지만, 여전히 arch 쪽에도, 네트워킹과 파일시스템 등에도 변경이 없지는
않다고 정리하고 있습니다.
스펙터 / 멜트다운 이슈에 대한 x86 외 아키텍쳐의 변경사항들도 들어왔군요.&lt;/p&gt;

&lt;h2 id=&#34;patch-v8-00-24-speculative-page-faults&#34;&gt;[PATCH v8 00/24] Speculative page faults&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/1518794738-4186-1-git-send-email-ldufour@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/1518794738-4186-1-git-send-email-ldufour@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.15 릴리즈와 함께 4.15 위로 포팅된 Speculative page faults 패치가 계속
올라오고 있습니다.  이 패치셋은 예전부터 제가 관심을 두고 보고 있는 패치인데,
page fault handling 을 speculative 하게 함으로써 병렬성을 높이려는 패치입니다.
아이디어가 시작된 건 오래되었고 그 아이디어를 이어와 다시 제안되고 있는
패치이죠.  이번엔 업데이트 될런지 궁금하네요.&lt;/p&gt;

&lt;h2 id=&#34;patch-mm-v5-resend-mm-swap-fix-race-between-swapoff-and-some-swap-operations&#34;&gt;[PATCH -mm -v5 RESEND] mm, swap: Fix race between swapoff and some swap operations&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180213014220.2464-1-ying.huang@intel.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180213014220.2464-1-ying.huang@intel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;swapin 작업과 swapoff 작업 사이를 락으로 보호하지 않고 있기 때문에 segmentation
fault 문제가 있을 수 있습니다.  swapoff 가 자주 불리진 않다보니 이 문제가 크게
불거진 적 없는데, 어쨌건 race 는 race 라 고쳐야 한다는 Huang Ying 의
패치입니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.15</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.15/</link>
      <pubDate>Mon, 29 Jan 2018 09:20:38 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.15/</guid>
      <description>

&lt;h2 id=&#34;linux-4-15&#34;&gt;Linux 4.15&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFzARtx-nA=d1j7vLOLf4FHMJLyRiQ-PKkoexJuTUHogdw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFzARtx-nA=d1j7vLOLf4FHMJLyRiQ-PKkoexJuTUHogdw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;드디어 4.15 버전이 릴리즈 되었습니다.  지난 한주는 매우 조용하고 변경된 사항이
거의 없었다는군요.&lt;/p&gt;

&lt;p&gt;이렇게 meltdown/spectre 로 시끄럽고 길었던, 평범하지 않았던 릴리즈 사이클이
끝났습니다.
하지만, meltdown/spectre 관련한 일이 아주 끝난 건 아니라고 이야기 하는군요.
특히, indirect bracnh mitigation 을 위한 가장 큰 수정사항을 반영받기 위해선
커널만 업데이트 해선 안되고 컴파일러의 &amp;ldquo;retpoline&amp;rdquo; 지원이 있어야 합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /sys/devices/system/cpu/vulnerabilities/spectre_v2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;로 컴파일러 지원이 있는지 알 수 있는데, 컴파일러 지원이 없다면&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Vulnerable: Minimal generic ASM retpoline
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이란 출력이 뜰겁니다.&lt;/p&gt;

&lt;p&gt;한가지 더 이야기 해둬야 할건, 이번 릴리즈에 meltdown/spectre 가 많은 영향을
끼치긴 했지만 그래도 다른 부분들은 평범하게 업데이트가 진행되었다는 겁니다.
즉, 이번 릴리즈는 좀 평범하지 않기 했지만 그렇다고 아주 이상하기만 한 릴리즈도
아니었다는 거죠.&lt;/p&gt;

&lt;p&gt;어쨌든 4.15 버전이 드디어 나왔습니다!&lt;/p&gt;

&lt;h2 id=&#34;lsf-mm-topic-addressing-mmap-sem-contention&#34;&gt;[LSF/MM TOPIC] Addressing mmap_sem contention&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/4c20d397-1268-ca0f-4986-af59bb31022c@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/4c20d397-1268-ca0f-4986-af59bb31022c@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;리눅스 커널에서 메모리 매핑은 mmap_sem 이라는 reader-writer semaphor 를 이용해
race condition 으로부터 보호되고 있습니다.  당연하게도, 쓰레드가 많은 환경에선
여기 부하가 심하게 걸리고 성능 확장을 저해하게 됩니다.  Peter Zijlstra 의
Speculative Page Fault 패치는 페이지 폴트 시에 메모리 매핑을 할 때 mmap_sem 을
잡지 않고 매핑하려 시도해보고 중간에 동시에 같은 영역을 매핑하려 한 쓰레드가
존재하면 abort &amp;amp; retry 를 하는식으로 이 문제를 완화시킵니다.
해당 패치셋은 최근 Laurent 에 의해 다시 포팅되어 커뮤니티에 올라오기도 했죠.
실제로 ebizzy[1] 와 같이 쓰레드를 많이 쓰는 벤치마크에서는 두배가까이 성능
향상이 있었다고 하구요.&lt;/p&gt;

&lt;p&gt;하지만 Speculative Page Fault 만으로는 모든 문제가 해결되지 않기에 mmap_sem
자체에 대한 논의를 LSFMM 에서 하고 싶다는 메일입니다.&lt;/p&gt;

&lt;p&gt;병렬 프로그래밍에 관심있는 제게도 흥미로운 주제네요.&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://ebizzy.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;http://ebizzy.sourceforge.net/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;lsf-mm-topic-lru-lock-scalability&#34;&gt;[LSF/MM TOPIC] lru_lock scalability&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/2a16be43-0757-d342-abfb-d4d043922da9@oracle.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/2a16be43-0757-d342-abfb-d4d043922da9@oracle.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;최근에 덜 사용된 (Least Recently Used) 페이지를 가려내기 위해 사용되는
&lt;code&gt;lru_lock&lt;/code&gt; 은 메모리 집중적 벤치마크를 돌릴 때 커널에서 가장 뜨거워지는 락들
가운데 하나입니다.
당연히 확장성 문제가 있죠.&lt;/p&gt;

&lt;p&gt;이걸 배칭 또는 페이지 개별적 락킹을 통해 해결해 보자는 안을 내놓고 이에 대해
LSFMM 에서 이야기 해보자는 메일입니다.&lt;/p&gt;

&lt;p&gt;RFC 패치가 벌써 올라왔네요:
&lt;a href=&#34;https://lkml.kernel.org/r/20180131230413.27653-1-daniel.m.jordan@oracle.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180131230413.27653-1-daniel.m.jordan@oracle.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;git-pull-rcu-changes-for-v4-16&#34;&gt;[GIT PULL] RCU changes for v4.16&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180129100051.ndq4osy45fz3g26a@gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180129100051.ndq4osy45fz3g26a@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From: Ingo Molnar &lt;a href=&#34;mailto:mingo@kernel.org&#34; target=&#34;_blank&#34;&gt;mingo@kernel.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.16 머지 윈도우가 열렸으니 Ingo 가 4.16 을 위한 rcu 쪽 변경사항을 리누스에게
풀리퀘스트 보냈습니다.
사실 이건 별로 흥미로운 메일은 아닐 수 있지만, 4.16 에서 RCU 가 어떻게 변경될지
알 수 있겠죠.
그리고, 제가 작년 프라하와 상해에서 만들어 올렸던, 패치 9개가 있습니다 ;)&lt;/p&gt;

&lt;h2 id=&#34;rfc-patch-00-64-mm-towards-parallel-address-space-operations&#34;&gt;[RFC PATCH 00/64] mm: towards parallel address space operations&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180205012754.23615-1-dbueso@wotan.suse.de&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180205012754.23615-1-dbueso@wotan.suse.de&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lsquo;mmap_sem&amp;rsquo; 은 커널의 메모리 관리에서 자주 사용되는 락으로, 많은 scalability
문제의 중심에 있습니다.  이 패치셋은 mmap_sem 을 range locking 기법을 활용해서
바꿔냄으로써 병렬성을 확보하는 패치입니다.&lt;/p&gt;

&lt;h2 id=&#34;patch-mm-v2-mm-swap-frontswap-fix-thp-swap-if-frontswap-enabled&#34;&gt;[PATCH -mm -v2] mm, swap, frontswap: Fix THP swap if frontswap enabled&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180207070035.30302-1-ying.huang@intel.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180207070035.30302-1-ying.huang@intel.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;zswap 은 THP 를 고려하지 않기 때문에 THP 가 켜진 상태에서 zswap 이 frontswap
으로 동작할 경우 일부 어플리케이션은 segfault 와 memory corruption 을 낼 수
있는 문제가 있었습니다.  커밋 bd4c82c22c367e068 (&amp;ldquo;mm, THP, swap: delay
splitting THP after swapped&amp;rdquo;) 때문에 발생한 문제였구요.  이를 고치기 위한
패치입니다.
out&amp;rdquo;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.15-rc9</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.15-rc9/</link>
      <pubDate>Tue, 23 Jan 2018 12:16:07 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.15-rc9/</guid>
      <description>

&lt;h2 id=&#34;not-final-4-15-this-weekend&#34;&gt;&lt;em&gt;Not&lt;/em&gt; final 4.15 this weekend&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFxzQBH5gnG92ah-PREfOqb5_rjWriLH3fWHMWS1=BSQFw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFxzQBH5gnG92ah-PREfOqb5_rjWriLH3fWHMWS1=BSQFw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;원래대로라면 4.15 정식 버전의 릴리즈가 될 타이밍이었습니다만&amp;hellip;
아직 충분히 안정화 되지 않은 것 같다는 토발즈의 판단 아래 이번주에도 rc 버전이
나왔습니다.  rc9 입니다.
2011년의 3.1-rc9 이후 처음 나온 rc9 이네요.&lt;/p&gt;

&lt;p&gt;이번 릴리즈는 x86, arm powerpc, mips 쪽의 arch 업데이트, 드라이버, 그리고
네트워킹 핵심부 업데이트가 주된 변경이군요.&lt;/p&gt;

&lt;p&gt;다음주에는 꼭 4.15를 릴리즈 하고 싶다고 하는데, 아마도 다음주에는 4.15 정식
버전이 릴리즈되길 빕니다.&lt;/p&gt;

&lt;h2 id=&#34;lsf-mm-topic-cma-and-larger-page-sizes&#34;&gt;[LSF/MM TOPIC] CMA and larger page sizes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/3a3d724e-4d74-9bd8-60f3-f6896cffac7a@redhat.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/3a3d724e-4d74-9bd8-60f3-f6896cffac7a@redhat.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contiguous Memory Allocator (CMA) 는 할당에 사용되는 메모리 영역을 비트맵으로
관리하는데, 페이지 하나에 비트 하나씩 주면 비트맵을 traverse 하는데 너무 많은
시간이 걸리므로, 하나의 비트가 여러개의 페이지를 담당하도록 되어있습니다.
이게 CMA 의 응답시간에는 큰 도움이 되지만, fragmentation 으로 인한 메모리
낭비가 심합니다.  Laura Abbott 은 이걸 LSFMM 에서 논의해보고 싶어하는군요.&lt;/p&gt;

&lt;h2 id=&#34;git-pull-tools-linux-kernel-memory-model&#34;&gt;[GIT PULL tools] Linux kernel memory model&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/20180125093440.GA875@linux.vnet.ibm.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/20180125093440.GA875@linux.vnet.ibm.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paul McKenney 의 리눅스 커널 메모리 모델이 리눅스 커널 소스트리의 &lt;code&gt;tools/&lt;/code&gt;
디렉토리로 머지될 것 같습니다!
이 모델은 &lt;code&gt;cat&lt;/code&gt; 언어로 쓰여져서 &lt;code&gt;herd7&lt;/code&gt; 시뮬레이터로 실행될 수 있어서, 동시성을
갖는 코드가 실제로 어떻게 동작할지 검사할 수 있게 해줍니다.
과장 좀 보태서 자동화된 memory-barriers.txt 라고도 할 수 있죠.&lt;/p&gt;

&lt;p&gt;이미 Ingo Molnar 가 풀 했군요.  별다른 문제 없다면 정식 버전으로는 4.17
버전에서 볼 수 있겠습니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LKML News after v4.15-rc8</title>
      <link>https://sjp38.github.io/post/lkml_news_v4.15-rc8/</link>
      <pubDate>Tue, 16 Jan 2018 13:26:26 +0900</pubDate>
      
      <guid>https://sjp38.github.io/post/lkml_news_v4.15-rc8/</guid>
      <description>

&lt;h2 id=&#34;linux-4-15-rc8&#34;&gt;Linux 4.15-rc8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://lkml.kernel.org/r/CA+55aFz=PcxdARFpCTyQCJKaJcBwVUB9y6XAXM8VyyxnbRD=bw@mail.gmail.com&#34; target=&#34;_blank&#34;&gt;https://lkml.kernel.org/r/CA+55aFz=PcxdARFpCTyQCJKaJcBwVUB9y6XAXM8VyyxnbRD=bw@mail.gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;마침내 여덟번째 rc 버전의 릴리즈입니다.  스펙터 버그를 성능 저하 없이 막기 위한
구글의 해결책, Retpoline 지원이 들어갔군요.  그 외에는 드라이버 업데이트여서
일단 rc8 에 걸맞는 조용함이긴 하다고 토발즈는 평하네요.  자, 다음주에는 4.15 가
릴리즈될런지?  아니면 rc9 이 나오고 말런지?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
