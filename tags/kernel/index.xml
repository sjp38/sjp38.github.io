<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Happy Hacking</title>
    <link>https://sjp38.github.io/tags/kernel/index.xml</link>
    <description>Recent content on Happy Hacking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>sj38.park@gmail.com (SeongJae Park)</managingEditor>
    <webMaster>sj38.park@gmail.com (SeongJae Park)</webMaster>
    <atom:link href="https://sjp38.github.io/tags/kernel/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fetching linux kernel source code</title>
      <link>https://sjp38.github.io/post/fetching-linux-source-code/</link>
      <pubDate>Mon, 20 Mar 2017 22:37:03 +0900</pubDate>
      <author>sj38.park@gmail.com (SeongJae Park)</author>
      <guid>https://sjp38.github.io/post/fetching-linux-source-code/</guid>
      <description>

&lt;p&gt;리눅스 커널은 오픈 소스 소프트웨어이므로 그 소스코드가 공개되어 있어 누구나
인터넷을 통해 쉽게 얻을 수 있습니다.  이 글에서는 리눅스 커널 소스코드를 받아올
수 있는 몇가지 방법을 설명합니다.&lt;/p&gt;

&lt;h1 id=&#34;kernel-org&#34;&gt;kernel.org&lt;/h1&gt;

&lt;p&gt;리눅스 커널 소스 코드를 받아오기 위한 기본적 공식 사이트는
&lt;a href=&#34;https://www.kernel.org&#34;&gt;kernel.org&lt;/a&gt; 라 할 수 있겠는데, 이 사이트에는 소스
코드를 포함해 리눅스 커널을 위한 다양한 리소스가 정리되어 있습니다.  이
사이트에 웹브라우저를 통해 들어가보면 첫페이지에서부터 가장 최근에 릴리즈된
버전의 소스코드, 가장 최근의 안정화된 버전의 소스코드 등을 &lt;code&gt;tar.xz&lt;/code&gt; 포맷의 압축
파일 또는 &lt;code&gt;patch&lt;/code&gt; 등 다양한 형태로 다운받을 수 있는 링크가 있습니다.&lt;/p&gt;

&lt;p&gt;한가지 유의할 것은 kernel.org 는 공식적 사이트일 뿐으로 비슷하게 소스코드를
호스팅 하는 사이트는 github 을 포함해 여럿 있을 수 있다는 점입니다.  또한,
특정한 회사나 개인이 수정한 버전의 커널의 소스코드는 kernel.org 에서 받을 수
없을 수 있습니다.  하지만, 리눅스 커널의 라이센스가 GPL 인만큼, 그들도 자신이
수정한 버전을 상품 등으로 배포하고 있다면 소스코드를 공개해야 하므로, 해당
버전을 만든 사람 또는 회사에 문의해 보면 그 소스코드를 받을 수 있을 겁니다.
예를 들어 안드로이드의 경우 자신들이 수정한 커널을 사용하며, 그렇게 수정된
커널의 소스코드를 자신들의 소스코드 &lt;a href=&#34;https://android.googlesource.com/&#34;&gt;호스팅 사이트&lt;/a&gt; 에 공개하고 있습니다.&lt;/p&gt;

&lt;h2 id=&#34;specific-version&#34;&gt;Specific Version&lt;/h2&gt;

&lt;p&gt;kernel.org 첫 페이지에는 몇가지 버전의 소스코드만 존재하므로 찾고 있는 버전은
해당 페이지에 링크가 존재하지 않을 수 있습니다.  특정 버전을 찾기 위한 페이지
역시 kernel.org 는 제공하는데, &lt;a href=&#34;https://www.kernel.org/pub/linux/kernel/&#34;&gt;https://www.kernel.org/pub/linux/kernel/&lt;/a&gt; 주소로
들어가면 특정 버전의 커널 소스코드를 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;예를 들어 4.2.1 버전을 받고 싶다면, 다음 커맨드를 셸에서 수행해 받아올 수
있습니다:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.2.1.tar.xz
$ tar xvf linux-4.2.1.tar.xz
$ ls linux-4.2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;git-repository-cloning&#34;&gt;Git Repository Cloning&lt;/h1&gt;

&lt;p&gt;주요 리눅스 개발자들은 각자의 git repository 로 자신이 개발중인 버전의 리눅스
커널 소스코드를 관리하는데, 이 역시 남들이 볼 수 있게 공유해 두고 있습니다.
따라서, 원한다면 특정 리눅스 개발자의 개발중인 리눅스 커널 소스코드를 git 으로
clone 해올 수 있습니다.  많은 주요 개발자들이 kernel.org 위에 자신의 git
repository 를 호스팅 하고 있으며, github 을 사용하는 사람들도 많습니다.  예를
들어 리누스 토발즈는 kernel.org 위에 자신의 git repository 를 호스팅 하면서
github 에 미러링도 하고 있습니다.  각각의 repository 의 주소는 다음과 같습니다:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git&#34;&gt;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/torvalds/linux.git&#34;&gt;https://github.com/torvalds/linux.git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음과 같은 명령을 통해 리누스 토발즈의 개발중인 리눅스 커널 소스코드를 clone
해올 수 있습니다:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
$ ls linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;개발자의 repository 를 클론해 오는 방식의 장점은, 일단 아직 릴리즈 되지 않은
따끈따끈한 버전의 소스코드를 그 commit history 와 함께 볼 수 있다는 점일
겁니다.  리눅스 커널 개발에 참여하고 싶다면 현재 어떤 기능이 구현되고 있고 어떤
버그가 아직 고쳐지지 않았는지 등을 알 수 있으므로 필수적입니다.  또하나의
장점은 git repository 에는 그동안 해당 repository 에서 릴리즈한 버전들이 모두
포함되어 있어, 해당 버전을 언제든지 &lt;code&gt;checkout&lt;/code&gt; 할 수 있다는 점입니다.&lt;/p&gt;

&lt;p&gt;단점은, commit history 와 개발중인 코드를 원하는게 아니라면 불필요하게 많은
용량의 데이터를 다운로드 받아야 한다는 것입니다.  현재 소스코드를 필요로 하는
목적에 맞춰, 특정 버전의 코드가 필요할 뿐이라면 압축 파일을, 그렇지 않다면 git
repository 를 사용한 접근을 하는 편이 옳을 겁니다.&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;리눅스 커널의 소스코드를 얻어오는 몇가지 방법을 알아봤습니다.  리눅스 커널은
오픈소스 형태라 그 소스코드를 쉽게 구할 수 있으며, kernel.org 또는 github 등의
호스팅 사이트에서 압축 파일, 패치, 또는 git repository 의 형태로 얻을 수
있습니다.  개발중인 repository 의 clone 을 통한 형태는 commit history 와
개발중인 코드의 정보를 알 수 있다는 장점이 있지만 그만큼 다운로드 받아야 하는
데이터의 양이 크다는 단점도 존재합니다.  자신이 현재 소스코드를 얻고자 하는
목적에 맞춰 적합한 방법으로 소스코드를 얻어오는 것이 좋을 겁니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting &#39;Linux Kernel Hack&#39; series</title>
      <link>https://sjp38.github.io/post/001_linux_dev_intro/</link>
      <pubDate>Sat, 04 Mar 2017 15:53:08 +0900</pubDate>
      <author>sj38.park@gmail.com (SeongJae Park)</author>
      <guid>https://sjp38.github.io/post/001_linux_dev_intro/</guid>
      <description>&lt;p&gt;많은 영역에서 사용되고 있는 리눅스 커널.  그렇기에 만져볼수록 재밌고 뜯어볼수록
신기합니다.  아마도 이게 hack 의 재미가 아닐까요.&lt;/p&gt;

&lt;p&gt;리눅스 커널을 hack 하는데에 필요한 기본적인 내용부터 몇가지 팁들, 소스 코드는
어떻게 가져오고 어떻게 빌드해서 시스템에 설치를 하는지, 패치는 어떻게 보내면
되는지와 같은 것들을 정리해 볼까 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So many environments and users are using Linux kernel.  That&amp;rsquo;s why it is so fun
and mysterious to touch and analyze it.  Maybe it is the fun of &lt;code&gt;hack&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I will organize some basic informations and tips about linux kernel hacking,
for example, how to get the source code, how to build it, how to install it,
and how the patch can be submitted to &lt;code&gt;Linus Torvalds&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>uninstall kernel</title>
      <link>https://sjp38.github.io/post/uninstall-kernel/</link>
      <pubDate>Fri, 20 Jan 2017 13:18:56 +0900</pubDate>
      <author>sj38.park@gmail.com (SeongJae Park)</author>
      <guid>https://sjp38.github.io/post/uninstall-kernel/</guid>
      <description>

&lt;p&gt;테스트 등을 위해 소스코드로부터 커널을 직접 빌드, 설치하기 시작하면 어느새
수많은 커널이 설치되어 있는 것을 확인할 수 있다.  삭제를 위해선 &lt;code&gt;make install&lt;/code&gt;
로 만들어진 파일들을 직접 제거하고 grub 을 업데이트 해줘야 한다.&lt;/p&gt;

&lt;p&gt;예를 들어 시스템이 현재 부팅되어 있는 버전의 커널을 언인스톨하고자 한다면
다음의 일련의 커맨드를 입력하면 된다:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# rm /boot/vmlinuz-$(uname -r)
# rm /boot/initrd.img-$(uname -r)
# rm /boot/System.map-$(uname -r)
# rm /boot/config-$(uname -r)
# rm -fr /lib/modules/$(uname -r)
# rm /var/lib/initramfs-tools/$(uname -r)
# update-grub2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;다른 버전의 설치되어있는 커널을 제거하고 싶다면 위의 &lt;code&gt;$(uname -r)&lt;/code&gt; 부분을
제거하고자 하는 커널 버전으로 대체하면 된다.&lt;/p&gt;

&lt;h2 id=&#34;참고-문서&#34;&gt;참고 문서&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://askubuntu.com/questions/594443/how-can-i-remove-compiled-kernel&#34;&gt;http://askubuntu.com/questions/594443/how-can-i-remove-compiled-kernel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>