<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Evaluation on hacklog</title>
    <link>https://sjp38.github.io/tags/evaluation/</link>
    <description>Recent content in Evaluation on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 15 Jan 2023 10:34:06 -0800</lastBuildDate>
    <atom:link href="https://sjp38.github.io/tags/evaluation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DAMON Evaluation</title>
      <link>https://sjp38.github.io/posts/en/damon_evaluation/</link>
      <pubDate>Sun, 15 Jan 2023 10:34:06 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_evaluation/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_evaluation. This out-dated post will be removed soon.
DAMON is lightweight. It increases system memory usage by 0.39% and slows target workloads down by 1.16%.
DAMON is accurate and useful for memory management optimizations. An experimental DAMON-based operation scheme for THP, namely &amp;rsquo;ethp&amp;rsquo;, removes 76.15% of THP memory overheads while preserving 51.25% of THP speedup. Another experimental DAMON-based &amp;lsquo;proactive reclamation&amp;rsquo; implementation, namely &amp;lsquo;prcl&amp;rsquo;, reduces 93.</description>
    </item>
    <item>
      <title>DAMON Evaluation</title>
      <link>https://sjp38.github.io/posts/ko/damon_evaluation/</link>
      <pubDate>Sun, 15 Jan 2023 10:34:06 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/ko/damon_evaluation/</guid>
      <description>DAMON is lightweight. It increases system memory usage by 0.39% and slows target workloads down by 1.16%.
DAMON is accurate and useful for memory management optimizations. An experimental DAMON-based operation scheme for THP, namely &amp;rsquo;ethp&amp;rsquo;, removes 76.15% of THP memory overheads while preserving 51.25% of THP speedup. Another experimental DAMON-based &amp;lsquo;proactive reclamation&amp;rsquo; implementation, namely &amp;lsquo;prcl&amp;rsquo;, reduces 93.38% of residential sets and 23.63% of system memory footprint while incurring only 1.22% runtime overhead in the best case (parsec3/freqmine).</description>
    </item>
    <item>
      <title>Linux Kernel Performance (LKP) Tests</title>
      <link>https://sjp38.github.io/posts/ko/lkp-tests/</link>
      <pubDate>Thu, 02 Aug 2018 17:20:10 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/ko/lkp-tests/</guid>
      <description>리눅스 커널의 개발은 커뮤니티 주도입니다. 개발의 한 부분인 테스트 역시 커뮤니티 주도적입니다. 여러 개인 또는 단체가 커널을 각자의 방식으로 테스트 하고 그 결과를 공유합니다. 인텔에서는 0-day 서비스[1] 라는 서비스를 자체적으로 돌리는데, 이 서비스는 최신 리눅스 커널을 가져다가 빌드하고 다양한 기능 / 성능 테스트를 돌리고 그 결과 발견된 regression 을 LKML 에 메일로 보내주는 일을 합니다. 말하자면 Continuous Integration (CI) 이죠.
Linux Kernel Performance (LKP) Tests[2] 는 0-day 서비스에서 기능 / 성능 테스트를 수행하는데 사용되는 도구입니다.</description>
    </item>
  </channel>
</rss>
