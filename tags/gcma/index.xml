<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Gcma on hacklog</title>
    <link>https://sjp38.github.io/tags/gcma/</link>
    <description>Recent content in Gcma on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Aug 2018 21:53:56 +0900</lastBuildDate>
    <atom:link href="https://sjp38.github.io/tags/gcma/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Paper about GCMA Accepted to TC</title>
      <link>https://sjp38.github.io/posts/en/gcma_accepted_to_tc/</link>
      <pubDate>Wed, 29 Aug 2018 21:53:56 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/gcma_accepted_to_tc/</guid>
      <description>A paper about GCMA project has accepted to a top-level computer science journal, Transactions on Computers[1]. It will be published soon.
[1] https://www.computer.org/web/tc</description>
    </item>
    <item>
      <title>The Paper about GCMA Accepted to TC</title>
      <link>https://sjp38.github.io/posts/ko/gcma_accepted_to_tc/</link>
      <pubDate>Wed, 29 Aug 2018 21:53:56 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/ko/gcma_accepted_to_tc/</guid>
      <description>GCMA 에 대한 논문이 컴퓨터 과학계의 최고 수준 저널인 Transactions on Computers[1] 에 Accept 되었습니다. 조만간 이를 통해 출간될 예정입니다.
[1] https://www.computer.org/web/tc</description>
    </item>
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>https://sjp38.github.io/posts/en/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/gcma/</guid>
      <description>The importance of physically contiguous memory has increased in modern computing environments, including both low- and high-end systems. Existing physically contiguous memory allocators generally have critical limitations. For example, the most commonly adopted solution, the memory reservation technique, wastes a significant amount of memory space. Scatter/Gather direct memory access (DMA) and input-output memory management units (IOMMUs) avoid this problem by utilizing additional hardware for address space virtualization. However, additional hardware means an increase in costs and power consumption, which is especially disadvantageous for small systems and they do not provide real contiguous memory.</description>
    </item>
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>https://sjp38.github.io/posts/ko/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/ko/gcma/</guid>
      <description>The importance of physically contiguous memory has increased in modern computing environments, including both low- and high-end systems. Existing physically contiguous memory allocators generally have critical limitations. For example, the most commonly adopted solution, the memory reservation technique, wastes a significant amount of memory space. Scatter/Gather direct memory access (DMA) and input-output memory management units (IOMMUs) avoid this problem by utilizing additional hardware for address space virtualization. However, additional hardware means an increase in costs and power consumption, which is especially disadvantageous for small systems and they do not provide real contiguous memory.</description>
    </item>
  </channel>
</rss>
