<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gcma | hacklog</title>
    <link>/tags/gcma/</link>
      <atom:link href="/tags/gcma/index.xml" rel="self" type="application/rss+xml" />
    <description>gcma</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 29 Aug 2018 21:53:56 +0900</lastBuildDate>
    <image>
      <url>/img/tux.png</url>
      <title>gcma</title>
      <link>/tags/gcma/</link>
    </image>
    
    <item>
      <title>The Paper about GCMA Accepted to TC</title>
      <link>/post/gcma_accepted_to_tc/</link>
      <pubDate>Wed, 29 Aug 2018 21:53:56 +0900</pubDate>
      <guid>/post/gcma_accepted_to_tc/</guid>
      <description>&lt;p&gt;A paper about &lt;a href=&#34;/post/gcma/&#34;&gt;GCMA project&lt;/a&gt; has accepted to a top-level computer science journal, Transactions on Computers[1].  It will be published soon.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/post/gcma/&#34;&gt;GCMA&lt;/a&gt; 에 대한 논문이 컴퓨터 과학계의 최고 수준 저널인
Transactions on Computers[1] 에 Accept 되었습니다.  조만간 이를 통해 출간될
예정입니다.&lt;/p&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://www.computer.org/web/tc&#34;&gt;https://www.computer.org/web/tc&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>/post/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>/post/gcma/</guid>
      <description>&lt;p&gt;The importance of physically contiguous memory has increased in modern
computing environments, including both low- and high-end systems. Existing
physically contiguous memory allocators generally have critical limitations.
For example, the most commonly adopted solution, the memory reservation
technique, wastes a significant amount of memory space. Scatter/Gather direct
memory access (DMA) and input-output memory management units (IOMMUs) avoid
this problem by utilizing additional hardware for address space virtualization.
However, additional hardware means an increase in costs and power consumption,
which is especially disadvantageous for small systems and they do not provide
real contiguous memory. Linux Contiguous Memory Allocator (CMA) aims to provide
both contiguous memory allocation and to maximize memory utilization based on
page migration, but they suffer from unpredictably long latency and a high
probability of allocation failure. Therefore, we introduce a new solution to
this problem, the guaranteed contiguous memory allocator (GCMA). This
guarantees efficient memory space utilization, short latency, and successful
allocation. The GCMA uses a reservation scheme and increases memory utilization
by sharing the memory with immediately discardable data. Our evaluation of a
GCMA on a Raspberry Pi 2 finds a latency that is 15-130 times lower compared to
a CMA, and a latency that is up to 10 times lower when taking a photo. Using a
large working set in a memory-fragmented high-end system, the GCMA is able to
produce a 2.27× speedup.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;p&gt;The early results of this project has been introduced in
&lt;a href=&#34;https://korealinuxforum2014.sched.com/event/1qZcBAO/gcma-guaranteed-contiguous-memory-allocator-seongjae-park-seoul-national-university-minchan-kim-lg&#34;&gt;Linux Foundation Korea Forum 2014&lt;/a&gt;,
&lt;a href=&#34;http://ceur-ws.org/Vol-1464/&#34;&gt;Embedded Operating Systems Workshop 2015&lt;/a&gt;,
and &lt;a href=&#34;http://sigbed.seas.upenn.edu/vol13_num1.html#issue&#34;&gt;45th issue of ACM SIGBED Review&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The source code for this version has been submitted to &lt;a href=&#34;https://lkml.org/lkml/2015/2/23/480&#34;&gt;LKML&lt;/a&gt; for discussion.
A complete git tree is also available at &lt;a href=&#34;https://github.com/sjp38/linux.gcma&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More recent results has also introduced in the &lt;a href=&#34;https://linuxplumbersconf.org/event/2/contributions/247/&#34;&gt;Linux Kernel Summit 2018&lt;/a&gt; and
&lt;a href=&#34;https://ieeexplore.ieee.org/document/8456561&#34;&gt;IEEE Transactions on Computers&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
