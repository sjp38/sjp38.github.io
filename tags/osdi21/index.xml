<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Osdi21 on hacklog</title>
    <link>https://sjp38.github.io/tags/osdi21/</link>
    <description>Recent content in Osdi21 on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Aug 2021 09:27:55 +0200</lastBuildDate>
    <atom:link href="https://sjp38.github.io/tags/osdi21/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSDI 2021 papers summary</title>
      <link>https://sjp38.github.io/posts/en/osdi2021_papers_review/</link>
      <pubDate>Sat, 07 Aug 2021 09:27:55 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/osdi2021_papers_review/</guid>
      <description>This post is for recording some notes from a few OSDI&#39;21 papers that I got fun.
DMon: Efficient Detection and Correction of Data Locality Problems Using Selective Profiling https://www.usenix.org/system/files/osdi21-khan.pdf
DMon is a compiler-based data locality optimization system. The approach is quite similar to that of daphicx or similar things. It injects data access profiling code in the target program, build and run it with some workload, collect the profiling code-generated results, analyze the profile results to figure out what kind of optimization can provide some benefit to the program, injects the optimization code in the program, built it again, and deploy the version to the production.</description>
    </item>
  </channel>
</rss>
