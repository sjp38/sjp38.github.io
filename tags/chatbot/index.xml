<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Happy Hacking</title>
    <link>https://sjp38.github.io/tags/chatbot/index.xml</link>
    <description>Recent content on Happy Hacking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>sj38.park@gmail.com (SeongJae Park)</managingEditor>
    <webMaster>sj38.park@gmail.com (SeongJae Park)</webMaster>
    <atom:link href="https://sjp38.github.io/tags/chatbot/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Golang kakaotalk chat bot making</title>
      <link>https://sjp38.github.io/post/kakaobot/</link>
      <pubDate>Wed, 15 Mar 2017 22:40:32 +0900</pubDate>
      <author>sj38.park@gmail.com (SeongJae Park)</author>
      <guid>https://sjp38.github.io/post/kakaobot/</guid>
      <description>&lt;p&gt;Kakaotalk chat bot 은 어떻게 만드는지 궁금해져서 Go 언어로 간단한 Kakaotalk
chat bot 을 만들어 봤습니다.  Go 언어의 강력함과 Kakaotalk auto-reply API 의
단순성, 그리고 echo 서버 역할 정도만 하자는 심플하다 못해 썰렁한 기능 목표 덕에
최초 목표한 데까지는 두시간 만에 만들어졌습니다.  매우 단순히 echo 서버 정도의
역할만 하고 있지만, 매우 단순하게 짜여져 있기 때문에 Kakaotalk chat bot 을
만들고자 할 때, 또는 Restful API 를 사용하는 서버를 Go 언어로 짜고자 할 때
시작용으로 참고할 만 하지 않을까 싶어 소개합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sjp38/kakaobot&#34;&gt;https://github.com/sjp38/kakaobot&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>