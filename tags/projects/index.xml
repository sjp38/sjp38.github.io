<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>projects | hacklog</title>
    <link>https://sjp38.github.io/tags/projects/</link>
      <atom:link href="https://sjp38.github.io/tags/projects/index.xml" rel="self" type="application/rss+xml" />
    <description>projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 17 Feb 2024 10:40:58 -0800</lastBuildDate>
    <image>
      <url>https://sjp38.github.io/img/tux.png</url>
      <title>projects</title>
      <link>https://sjp38.github.io/tags/projects/</link>
    </image>
    
    <item>
      <title>Hackermail v1 is released</title>
      <link>https://sjp38.github.io/post/hackermail_v1/</link>
      <pubDate>Sat, 17 Feb 2024 10:40:58 -0800</pubDate>
      <guid>https://sjp38.github.io/post/hackermail_v1/</guid>
      <description>&lt;p&gt;I started subscribing linux kernel mailing list with my gmail account in 2013.
Dealing with the large amount of mails was not that easy, probably due to my
poor setup and being lazy at trying more tools.&lt;/p&gt;
&lt;p&gt;In 2019, while returning from Linux Plumbers Conference, I read an LWN
&lt;a href=&#34;https://lwn.net/Articles/799134/&#34;&gt;article&lt;/a&gt; saying Linus Torvalds is now
considering unsubscribing the linux kernel mailing list, owing to the
evolvement of the public-inbox and lore.kernel.org.&lt;/p&gt;
&lt;p&gt;lore.kernel.org was so nice but I wanted some more personalized mails
management setup, and wanted to avoid the dependency on the web browser and the
internet.  I hence further looked into the internal of public-inbox a bit.  The
git-based mails management structure of public-inbox made me believe maybe I
could hack my own mail client using it.  I hence started the
&lt;a href=&#34;https://github.com/sjp38/hackermail&#34;&gt;hackermail&lt;/a&gt; project.
After about a few weeks of the hack, I replaced some parts of my mail workflow
with the new tool, namely &lt;code&gt;hkml&lt;/code&gt;, and it became much better than before.  It
looked like there were many more things that I could improve with it, but
because it was already enough for my personal workflow, I stopped working on
the project for a while.  I only fixed some bugs and implemented features as
required for myself.&lt;/p&gt;
&lt;p&gt;After I started using hackermail, I met a few kernel hackers who reached out to
me asking how I manage mails.  They were also finding a better way for the
kernel mails management.  I introduced them hackermail and my workflow.
Because it was optimized for only my personal workflow, my answer was not that
helpful for them.  They gave me many helpful advice, though.  I added some
TODO items for them but didn&amp;rsquo;t prioritize and work for those.&lt;/p&gt;
&lt;p&gt;A few months ago, I learned that too many gmail accounts subscribing linux
kernel mailing list can be a
&lt;a href=&#34;https://lore.kernel.org/ksummit/20231106-venomous-raccoon-of-wealth-acc57c@nitro/&#34;&gt;problem&lt;/a&gt;.
I personally want every discussion to Cc linux-kernel@, but don&amp;rsquo;t want to make
kernel.org have the problem.  Hence I unsubscribed the mailing lists and
&lt;a href=&#34;https://social.kernel.org/notice/AcuiYjPsv2iaUqRshM&#34;&gt;decided&lt;/a&gt; to improve
&lt;code&gt;hkml&lt;/code&gt; to a level that I can migrate all my workflow on it.  I also wanted it
to be good enough for not only my workflow but also for general.  At least the
old TODO items should be removed.&lt;/p&gt;
&lt;p&gt;So I hacked on it in personal time again.  After a few months of such a hack,
now I feel I made all the features I wanted to have.  The old todo items are
now removed.  Some of the items were added for not myself but others, but some
of those turned out to be very helpful for me, too.  Now I think my workflow
itself is much more improved.&lt;/p&gt;
&lt;p&gt;Due to my tiny source of ideas rather than the quality of the tool, now I show
not many TODO items.  Hence, I
&lt;a href=&#34;https://github.com/sjp38/hackermail/tree/v1.0.0&#34;&gt;tagged&lt;/a&gt; the current version
of the tool as v1.0.0.  I hope it answers the questions on my mail management
workflow, better than those of the past.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perfbook 2nd edition translation is complete</title>
      <link>https://sjp38.github.io/post/perfbook_2nd_edition_translation_complete/</link>
      <pubDate>Sun, 11 Feb 2024 10:05:34 -0800</pubDate>
      <guid>https://sjp38.github.io/post/perfbook_2nd_edition_translation_complete/</guid>
      <description>&lt;p&gt;After about 8 years of progress on my little hobby project[1], the Korean
translation of Paul E. McKenney &amp;lsquo;s book, I&amp;rsquo;m marking it as completed a humble
milestone[2].  It was a very fun and informative journey.&lt;/p&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee0460&#34;&gt;https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee0460&lt;/a&gt;
[2] &lt;a href=&#34;https://lore.kernel.org/perfbook/20240211175355.4986-1-sj38.park@gmail.com/&#34;&gt;https://lore.kernel.org/perfbook/20240211175355.4986-1-sj38.park@gmail.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DAMON News List</title>
      <link>https://sjp38.github.io/post/damon_news/</link>
      <pubDate>Sat, 06 May 2023 11:27:07 -0700</pubDate>
      <guid>https://sjp38.github.io/post/damon_news/</guid>
      <description>&lt;p&gt;Below is a list of news around DAMON &lt;a href=&#34;https://sjp38.github.io/post/damon/&#34;&gt;project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This list is not exhaustive but just a DAMON maintainer&amp;rsquo;s collection of news.
If you find a news that should be added to this list, please let us know at
&lt;a href=&#34;mailto:sj@kernel.org&#34;&gt;sj@kernel.org&lt;/a&gt; and/or &lt;a href=&#34;mailto:damon@lists.linux.dev&#34;&gt;damon@lists.linux.dev&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2024&#34;&gt;2024&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2024-07-21&lt;/em&gt;: Memory Management subsystem pull request for Linux v6.11-rc1 is
&lt;a href=&#34;https://lore.kernel.org/20240721145415.fbeb01a853962ef91334f3d1@linux-foundation.org&#34;&gt;posted&lt;/a&gt;
with DAMON changes for CXL memory
&lt;a href=&#34;https://lore.kernel.org/20240614030010.751-1-honggyu.kim@sk.com&#34;&gt;tiering&lt;/a&gt;,
&lt;a href=&#34;https://lore.kernel.org/20240621163626.74815-1-sj@kernel.org&#34;&gt;documentation&lt;/a&gt;
of a mailing tool for newcomers, and minor fixups.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-18&lt;/em&gt;: DAMON topic for Linux Kernel Memory Management Microconference at
LPC&#39;24 has &lt;a href=&#34;https://lpc.events/event/18/contributions/1768/&#34;&gt;accepted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-11&lt;/em&gt;: ATC&#39;24 also published two DAMON-citing papers at the same time. The
first &lt;a href=&#34;https://www.usenix.org/conference/atc24/presentation/nair&#34;&gt;one&lt;/a&gt; proposes
a way to improve monitoring accuracy of DAMON, while the
second &lt;a href=&#34;https://www.usenix.org/conference/atc24/presentation/tabatabai&#34;&gt;one&lt;/a&gt;
mentions DAMON can be useful for extensible memory management.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-11&lt;/em&gt;: A couple of OSDI&#39;24 papers
(&lt;a href=&#34;https://www.usenix.org/conference/osdi24/presentation/xiang&#34;&gt;1&lt;/a&gt;,
&lt;a href=&#34;https://www.usenix.org/conference/osdi24/presentation/zhong-yuhong&#34;&gt;2&lt;/a&gt;) for
memory tiering that references and exploring DAMON as a part of them are
available now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-01&lt;/em&gt;: DAMON Quaterly Newsletter for 2024-Q2 has
&lt;a href=&#34;https://lore.kernel.org/20240701212244.52288-1-sj@kernel.org&#34;&gt;posted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-06-21&lt;/em&gt;: HacKerMaiL (hkml) has
&lt;a href=&#34;https://lore.kernel.org/20240621170355.939F7C2BBFC@smtp.kernel.org&#34;&gt;announced&lt;/a&gt;
as a mailing tool for DAMON community that the maintainer is committed to
support.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-06-14&lt;/em&gt;: DAMON talk for Kernel Summit 2024 is
&lt;a href=&#34;https://lore.kernel.org/20240614175504.87365-1-sj@kernel.org/&#34;&gt;proposed&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-06-14&lt;/em&gt;: SK hynix&amp;rsquo; patch series &amp;ldquo;DAMON based tiered memory management for
CXL memory&amp;rdquo; has
&lt;a href=&#34;https://lore.kernel.org/all/20240614185328.BA2C1C2BD10@smtp.kernel.org/&#34;&gt;merged&lt;/a&gt;
into -mm tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-06-12&lt;/em&gt;: DAMON talk for OpenSource Summit Europe 2024 has been accepted
and &lt;a href=&#34;https://sched.co/1ej2S&#34;&gt;scheduled&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-05-18&lt;/em&gt;: Memory management subsystem pull
&lt;a href=&#34;https://lore.kernel.org/20240517192239.9285edd85f8ef893bb508a61@linux-foundation.org&#34;&gt;request&lt;/a&gt;
for Linux 6.10-rc1 has been posted.  This pull request includes DAMOS young
page filter, a DAMOS functionality kselftest, and misc cleanups/fixups for
code, documentation, and tests.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-05-17&lt;/em&gt;: LWN published an &lt;a href=&#34;https://lwn.net/Articles/973702/&#34;&gt;article&lt;/a&gt;
introducing DAMON session at LSFMM 2024.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-05-02&lt;/em&gt;: LSFMMBPF schedule is
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/176LXLys9Uh6A-Eal2flrzcbUSJMUXGkGwyihr9jAAaQ/edit?usp=sharing&#34;&gt;uploaded&lt;/a&gt;.
DAMON talk is scheduled for the Monday noon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-04-29&lt;/em&gt;: The video of the DAMON presentation at OSSummit NA&#39;24 is
&lt;a href=&#34;https://youtu.be/vP5x5P47S1U?feature=shared&#34;&gt;uploaded&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-04-28&lt;/em&gt;: Yet another academic
&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3620666.3651355&#34;&gt;paper&lt;/a&gt; exploring DAMON for
serverless computing has published on ASPLOS 24.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-04-17&lt;/em&gt;: The third in-person DAMON meetup has
&lt;a href=&#34;https://sched.co/1cP4G&#34;&gt;held&lt;/a&gt; as a unconference session of Open Source Summint
North America 2024&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-04-03&lt;/em&gt;: Oracle released a
&lt;a href=&#34;https://blogs.oracle.com/linux/post/explore-linux-kernel-kconfigs&#34;&gt;tool&lt;/a&gt; that
&lt;a href=&#34;https://oracle.github.io/kconfigs/?config=UTS_RELEASE&amp;amp;config=DAMON&amp;amp;config=DAMON_RECLAIM&amp;amp;config=DAMON_LRU_SORT&#34;&gt;helps&lt;/a&gt;
finding distros that enabled DAMON&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-04-01&lt;/em&gt;: DAMO v2.2.8 is out. This version
&lt;a href=&#34;https://github.com/awslabs/damo/blob/v2.2.8/USAGE.md#recording-memory-footprints&#34;&gt;supports&lt;/a&gt;
recording memory footprint of monitoring target processes together with their
access pattern.  Users could know when how much memory is allocated and really
accessed. Such visualization is one of the future works, though.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-03-13&lt;/em&gt;: Memory management subsystem pull
&lt;a href=&#34;https://lore.kernel.org/all/20240313200532.34e4cff216acd3db8def4637@linux-foundation.org/&#34;&gt;request&lt;/a&gt;
for Linux 6.9-rc1 has been posted.  To quote Andrew’s summary for DAMON part:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More DAMON work from SeongJae Park in the series
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;mm/damon: make DAMON debugfs interface deprecation unignorable&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;selftests/damon: add more tests for core functionalities and corner cases&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Docs/mm/damon: misc readability improvements&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;mm/damon: let DAMOS feeds and tame/auto-tune itself&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;2024-03-06&lt;/em&gt;: &lt;a href=&#34;https://events.linuxfoundation.org/lsfmmbpf/&#34;&gt;LSF/MM/BPF 2024&lt;/a&gt;
DAMON discussion
&lt;a href=&#34;https://lore.kernel.org/damon/20240129204749.68549-1-sj@kernel.org/&#34;&gt;topic&lt;/a&gt; is
accepted&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-03-04&lt;/em&gt;: DAMO v2.2.4 is
&lt;a href=&#34;https://github.com/awslabs/damo/tree/v2.2.4&#34;&gt;released&lt;/a&gt; with a new feature for
access pattern-based
&lt;a href=&#34;https://github.com/awslabs/damo/blob/v2.2.4/USAGE.md#profile&#34;&gt;profiling&lt;/a&gt;.
For example, users can know which code is making their program&amp;rsquo;s memory usage
unexpectedly high, or which code is intensively accessing memory, and optimize.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-02-27&lt;/em&gt;: DAMON user-space tool, &lt;a href=&#34;https://damonitor.github.io&#34;&gt;DAMO&lt;/a&gt;, has
&lt;a href=&#34;https://pypistats.org/packages/damo&#34;&gt;downloaded&lt;/a&gt; from PyPI more than 2,000
times last month.
&lt;img src=&#34;https://sjp38.github.io/img/damo_download_2005.png&#34; alt=&#34;damo_2000_monthly_downloads&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-02-21&lt;/em&gt;: Yet another academic
&lt;a href=&#34;https://pasalabs.org/papers/2024/Eurosys24_M3_Camera_Ready.pdf&#34;&gt;paper&lt;/a&gt;
exploring DAMON for tiered memory management will be presented at
&lt;a href=&#34;https://2024.eurosys.org/&#34;&gt;EuroSys 2024&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-02-20&lt;/em&gt;: DAMO v2.2.2 is released with a new command,
&lt;a href=&#34;https://github.com/awslabs/damo/blob/v2.2.2/release_note#L5&#34;&gt;&lt;code&gt;replay&lt;/code&gt;&lt;/a&gt;.  It
will hopefully help reproducing the real-world memory access pattern for
analysis and benchmarks.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-02-14&lt;/em&gt;: DAMON talk for OSSummit NA 2024 has been accepted and
&lt;a href=&#34;https://sched.co/1aBOg&#34;&gt;scheduled&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-02-09&lt;/em&gt;: DAMON in Amazon Linux 5.10.y
&lt;a href=&#34;https://github.com/amazonlinux/linux/tree/amazon-5.10.y/master/mm/damon&#34;&gt;kernel&lt;/a&gt;
has updated to that of v6.7 Linux kernel. Major updates on this change include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DAMOS apply target regions
&lt;a href=&#34;https://git.kernel.org/torvalds/c/c603c630b509&#34;&gt;tracing&lt;/a&gt; and&lt;/li&gt;
&lt;li&gt;Sampling interval granularity monitoring results
&lt;a href=&#34;https://git.kernel.org/torvalds/c/78fbfb155d20&#34;&gt;generation&lt;/a&gt; and
&lt;a href=&#34;https://git.kernel.org/torvalds/c/affa87c70818&#34;&gt;DAMOS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;2024-01-29&lt;/em&gt;: LSF/MM/BPF 2024 topic proposal for DAMON has
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20240129204749.68549-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-01-15&lt;/em&gt;: SK Hynix
&lt;a href=&#34;https://lore.kernel.org/damon/20240115045253.1775-1-honggyu.kim@sk.com/&#34;&gt;shared&lt;/a&gt;
their DAMOS-based tiered memory management test results showing 4-17%
performance slowdown reduction, with patches for that.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-01-12&lt;/em&gt;: LWN &lt;a href=&#34;https://lwn.net/Articles/957188/&#34;&gt;introduced&lt;/a&gt; the
feedback-driven DAMOS aggressiveness
&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=9294a037c015&#34;&gt;auto-tuning&lt;/a&gt;
as one of interesting changes for Linux v6.8&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-01-08&lt;/em&gt;: Memory management subsystem pull
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20240108155039.fd2798712a2a93a108b710ce@linux-foundation.org/&#34;&gt;request&lt;/a&gt;
for Linux v6.8-rc1 has posted. To quote Andrew&amp;rsquo;s summary for DAMON part:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DAMON/DAMOS feature and maintenance work from SeongJae Park in
the series
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;mm/damon: let users feed and tame/auto-tune DAMOS&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;selftests/damon: add Python-written DAMON functionality tests&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;mm/damon: misc updates for 6.8&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2023&#34;&gt;2023&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2023-12-31&lt;/em&gt;: A retrospect of DAMON development in 2023 for the upstream
community has
&lt;a href=&#34;https://lore.kernel.org/damon/20231231222250.140364-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-12-27&lt;/em&gt;: SK Hynix released Heterogeneous Memory Software Development Kit
(HMSDK) &lt;a href=&#34;https://github.com/skhynix/hmsdk/releases/tag/hmsdk-v2.0&#34;&gt;v2.0&lt;/a&gt; which
utilizes DAMON for tiered memory management.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-24&lt;/em&gt;: A &lt;a href=&#34;https://arxiv.org/pdf/2311.10275.pdf&#34;&gt;paper&lt;/a&gt; exploring DAMON
and finding grateful areas to improve has uploaded to arXiv.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-17&lt;/em&gt;: Livestreamed video for DAMON talk at kernel summit 2023 is now
&lt;a href=&#34;https://www.youtube.com/live/VxaAorwL89c?si=vUk1V5jAZhw8YFdV&amp;amp;t=19455&#34;&gt;available&lt;/a&gt;
at YouTube.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-12&lt;/em&gt;: RFC idea for DAMOS-based tiered memory management is
&lt;a href=&#34;https://lore.kernel.org/damon/20231112195602.61525-1-sj@kernel.org/&#34;&gt;sent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-12&lt;/em&gt;: RFC idea for Access/Contiguity-aware Memory Auto-scaling is
&lt;a href=&#34;https://lore.kernel.org/damon/20231112195114.61474-1-sj@kernel.org/&#34;&gt;sent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-12&lt;/em&gt;: RFC patchset for Aim-oriented Feedback-driven DAMOS
Aggressiveness Auto Tuning is
&lt;a href=&#34;https://lore.kernel.org/damon/20231112194607.61399-1-sj@kernel.org/&#34;&gt;sent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-08&lt;/em&gt;: The second in-person DAMON community meetup at LPC has
&lt;a href=&#34;https://lpc.events/event/17/contributions/1652C&#34;&gt;accepted&lt;/a&gt; and
&lt;a href=&#34;https://lore.kernel.org/damon/20231108145525.12650-1-sj@kernel.org/&#34;&gt;announced&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-11-02&lt;/em&gt;: Memory management subsystem pull requests for Linux v6.7-rc1,
which contains the changes for DAMON, has
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20231101145447.60320c9044e7db4dba2d93e3@linux-foundation.org/&#34;&gt;sent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-10-22&lt;/em&gt;: An SOSP &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3600006.3613167&#34;&gt;paper&lt;/a&gt;
for tiered memory management that referencing and exploring DAMON has found.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-10-12&lt;/em&gt;: LPC BoF session proposal for DAMON community in-person meetup has
submitted.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-10-04&lt;/em&gt;: DAMON talk for Kernel Summit track of Linux Plumbers Conference
2023 has &lt;a href=&#34;https://lpc.events/event/17/contributions/1624/&#34;&gt;accepted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-09-07&lt;/em&gt;: Yet another academic paper
&lt;a href=&#34;https://arxiv.org/pdf/2309.01736.pdf&#34;&gt;preprint&lt;/a&gt; regarding serverless on CXL
using/citing DAMON has uploaded.  The title of the preprint is &amp;ldquo;Understanding
and Optimizing Serverless Workloads in CXL-Enabled Tiered Memory&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-08-09&lt;/em&gt;: DAMON community started running its CI test against all stable
kernels and
&lt;a href=&#34;https://lore.kernel.org/damon/20230809171146.90801-1-sj@kernel.org/&#34;&gt;report&lt;/a&gt;
the results.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-08-08&lt;/em&gt;: DAMON user-space tool (damo) has reached 100 Github stars.
&lt;img src=&#34;https://sjp38.github.io/img/damo_100_github_stars.png&#34; alt=&#34;damo 100 github stars&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-08-07&lt;/em&gt;: DAMON user-space tool (damo) has released its 100th
&lt;a href=&#34;https://github.com/awslabs/damo/releases/tag/v1.9.3&#34;&gt;version&lt;/a&gt;. A mail for the
news, release stats, and appreciation to the DAMON community has also
&lt;a href=&#34;https://lore.kernel.org/damon/20230807202044.98700-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-08-03&lt;/em&gt;: DAMON continuous functionality testing started testing stable rc
&lt;a href=&#34;https://github.com/awslabs/damon-tests/commit/acb5f06f861d19b6826e3e339ddf69806da218ee&#34;&gt;kernels&lt;/a&gt;
and
&lt;a href=&#34;https://lore.kernel.org/damon/20230802173033.108621-1-sj@kernel.org/&#34;&gt;report&lt;/a&gt;
back the results.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-08-01&lt;/em&gt;: DAMON Beer/Coffee/Tea meeting will be
&lt;a href=&#34;https://lore.kernel.org/damon/20230801012126.6249-1-sj@kernel.org/&#34;&gt;postponed&lt;/a&gt;
from mid of August to end of OSSummit Euro 2023.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-07-26&lt;/em&gt;: The kernel summit talk proposal for DAMON status and future plans
has
&lt;a href=&#34;https://lore.kernel.org/damon/20230726190926.85121-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-07-10&lt;/em&gt;: Hocus wrote an
&lt;a href=&#34;https://hocus.dev/blog/qemu-vs-firecracker/&#34;&gt;article&lt;/a&gt; introducing DAMON as a
kernel feature that could be useful for memory efficient VM, with its
limitations.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-06-30&lt;/em&gt;: DAMON talk for OSSummit EU 2023 has accepted and
&lt;a href=&#34;https://sched.co/1OGf9&#34;&gt;scheduled&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-06-25&lt;/em&gt;: DAMON userspace tool, &lt;a href=&#34;https://github.com/awslabs/damo&#34;&gt;damo&lt;/a&gt; has
&lt;a href=&#34;https://github.com/awslabs/damo/pull/58&#34;&gt;packaged&lt;/a&gt; for Debian/Ubuntu in
addition to Fedora.  It also turned out it was already packaged for ArchLinux.
Refer to &lt;a href=&#34;https://repology.org/project/damo/versions&#34;&gt;repology&lt;/a&gt; for detail.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-26&lt;/em&gt;: Open Source Summit North America DAMON
&lt;a href=&#34;https://sched.co/1K5HS&#34;&gt;talk&lt;/a&gt; video is now
&lt;a href=&#34;https://youtu.be/fImXcHS5PPE&#34;&gt;available&lt;/a&gt; at Youtube&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-26&lt;/em&gt;: LSF/MM+BPF DAMON
&lt;a href=&#34;https://lore.kernel.org/damon/20230214003328.55285-1-sj@kernel.org/&#34;&gt;discussion&lt;/a&gt;
video is now
&lt;a href=&#34;https://www.youtube.com/watch?v=bbC23ApPvow&#34;&gt;available&lt;/a&gt; at Youtube&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-17&lt;/em&gt;: Now DAMON user space tool (DAMO) is available at
&lt;a href=&#34;https://packages.fedoraproject.org/pkgs/python-damo/damo/&#34;&gt;Fedora Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-16&lt;/em&gt;: Michel from Fedora community is gonna
&lt;a href=&#34;https://github.com/awslabs/damo/pull/42#issuecomment-1550415746&#34;&gt;package&lt;/a&gt;
DAMON user space tool (DAMO) for Fedora!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-16&lt;/em&gt;: An LWN article for LSF/MM+BPF DAMON discussion has
&lt;a href=&#34;https://lwn.net/Articles/931769/&#34;&gt;uploaded&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-05-04&lt;/em&gt;: The schedule for DAMON talk/discussion at LSFMM is
&lt;a href=&#34;https://events.linuxfoundation.org/lsfmm/program/schedule-at-a-glance/&#34;&gt;available&lt;/a&gt;
now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-03-14&lt;/em&gt;: The schedule for DAMON talk at OSSummit NA is
&lt;a href=&#34;https://sched.co/1K5HS&#34;&gt;available&lt;/a&gt; now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-03-10&lt;/em&gt;: A DAMON talk proposal for
&lt;a href=&#34;https://events.linuxfoundation.org/open-source-summit-north-america/&#34;&gt;OSSummit NA&lt;/a&gt;
has accepted.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-03-06&lt;/em&gt;: DAMOS filters feature has introduced as one of the most
significant changes for Linux v6.3 by an LWN
&lt;a href=&#34;https://lwn.net/Articles/924384/&#34;&gt;article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-02-24&lt;/em&gt;: A preprint of an academic paper that compares their approach
against DAMON has &lt;a href=&#34;https://arxiv.org/pdf/2302.09468.pdf&#34;&gt;uploaded&lt;/a&gt; to ArXiv.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-02-13&lt;/em&gt;: LSF/MM/BPF topic proposal for DAMON has
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20230214003328.55285-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2023-02-09&lt;/em&gt;: DAMON debugfs deprecation patchset has
&lt;a href=&#34;https://lore.kernel.org/damon/20230209192009.7885-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2022&#34;&gt;2022&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2022-12-29&lt;/em&gt;: DAMON development summary of 2022 has
&lt;a href=&#34;https://lore.kernel.org/lkml/20221229171209.162356-1-sj@kernel.org/&#34;&gt;shared&lt;/a&gt;
and &lt;a href=&#34;https://www.phoronix.com/news/DAMON-Linux-2022&#34;&gt;featured&lt;/a&gt; by Phoronix.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-12-16&lt;/em&gt;: The DAMOS filtering for anon pages and/or memory
cgroups have
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20221216235930.526BAC433EF@smtp.kernel.org/&#34;&gt;merged&lt;/a&gt;
in mm tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-10-19&lt;/em&gt;: An RFC patchset for efficient query-like DAMON monitoring results
have
&lt;a href=&#34;https://lore.kernel.org/damon/20221019001317.104270-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-09-15&lt;/em&gt;: The &lt;a href=&#34;https://youtu.be/e2SZoUPhDRg?t=13245&#34;&gt;video&lt;/a&gt; for my kernel
summit DAMON talk this year is now available at Youtube&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-09-09&lt;/em&gt;: The plan for the first in-person DAMON community meetup at LPC
and the in-person office hour at OSSummit EU has
&lt;a href=&#34;https://lore.kernel.org/damon/20220909173856.55818-1-sj@kernel.org/&#34;&gt;announced&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-09-06&lt;/em&gt;: AL2 5.10 kernel&amp;rsquo;s DAMON code has
&lt;a href=&#34;https://github.com/amazonlinux/linux/commit/5441c2036382e1957492a6d762f0dfbd172aa225&#34;&gt;updated&lt;/a&gt;
to that of v5.19&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-08-30&lt;/em&gt;: AL2 5.10 kernel&amp;rsquo;s DAMON code has
&lt;a href=&#34;https://github.com/amazonlinux/linux/commit/8fde5ce7c81c1ecf6c3ac2595774eac0e6784869&#34;&gt;updated&lt;/a&gt;
to that of v5.18&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-08-22&lt;/em&gt;: LWN &lt;a href=&#34;https://lwn.net/Articles/905370/&#34;&gt;introduced&lt;/a&gt; DAMON-based
LRU-lists manipulation (DAMON_LRU_SORT) in detail&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-08-15&lt;/em&gt;: LWN &lt;a href=&#34;https://lwn.net/Articles/904032/&#34;&gt;introduced&lt;/a&gt; DAMON’s new
features including &amp;lsquo;LRU_SORT&amp;rsquo; as significant changes for Linux 6.0&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-08-12&lt;/em&gt;: Bi-weekly DAMON Beer/Coffee/Tea Chat series for open, regular,
and informal community syncups and discussions has
&lt;a href=&#34;https://lore.kernel.org/damon/20220810225102.124459-1-sj@kernel.org/&#34;&gt;announced&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-07-29&lt;/em&gt;: Current status, future plans, and possible collaborations for
DAMON will be &lt;a href=&#34;https://lpc.events/event/16/contributions/1224/&#34;&gt;presented&lt;/a&gt; at
the Kernel Summit 2022.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-06-26&lt;/em&gt;: The poster of the DAOS
&lt;a href=&#34;https://www.amazon.science/publications/daos-data-access-aware-operating-system&#34;&gt;paper&lt;/a&gt;
is
&lt;a href=&#34;https://damonitor.github.io/misc/daos_hpdc_2022_poster.pdf&#34;&gt;available&lt;/a&gt; online.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-06-13&lt;/em&gt;: DAMON-based LRU-lists sorting patchset has
&lt;a href=&#34;https://lore.kernel.org/damon/20220613192301.8817-1-sj@kernel.org/&#34;&gt;posted&lt;/a&gt;
and immediately
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20220613194036.C4AC5C34114@smtp.kernel.org/&#34;&gt;merged&lt;/a&gt;
in the -mm tree&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-05-04&lt;/em&gt;: A paper introducing DAMON and related works have accepted by
&lt;a href=&#34;https://www.hpdc.org/2022/program/accepted/&#34;&gt;HPDC22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-05-03&lt;/em&gt;: Now DAMON has its own open mailing
&lt;a href=&#34;https://lore.kernel.org/damon/&#34;&gt;list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-04-29&lt;/em&gt;: Patches for DAMON online tuning have
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20220429162617.04E08C385A7@smtp.kernel.org/&#34;&gt;merged&lt;/a&gt;
in -mm tree&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-04-27&lt;/em&gt;: Android has
&lt;a href=&#34;https://android.googlesource.com/kernel/common/+log/b3190b539a0845d3b849926b723deeeacc7491a4&#34;&gt;backported&lt;/a&gt;
and
&lt;a href=&#34;https://android.googlesource.com/kernel/common/+/0496c13ded02bd72426d189b777bf303fe490f62&#34;&gt;enabled&lt;/a&gt;
building &lt;code&gt;DAMON&lt;/code&gt; and &lt;code&gt;DAMON_RECLAIM&lt;/code&gt; for the common kernel.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-04-27&lt;/em&gt;: Alibaba has
&lt;a href=&#34;https://lore.kernel.org/linux-mm/e3c1beb1-e3d5-6e26-bae2-06785080b57e@linux.alibaba.com/&#34;&gt;shared&lt;/a&gt;
thier own DAMON user space
&lt;a href=&#34;https://github.com/aliyun/data-profile-tools&#34;&gt;tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-02-28&lt;/em&gt;: The DAMON sysfs interface patchset has
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20220228194808.91315C340F3@smtp.kernel.org/&#34;&gt;merged&lt;/a&gt;
in -mm tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-02-17&lt;/em&gt;: An &lt;a href=&#34;https://lore.kernel.org/linux-mm/20220217161938.8874-1-sj@kernel.org/&#34;&gt;RFC
patchset&lt;/a&gt;
for sysfs-based DAMON&amp;rsquo;s new user interface has posted.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-01-20&lt;/em&gt;: A
&lt;a href=&#34;https://lkml.kernel.org/r/20220119133110.24901-1-sj@kernel.org&#34;&gt;roadmap&lt;/a&gt; of
DAMON has shared.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2022-01-09&lt;/em&gt;: Linux 5.16 is released.  &amp;ldquo;DAMON-based proactive memory
reclamation, operation schemes and physical memory monitoring&amp;rdquo; are marked as
prominent features of the release by the &lt;a href=&#34;https://kernelnewbies.org/Linux_5.16&#34;&gt;Kernel
newbies&lt;/a&gt; and
&lt;a href=&#34;https://kernelnewbies.org/Linux_5.16&#34;&gt;LWN&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;2021&#34;&gt;2021&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2021-12-23&lt;/em&gt;: A great blog
&lt;a href=&#34;https://stevescargall.com/2021/12/23/how-to-build-a-custom-linux-kernel-to-test-data-access-monitor-damon/&#34;&gt;post&lt;/a&gt;
for DAMON-enabled kernel has uploaded&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-11-07&lt;/em&gt;: DAMON patches for automated memory management
&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=68536f8e01e571f553f78fa058ba543de3834452&#34;&gt;optimization&lt;/a&gt;,
the physical address space monitoring
&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=c638072107f52ec35f292c97b6f3df9b9f2ed87d&#34;&gt;support&lt;/a&gt;,
and &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=bec976b69143&#34;&gt;proactive
reclamation&lt;/a&gt;
have merged in the mainline.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-11-01&lt;/em&gt;: DAMON has
&lt;a href=&#34;https://kernelnewbies.org/Linux_5.15#DAMON.2C_a_data_access_monitor&#34;&gt;released&lt;/a&gt;
with Linux &lt;a href=&#34;https://lwn.net/Articles/874493&#34;&gt;v5.15&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-10-14&lt;/em&gt;: DAMON_RECLAIM patchset is
&lt;a href=&#34;https://github.com/amazonlinux/linux/commit/99c8ec092e82&#34;&gt;merged&lt;/a&gt; in the
Amazon Linux 5.10.y kernel tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-10-02&lt;/em&gt;: DAMOS patchset is
&lt;a href=&#34;https://lore.kernel.org/mm-commits/20211001233339.SV5JeiSqb%25akpm@linux-foundation.org/&#34;&gt;merged&lt;/a&gt;
in the -mm tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-09-23&lt;/em&gt;: DAMON and DAMOS are presented in the kernel summit.
&lt;a href=&#34;https://linuxplumbersconf.org/event/11/contributions/984/attachments/870/1670/daos_ksummit_2021.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/gpFfJkrrEEs?t=5290&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://linuxplumbersconf.org/event/11/contributions/984/&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-09-16&lt;/em&gt;: DAMON development tree on
&lt;a href=&#34;https://git.kernel.org/sj/h/damon/next/about&#34;&gt;kernel.org&lt;/a&gt; is created.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-09-08&lt;/em&gt;: DAMON patchset is
&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2d338201d5311bcd79d42f66df4cecbcbc5f4f2c&#34;&gt;merged&lt;/a&gt;
in the Linus Torvalds&amp;rsquo; tree, aka
&lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/mm/damon?id=2d338201d5311bcd79d42f66df4cecbcbc5f4f2c&#34;&gt;mainline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-09-07&lt;/em&gt;: DAMON/DAMOS will be
&lt;a href=&#34;https://linuxplumbersconf.org/event/11/contributions/984/&#34;&gt;presented&lt;/a&gt; at
the Kernel Summit 2021&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-08-31&lt;/em&gt;: DAMON user-space tool is uploaded to the official Python
packages system, &lt;a href=&#34;https://pypi.org/project/damo/&#34;&gt;PyPi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-08-06&lt;/em&gt;: DAMON patchset is
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20210805174324.2aaf0fb67cd19da893a86d80@linux-foundation.org/&#34;&gt;merged&lt;/a&gt;
in the -mm tree&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-07-27&lt;/em&gt;: LWN published a second
&lt;a href=&#34;https://lwn.net/Articles/863753/&#34;&gt;article&lt;/a&gt; introducing DAMON patchset series&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-06-11&lt;/em&gt;: DAMON-based proactive reclamation RFC patchset has shared on the
&lt;a href=&#34;https://news.ycombinator.com/item?id=27459675&#34;&gt;hackernews&lt;/a&gt; and introduced by a
Phoronix
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=DAMON-Page-Reclamation-RFC&#34;&gt;article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-05-31&lt;/em&gt;: DAMON-based proactive reclamation RFC patchset has
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20210531133816.12689-1-sj38.park@gmail.com/&#34;&gt;posted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-05-26&lt;/em&gt;: DAMON-enabled Amazon Linux 2 kernels have &lt;a href=&#34;https://twitter.com/sjpark0x00/status/1397484233413832705&#34;&gt;deployed to all
users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-05-07&lt;/em&gt;: DAMON has merged in the public source tree for Amazon Linux
v5.4.y
&lt;a href=&#34;https://github.com/amazonlinux/linux/tree/amazon-5.4.y/master/mm/damon&#34;&gt;kernel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-04-05&lt;/em&gt;: &lt;code&gt;damo&lt;/code&gt; now supports heatmap visualization on the
&lt;a href=&#34;https://raw.githubusercontent.com/awslabs/damo/master/for_doc/masim_zigzag_heatmap_ascii.png&#34;&gt;terminal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-03-31&lt;/em&gt;: DAMON user-space tool (&lt;code&gt;damo&lt;/code&gt;) is released as an
&lt;a href=&#34;https://github.com/awslabs/damo&#34;&gt;individual open source project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-03-19&lt;/em&gt;: DAMON has merged in the public source tree for Amazon Linux
v5.10.y
&lt;a href=&#34;https://github.com/amazonlinux/linux/tree/amazon-5.10.y/master/mm/damon&#34;&gt;kernel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-03-04&lt;/em&gt;: DAMON supports for two latest LTS kernels
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20210304100732.7844-1-sjpark@amazon.com/&#34;&gt;announced&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-03-03&lt;/em&gt;: DAMON is merged in v5.10 based public Amazon Linux kernel
&lt;a href=&#34;https://github.com/amazonlinux/linux/commit/10e0ec07f9085a42f724b28912a1dadc0b5d3c80&#34;&gt;tree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-02-25&lt;/em&gt;: An example usage of DAMON for profiling is
&lt;a href=&#34;https://twitter.com/sjpark0x00/status/1364591344300273666&#34;&gt;shared&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2021-01-07&lt;/em&gt;: A runtime system for DAMON-based optimal operation scheme finding
is &lt;a href=&#34;https://github.com/awslabs/damoos&#34;&gt;released&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2020&#34;&gt;2020&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2020-12-03&lt;/em&gt;: Further plans around DAMON is
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20201202082731.24828-1-sjpark@amazon.com&#34;&gt;shared&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-11-17&lt;/em&gt;: A real-world user story of DAMON is
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20201117143021.11883-1-sjpark@amazon.com/&#34;&gt;shared&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-09-26&lt;/em&gt;: The tests package for DAMON is
&lt;a href=&#34;https://github.com/awslabs/damon-tests&#34;&gt;released&lt;/a&gt; under GPL v2 license&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-08-19&lt;/em&gt;: A demo video is &lt;a href=&#34;https://youtu.be/l63eqbVBZRY&#34;&gt;available&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-08-05&lt;/em&gt;: DAMON will be
&lt;a href=&#34;https://www.linuxplumbersconf.org/event/7/contributions/659/&#34;&gt;presented&lt;/a&gt; at
the Kernel Summit 2020&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-06-04&lt;/em&gt;: Physical Memory Monitoring is now
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20200603141135.10575-1-sjpark@amazon.com/&#34;&gt;available&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-05-18&lt;/em&gt;: DAMON showcase website is announced&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-05-13&lt;/em&gt;: DAMON official document is uploaded
&lt;a href=&#34;https://damonitor.github.io/doc/html/latest/admin-guide/mm/damon/&#34;&gt;online&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-02-20&lt;/em&gt;: DAMON has introduced by an LWN
&lt;a href=&#34;https://lwn.net/Articles/812707/&#34;&gt;article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-02-10&lt;/em&gt;: The first RFC of Data Access Monitoring-based Operating Schemes
(DAMOS) has posted to
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20200210150921.32482-1-sjpark@amazon.com/&#34;&gt;LKML&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-01-23&lt;/em&gt;: The RFC of DAMON has introduced by LWN&amp;rsquo;s &lt;a href=&#34;https://lwn.net/Articles/809100/&#34;&gt;&amp;lsquo;Kernel patches of
interest&amp;rsquo;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-01-20&lt;/em&gt;: The first RFC patchset of DAMON has posted to
&lt;a href=&#34;https://lore.kernel.org/linux-mm/20200110131522.29964-1-sjpark@amazon.com/&#34;&gt;LKML&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DAMON-based System Optimization Guide</title>
      <link>https://sjp38.github.io/post/damon_optimization_guide/</link>
      <pubDate>Sun, 15 Jan 2023 10:36:11 -0800</pubDate>
      <guid>https://sjp38.github.io/post/damon_optimization_guide/</guid>
      <description>&lt;p&gt;This document helps you estimating the amount of benefit that you could get
from DAMON-based system optimizations, and describes how you could achieve it.&lt;/p&gt;
&lt;h1 id=&#34;check-the-signs&#34;&gt;Check The Signs&lt;/h1&gt;
&lt;p&gt;No optimization can provide same extent of benefit to every case.  Therefore
you should first guess how much improvements you could get using DAMON.  If
some of below conditions match your situation, you could consider using DAMON.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Low IPC and High Cache Miss Ratios.&lt;/em&gt;  Low IPC means most of the CPU time is
spent waiting for the completion of time-consuming operations such as memory
access, while high cache miss ratios mean the caches don&amp;rsquo;t help it well.
DAMON is not for cache level optimization, but DRAM level.  However,
improving DRAM management will also help this case by reducing the memory
operation latency.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Memory Over-commitment and Unknown Users.&lt;/em&gt;  If you are doing memory
overcommitment and you cannot control every user of your system, a memory
bank run could happen at any time.  You can estimate when it will happen
based on DAMON&amp;rsquo;s monitoring results and act earlier to avoid or deal better
with the crisis.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Frequent Memory Pressure.&lt;/em&gt;  Frequent memory pressure means your system has
wrong configurations or memory hogs.  DAMON will help you find the right
configuration and/or the criminals.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heterogeneous Memory System.&lt;/em&gt;  If your system is utilizing memory devices
that placed between DRAM and traditional hard disks, such as non-volatile
memory or fast SSDs, DAMON could help you utilizing the devices more
efficiently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;profile&#34;&gt;Profile&lt;/h1&gt;
&lt;p&gt;If you found some positive signals, you could start by profiling your workloads
using DAMON.  Find major workloads on your systems and analyze their data
access pattern to find something wrong or can be improved.  The DAMON user
space tool (&lt;code&gt;damo&lt;/code&gt;) will be useful for this.  You can get &lt;code&gt;damo&lt;/code&gt; from
&lt;a href=&#34;https://github.com/awslabs/damo&#34;&gt;https://github.com/awslabs/damo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We recommend you to start from working set size distribution check using &lt;code&gt;damo report wss&lt;/code&gt;.  If the distribution is ununiform or quite different from what
you estimated, you could consider &lt;code&gt;Memory Configuration&lt;/code&gt; optimization.&lt;/p&gt;
&lt;p&gt;Then, review the overall access pattern in heatmap form using &lt;code&gt;damo report heats&lt;/code&gt;.  If it shows a simple pattern consists of a small number of memory
regions having high contrast of access temperature, you could consider manual
&lt;code&gt;Program Modification&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the access pattern is very frequently changing so that you cannot figure out
what is the performance important region using your human eye, &lt;code&gt;Automated DAMON-based Memory Operations&lt;/code&gt; might help the case owing to its machine-level
microscope view.&lt;/p&gt;
&lt;p&gt;If you still want to absorb more benefits, you should develop &lt;code&gt;Personalized DAMON Application&lt;/code&gt; for your special case.&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t need to take only one approach among the above plans, but you could
use multiple of the above approaches to maximize the benefit.&lt;/p&gt;
&lt;h1 id=&#34;optimize&#34;&gt;Optimize&lt;/h1&gt;
&lt;p&gt;If the profiling result also says it&amp;rsquo;s worth trying some optimization, you
could consider below approaches.  Note that some of the below approaches assume
that your systems are configured with swap devices or other types of auxiliary
memory so that you don&amp;rsquo;t strictly required to accommodate the whole working set
in the main memory.  Most of the detailed optimization should be made on your
concrete understanding of your memory devices.&lt;/p&gt;
&lt;h2 id=&#34;memory-configuration&#34;&gt;Memory Configuration&lt;/h2&gt;
&lt;p&gt;No more no less, DRAM should be large enough to accommodate only important
working sets, because DRAM is highly performance critical but expensive and
heavily consumes the power.  However, knowing the size of the real important
working sets is difficult.  As a consequence, people usually equips
unnecessarily large or too small DRAM.  Many problems stem from such wrong
configurations.&lt;/p&gt;
&lt;p&gt;Using the working set size distribution report provided by &lt;code&gt;damo report wss&lt;/code&gt;,
you can know the appropriate DRAM size for you.  For example, roughly speaking,
if you worry about only 95 percentile latency, you don&amp;rsquo;t need to equip DRAM of
a size larger than 95 percentile working set size.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see a real example.  This &lt;code&gt;page &amp;lt;https://damonitor.github.io/doc/html/v17/admin-guide/mm/damon/guide.html#memory-configuration&amp;gt;&lt;/code&gt;
shows the heatmap and the working set size distributions/changes of
&lt;code&gt;freqmine&lt;/code&gt; workload in PARSEC3 benchmark suite.  The working set size spikes
up to 180 MiB, but keeps smaller than 50 MiB for more than 95% of the time.
Even though you give only 50 MiB of memory space to the workload, it will work
well for 95% of the time.  Meanwhile, you can save the 130 MiB of memory space.&lt;/p&gt;
&lt;h2 id=&#34;program-modification&#34;&gt;Program Modification&lt;/h2&gt;
&lt;p&gt;If the data access pattern heatmap plotted by &lt;code&gt;damo report heats&lt;/code&gt; is quite
simple so that you can understand how the things are going in the workload with
your human eye, you could manually optimize the memory management.&lt;/p&gt;
&lt;p&gt;For example, suppose that the workload has two big memory object but only one
object is frequently accessed while the other one is only occasionally
accessed.  Then, you could modify the program source code to keep the hot
object in the main memory by invoking &lt;code&gt;mlock()&lt;/code&gt; or &lt;code&gt;madvise()&lt;/code&gt; with
&lt;code&gt;MADV_WILLNEED&lt;/code&gt;.  Or, you could proactively evict the cold object using
&lt;code&gt;madvise()&lt;/code&gt; with &lt;code&gt;MADV_COLD&lt;/code&gt; or &lt;code&gt;MADV_PAGEOUT&lt;/code&gt;.  Using both together
would be also worthy.&lt;/p&gt;
&lt;p&gt;A research work [1] using the &lt;code&gt;mlock()&lt;/code&gt; achieved up to 2.55x performance
speedup.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see another realistic example access pattern for this kind of
optimizations.  This &lt;code&gt;another page &amp;lt;https://damonitor.github.io/doc/html/v17/admin-guide/mm/damon/guide.html#program-modification&amp;gt;&lt;/code&gt;
shows the visualized access patterns of streamcluster workload in PARSEC3
benchmark suite.  We can easily identify the 100 MiB sized hot object.&lt;/p&gt;
&lt;h2 id=&#34;automated-damon-based-memory-operations&#34;&gt;Automated DAMON-based Memory Operations&lt;/h2&gt;
&lt;p&gt;Though &lt;code&gt;Manual Program Optimization&lt;/code&gt; works well in many cases and DAMON can
help it, modifying the source code is not a good option in many cases.  First
of all, the source code could be too old or unavailable.  And, many workloads
will have complex data access patterns that even hard to distinguish hot memory
objects and cold memory objects with the human eye.  Finding the mapping from
the visualized access pattern to the source code and injecting the hinting
system calls inside the code will also be quite challenging.&lt;/p&gt;
&lt;p&gt;By using DAMON-based operation schemes (DAMOS) via &lt;code&gt;damo schemes&lt;/code&gt;, you will
be able to easily optimize your workload in such a case.  Our example schemes
called &amp;lsquo;efficient THP&amp;rsquo; and &amp;lsquo;proactive reclamation&amp;rsquo; achieved significant speedup
and memory space saves against 25 realistic workloads [2].&lt;/p&gt;
&lt;p&gt;That said, note that you need careful tune of the schemes (e.g., target region
size and age) and monitoring attributes for the successful use of this
approach.  Because the optimal values of the parameters will be dependent on
each system and workload, misconfiguring the parameters could result in worse
memory management.&lt;/p&gt;
&lt;p&gt;For the tuning, you could measure the performance metrics such as IPC, TLB
misses, and swap in/out events and adjusts the parameters based on their
changes.  The total number and the total size of the regions that each scheme
is applied, which are provided via the debugfs interface and the programming
interface can also be useful.  Writing a program automating this optimal
parameter could be an option.&lt;/p&gt;
&lt;h2 id=&#34;personalized-damon-application&#34;&gt;Personalized DAMON Application&lt;/h2&gt;
&lt;p&gt;Above approaches will work well for many general cases, but would not enough
for some special cases.&lt;/p&gt;
&lt;p&gt;If this is the case, it might be the time to forget the comfortable use of the
user space tool and dive into the debugfs interface (refer to :doc:&lt;code&gt;usage&lt;/code&gt; for
the detail) of DAMON.  Using the interface, you can control the DAMON more
flexibly.  Therefore, you can write your personalized DAMON application that
controls the monitoring via the debugfs interface, analyzes the result, and
applies complex optimizations itself.  Using this, you can make more creative
and wise optimizations.&lt;/p&gt;
&lt;p&gt;If you are a kernel space programmer, writing kernel space DAMON applications
using the API (refer to the :doc:&lt;code&gt;/mm/damon/api&lt;/code&gt; for more detail) would be an
option.&lt;/p&gt;
&lt;h1 id=&#34;reference-practices&#34;&gt;Reference Practices&lt;/h1&gt;
&lt;p&gt;Referencing previously done successful practices could help you getting the
sense for this kind of optimizations.  There is an academic paper [1]
reporting the visualized access pattern and manual &lt;code&gt;Program Modification&lt;/code&gt; results for a number of realistic workloads.  You can also get
the visualized access patterns [3,4,5] and
&lt;code&gt;Automated DAMON-based Memory Operations&lt;/code&gt; results for other realistic
workloads that collected with latest version of DAMON [2].&lt;/p&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3366626.3368125&#34;&gt;https://dl.acm.org/doi/10.1145/3366626.3368125&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://damonitor.github.io/test/result/perf/latest/html/&#34;&gt;https://damonitor.github.io/test/result/perf/latest/html/&lt;/a&gt;&lt;br&gt;
[3] &lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.heatmap.1.png.html&#34;&gt;https://damonitor.github.io/test/result/visual/latest/rec.heatmap.1.png.html&lt;/a&gt;&lt;br&gt;
[4] &lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.wss_sz.png.html&#34;&gt;https://damonitor.github.io/test/result/visual/latest/rec.wss_sz.png.html&lt;/a&gt;&lt;br&gt;
[5] &lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.wss_time.png.html&#34;&gt;https://damonitor.github.io/test/result/visual/latest/rec.wss_time.png.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting perfbook translation again</title>
      <link>https://sjp38.github.io/post/perfbook_translate_restart/</link>
      <pubDate>Sat, 27 Mar 2021 13:01:07 +0100</pubDate>
      <guid>https://sjp38.github.io/post/perfbook_translate_restart/</guid>
      <description>&lt;p&gt;I stopped translation of perfbook since 2019-09-27.  Because the 2nd edition of
perfbook is released[0], I&amp;rsquo;m starting the translation again[1], from the
scratch.  The old versions are still available, of course[2].&lt;/p&gt;
&lt;p&gt;[0] &lt;a href=&#34;https://mirrors.edge.kernel.org/.../perfbook/perfbook.html&#34;&gt;https://mirrors.edge.kernel.org/.../perfbook/perfbook.html&lt;/a&gt;&lt;br&gt;
[1] &lt;a href=&#34;https://github.com/sjp38/perfbook-ko_KR/commit/1c44ef30179b&#34;&gt;https://github.com/sjp38/perfbook-ko_KR/commit/1c44ef30179b&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://github.com/sjp38/perfbook-ko_KR-pdf&#34;&gt;https://github.com/sjp38/perfbook-ko_KR-pdf&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RCX: Read-Copy Transact</title>
      <link>https://sjp38.github.io/post/rcx/</link>
      <pubDate>Sat, 15 Feb 2020 09:11:55 +0100</pubDate>
      <guid>https://sjp38.github.io/post/rcx/</guid>
      <description>&lt;p&gt;Read-copy update (RCU) can provide ideal scalability for read-mostly workloads,
but some believe that it provides only poor performance for updates. This
belief is due to the lack of RCU-centric update synchronization mechanisms. RCU
instead works with a range of update-side mechanisms, such as locking. In fact,
many developers embrace simplicity by using global locking. Logging, hardware
transactional memory, or fine-grained locking can provide better scalability,
but each of these approaches has limitations, such as imposing overhead on
readers or poor scalability on non-uniform memory access (NUMA) systems, mainly
due to their lack of NUMA-aware design principles.&lt;/p&gt;
&lt;p&gt;This project introduces an RCU extension (RCX) that provides highly scalable
RCU updates on NUMA systems while retaining RCU’s read-side benefits. RCX
combines hardware transactional memory (HTM) and traditional locking based on
our NUMA-aware design principles for RCU. Micro-benchmarks on a NUMA system
having 144 hardware threads show RCX has up to 22.61 times better performance
and up to 145.00 times lower HTM abort rates compared to a state-of-the-art
RCU/HTM combination. To demonstrate the effectiveness and applicability of RCX,
we have applied RCX to parallelize some of the Linux kernel memory management
system and an in-memory database system. The optimized kernel and the database
show up to 24 and 17 times better performance compared to the original version,
respectively.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;The source code of RCX is available at: &lt;a href=&#34;https://github.com/rcx-sync&#34;&gt;https://github.com/rcx-sync&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;publications-and-presentations&#34;&gt;Publications and Presentations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SeongJae Park, Paul E. McKenney, Laurent Dufour, Heon Y. Yeom, &lt;strong&gt;An HTM-Based
Update-side Synchronization for RCU on NUMA systems.&lt;/strong&gt; In &lt;em&gt;15th ACM European
Conference on Computer Systems (EuroSys)&lt;/em&gt;, April 2020.
&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3342195.3387527&#34;&gt;Paper&lt;/a&gt;,
&lt;a href=&#34;https://www.youtube.com/watch?v=QydRe1z5uYk&amp;amp;feature=youtu.be&#34;&gt;Video (Short)&lt;/a&gt;,
&lt;a href=&#34;https://www.youtube.com/watch?v=h7RzyhR_lPQ&amp;amp;feature=youtu.be&#34;&gt;Video (Long)&lt;/a&gt;,
&lt;a href=&#34;https://www.eurosys2020.org/wp-content/uploads/2020/04/slides/166_seongjae_slides.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://www.eurosys2020.org/program/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;news&#34;&gt;News&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2020-04-19&lt;/em&gt;: The EuroSys&#39;20 paper is uploaded at
&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3342195.3387527&#34;&gt;ACM DL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-04-04&lt;/em&gt;: The accepted papers list of EuroSys&#39;20 has
&lt;a href=&#34;https://www.eurosys2020.org/program/accepted-papers/&#34;&gt;uploaded&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2020-02-14&lt;/em&gt;: The paper introducing RCX has accepted to be presented by
&lt;a href=&#34;https://www.eurosys2020.org/&#34;&gt;EuroSys&#39;20&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DAMON: Data Access Monitor</title>
      <link>https://sjp38.github.io/post/damon/</link>
      <pubDate>Fri, 27 Dec 2019 18:21:07 +0100</pubDate>
      <guid>https://sjp38.github.io/post/damon/</guid>
      <description>&lt;p&gt;With increasingly data-intensive workloads and limited DRAM capacity, optimal
memory management based on dynamic access patterns is becoming increasingly
important. Such mechanisms are only possible if accurate and efficient dynamic
access pattern monitoring is available.&lt;/p&gt;
&lt;p&gt;DAMON is a Data Access MONitoring framework subsystem for the Linux kernel
developed for such memory management.  It is designed with some key mechanism
(refer to &lt;a href=&#34;https://docs.kernel.org/mm/damon/design.html&#34;&gt;Design&lt;/a&gt; for the
detail) that make it&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accurate (the monitoring output is useful enough for DRAM level memory
management; It might not be appropriate for CPU Cache levels, though),&lt;/li&gt;
&lt;li&gt;light-weight (the monitoring overhead is low enough to be applied online),
and&lt;/li&gt;
&lt;li&gt;scalable (the upper-bound of the overhead is in constant range regardless of
the size of target workloads).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, DAMON can be used to develop memory management based on any access
pattern. To make it easier to develop such systems, DAMON provides a feature
called DAMON-based Operation Schemes (DAMOS). This allows DAMON users to
develop and execute access-aware memory management without code but with a
simple setup. Simple mechanisms based on DAMOS can
&lt;a href=&#34;https://www.amazon.science/publications/daos-data-access-aware-operating-system&#34;&gt;achieve&lt;/a&gt;
up to 12% performance improvement and 91% memory savings.&lt;/p&gt;
&lt;p&gt;Detailed evaluation of DAMON and DAMON-based system optimizations are
available at another &lt;a href=&#34;https://sjp38.github.io/post/damon_evaluation/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;table-of-contents&#34;&gt;Table Of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#demo-video&#34;&gt;Demo Video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#demo-screenshot&#34;&gt;Demo Screenshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#recent-news&#34;&gt;Recent News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#source-code&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#user-space-tool&#34;&gt;User-space Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tests-package&#34;&gt;Tests Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#official-document&#34;&gt;Official Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#showcase-website&#34;&gt;Showcase Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#evaluation-results&#34;&gt;Evaluation Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#damon-based-system-optimization-guide&#34;&gt;DAMON-based System Optimization Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#profile-guided-optimization-example&#34;&gt;Profile-Guided Optimization Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#publications-and-presentations&#34;&gt;Publications and Presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;demo-video&#34;&gt;Demo Video&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://sjp38.github.io/img/damo_monitor_water_nsquared.gif&#34; alt=&#34;damo monitor for water_nsquared&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/l63eqbVBZRY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;demo-screenshot&#34;&gt;Demo Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://sjp38.github.io/img/masim_stairs_snapshot.png&#34; alt=&#34;masim stairs snapshot&#34;&gt;
&lt;img src=&#34;https://sjp38.github.io/img/masim_stairs_heatmap_ascii.png&#34; alt=&#34;masim stairs heatmap in ascii&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;recent-news&#34;&gt;Recent News&lt;/h2&gt;
&lt;p&gt;Below are only a short list of recent news.  For complete list of the news,
please refer to a dedecated &lt;a href=&#34;https://sjp38.github.io/post/damon_news/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-21&lt;/em&gt;: Memory Management subsystem pull request for Linux v6.11-rc1 is
&lt;a href=&#34;https://lore.kernel.org/20240721145415.fbeb01a853962ef91334f3d1@linux-foundation.org&#34;&gt;posted&lt;/a&gt;
with DAMON changes for CXL memory
&lt;a href=&#34;https://lore.kernel.org/20240614030010.751-1-honggyu.kim@sk.com&#34;&gt;tiering&lt;/a&gt;,
&lt;a href=&#34;https://lore.kernel.org/20240621163626.74815-1-sj@kernel.org&#34;&gt;documentation&lt;/a&gt;
of a mailing tool for newcomers, and minor fixups.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-18&lt;/em&gt;: DAMON topic for Linux Kernel Memory Management Microconference at
LPC&#39;24 has &lt;a href=&#34;https://lpc.events/event/18/contributions/1768/&#34;&gt;accepted&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-11&lt;/em&gt;: ATC&#39;24 also published two DAMON-citing papers at the same time. The
first &lt;a href=&#34;https://www.usenix.org/conference/atc24/presentation/nair&#34;&gt;one&lt;/a&gt; proposes
a way to improve monitoring accuracy of DAMON, while the
second &lt;a href=&#34;https://www.usenix.org/conference/atc24/presentation/tabatabai&#34;&gt;one&lt;/a&gt;
mentions DAMON can be useful for extensible memory management.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-11&lt;/em&gt;: A couple of OSDI&#39;24 papers
(&lt;a href=&#34;https://www.usenix.org/conference/osdi24/presentation/xiang&#34;&gt;1&lt;/a&gt;,
&lt;a href=&#34;https://www.usenix.org/conference/osdi24/presentation/zhong-yuhong&#34;&gt;2&lt;/a&gt;) for
memory tiering that references and exploring DAMON as a part of them are
available now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2024-07-01&lt;/em&gt;: DAMON Quaterly Newsletter for 2024-Q2 has
&lt;a href=&#34;https://lore.kernel.org/20240701212244.52288-1-sj@kernel.org&#34;&gt;posted&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;You can start using DAMON by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;installing &lt;a href=&#34;#install&#34;&gt;DAMON-enabled kernel&lt;/a&gt; and its
&lt;a href=&#34;#user-space-tool&#34;&gt;user-space tool&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;following the &lt;a href=&#34;https://github.com/awslabs/damo#getting-started&#34;&gt;tutorial&lt;/a&gt; of
the user-space tool, and&lt;/li&gt;
&lt;li&gt;run the automated &lt;a href=&#34;#tests-package&#34;&gt;tests suite&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By following those, you will be able to know if DAMON works on your machine and
how you can use it.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href=&#34;#contribution&#34;&gt;participate&lt;/a&gt; in the development if you&amp;rsquo;re
interested.&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;DAMON is implemented in the Linux kernel, so you should install DAMON-enabled
Linux kernel to use it.  To check if you&amp;rsquo;re already running DAMON-enabled
kernel, you could:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ if grep CONFIG_DAMON /boot/config-$(uname -r); then echo &amp;quot;installed&amp;quot;; fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also find a list of DAMON-enabled Linux kernels from Oracle&amp;rsquo;s
kconfigs
&lt;a href=&#34;https://oracle.github.io/kconfigs/?config=UTS_RELEASE&amp;amp;config=DAMON&#34;&gt;tool&lt;/a&gt;.
The tool doesn&amp;rsquo;t support every distros at the moment, though.&lt;/p&gt;
&lt;p&gt;DAMON is enabled in
&lt;a href=&#34;https://aws.amazon.com/linux/?amazon-linux-whats-new.sort-by=item.additionalFields.postDateTime&amp;amp;amazon-linux-whats-new.sort-order=desc&#34;&gt;Amazon Linux&lt;/a&gt;
kernels that based on v5.4 or newer Linux kernels.
If you&amp;rsquo;re using &lt;a href=&#34;https://aws.amazon.com/amazon-linux-2/&#34;&gt;Amazon Linux 2&lt;/a&gt; and
not using DAMON-enabled kernel on the distro, you can install DAMON-enabled
kernels using its package manager,
&lt;a href=&#34;https://aws.amazon.com/premiumsupport/knowledge-center/ec2-install-extras-library-software/&#34;&gt;amazon-linux-extras&lt;/a&gt;.
For example, if you want to use DAMON with Amazon Linux v5.10 kernel, below
commands will work.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum install -y amazon-linux-extras
$ sudo amazon-linux-extras install kernel-5.10
$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that AL2 v5.10.y contains all DAMON features that available on mainline
while AL2 5.4.y contains only a part of DAMON features.  AL2 v5.10.y kernels
are recommended for the reason.&lt;/p&gt;
&lt;p&gt;If your package system doesn&amp;rsquo;t support DAMON-enabled kernel, you can
fetch a DAMON-merged Linux kernel &lt;a href=&#34;#source-code&#34;&gt;source tree&lt;/a&gt;, build, and
install it.  Note that you should enable kernel configuration options for
DAMON, depending on your demands.  For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd $THE_FETCHED_DAMON_KERNEL_SOURCE_TREE
$ make olddefconfig
$ echo &#39;CONFIG_DAMON=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_VADDR=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_PADDR=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_SYSFS=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_DBGFS=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_RECLAIM=y&#39; &amp;gt;&amp;gt; ./.config
$ echo &#39;CONFIG_DAMON_LRU_SORT=y&#39; &amp;gt;&amp;gt; ./.config
$ make -j$(nproc)
$ sudo make modules_install install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;There are several Linux kernel source trees having DAMON for different users.
You may pick one among those based on your needs.&lt;/p&gt;
&lt;p&gt;For users who want a &lt;strong&gt;stable&lt;/strong&gt; version of DAMON, below trees are recommended.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linus Torvalds&amp;rsquo; &lt;a href=&#34;https://git.kernel.org/torvalds/h/master&#34;&gt;mainline tree&lt;/a&gt;
contains the latest stable version of DAMON since v5.15.&lt;/li&gt;
&lt;li&gt;Amazon Linux kernel
&lt;a href=&#34;https://github.com/amazonlinux/linux/tree/amazon-5.10.y/master&#34;&gt;v5.10.y tree&lt;/a&gt;,
&lt;a href=&#34;https://github.com/amazonlinux/linux/tree/amazon-5.4.y/master&#34;&gt;v5.4.y tree&lt;/a&gt;
and all trees that based on v5.15 or newer Linux kernel contain stable
versions of DAMON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that AL2 v5.10.y contains all DAMON features that available on the
latest major releases of Linux while AL2 5.4.y contains only a part of DAMON
features, so AL2 v5.10.y is more recommended.&lt;/p&gt;
&lt;p&gt;If you have interests in DAMON features under &lt;strong&gt;development&lt;/strong&gt;, below trees will
be appropriate.  These trees contain latest version of DAMON which having
features under development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/akpm/mm/h/mm-unstable&#34;&gt;mm-unstable&lt;/a&gt; contains the
latest DAMON patches, which are under testing with other unstable memory
management subsystem patches.  So this tree is likely unstable and frequently
updated, but would be a good baseline for your DAMON development.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/sj/h/damon/next&#34;&gt;damon/next&lt;/a&gt; contains the latest
changes, which might not tested at all.  So this tree is likely more unstable
and frequently updated than mm-unstable.  This tree also contains some
changes that exist only for DAMON hacks itself rather than eventually be
merged in the mainline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For people who have interest in DAMON features under development but use LTS
kernels as their baseline, three &lt;em&gt;were&lt;/em&gt; trees that based on three latest LTS
kernels.&lt;/p&gt;
&lt;p&gt;NOTE: Below trees were continuously getting DAMON backports on latest 5.4.y,
5.10.y, and 5.15.y.  But those are deprecated as of 2022-09-03, and therefore
there will be no update to the trees.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/sj/h/damon/for-v5.15.y&#34;&gt;damon/for-v5.15.y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/sj/h/damon/for-v5.10.y&#34;&gt;damon/for-v5.10.y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git.kernel.org/sj/h/damon/for-v5.4.y&#34;&gt;damon/for-v5.4.y&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The source code of DAPTRACE, which is a prototype of DAMON, is also
&lt;a href=&#34;https://github.com/daptrace&#34;&gt;available&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;user-space-tool&#34;&gt;User-space Tool&lt;/h2&gt;
&lt;p&gt;A user-space tool for DAMON, which is called DAMO (Data Access Monitoring
Operator), is available at
&lt;a href=&#34;https://github.com/awslabs/damo&#34;&gt;Github&lt;/a&gt; and
&lt;a href=&#34;https://pypi.org/project/damo/&#34;&gt;PyPi&lt;/a&gt;.  You may start using DAMON by following
the &lt;a href=&#34;https://github.com/awslabs/damo#getting-started&#34;&gt;Getting Started&lt;/a&gt; of the
tool for start.&lt;/p&gt;
&lt;h2 id=&#34;tests-package&#34;&gt;Tests Package&lt;/h2&gt;
&lt;p&gt;There is a &lt;a href=&#34;https://github.com/awslabs/damon-tests&#34;&gt;tests suite&lt;/a&gt; for
correctness verification and performance evaluation of DAMON.  Those are
actively used for the development of DAMON.  Using that, you can test DAMON on
your machine with only a few simple commands or deeply understand the user
interface of DAMON.&lt;/p&gt;
&lt;p&gt;So, if you finished the
&lt;a href=&#34;https://github.com/awslabs/damo#getting-started&#34;&gt;tutorial&lt;/a&gt; but have no idea
about what to do next, running the tests would be a good start.  If any test
fails, please report that to the maintainer via mail (&lt;a href=&#34;mailto:sj@kernel.org&#34;&gt;sj@kernel.org&lt;/a&gt; or
&lt;a href=&#34;mailto:damon@lists.linux.dev&#34;&gt;damon@lists.linux.dev&lt;/a&gt;) or
&lt;a href=&#34;https://github.com/awslabs/damon-tests/issues&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;official-document&#34;&gt;Official Document&lt;/h2&gt;
&lt;p&gt;The official document of DAMON in the latest mainline for
&lt;a href=&#34;https://docs.kernel.org/admin-guide/mm/damon/index.html&#34;&gt;users/sysadmins&lt;/a&gt; and
&lt;a href=&#34;https://docs.kernel.org/mm/damon/index.html&#34;&gt;kernel programmers&lt;/a&gt; are
available.  Those for next major release are also available(&lt;a href=&#34;https://docs.kernel.org/next/admin-guide/mm/damon/index.html&#34;&gt;users/sysadmins
doc&lt;/a&gt;, &lt;a href=&#34;https://docs.kernel.org/next/mm/damon/index.html&#34;&gt;kernel
programmers doc&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;showcase-website&#34;&gt;Showcase Website&lt;/h2&gt;
&lt;p&gt;There is a showcase &lt;a href=&#34;https://damonitor.github.io/_index&#34;&gt;website&lt;/a&gt; that you can
get more information of DAMON.
The site hosts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the heatmap format dynamic access pattern of various realistic workloads for
&lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.heatmap.0.png.html&#34;&gt;heap&lt;/a&gt;
area,
&lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.heatmap.1.png.html&#34;&gt;mmap()-ed&lt;/a&gt;
area,
and
&lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.heatmap.2.png.html&#34;&gt;stack&lt;/a&gt;
area,&lt;/li&gt;
&lt;li&gt;the dynamic working set size
&lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.wss_sz.png.html&#34;&gt;distribution&lt;/a&gt;
and chronological working set
size &lt;a href=&#34;https://damonitor.github.io/test/result/visual/latest/rec.wss_time.png.html&#34;&gt;changes&lt;/a&gt;,
and&lt;/li&gt;
&lt;li&gt;daily performance test
&lt;a href=&#34;https://damonitor.github.io/test/result/perf/index.html&#34;&gt;results&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;evaluation-results&#34;&gt;Evaluation Results&lt;/h2&gt;
&lt;p&gt;Evaluation of DAMON and DAMON-based system optimizations are
&lt;a href=&#34;https://sjp38.github.io/post/damon_evaluation/&#34;&gt;available&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;damon-based-system-optimization-guide&#34;&gt;DAMON-based System Optimization Guide&lt;/h2&gt;
&lt;p&gt;A guide for DAMON-based system optimizations are also
&lt;a href=&#34;https://sjp38.github.io/post/damon_optimization_guide/&#34;&gt;available&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;profile-guided-optimization-example&#34;&gt;Profile-Guided Optimization Example&lt;/h2&gt;
&lt;p&gt;An example of DAMON-based profile-guided optimization is also
&lt;a href=&#34;https://sjp38.github.io/post/damon_profile_callstack_example/&#34;&gt;available&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;community&#34;&gt;Community&lt;/h2&gt;
&lt;p&gt;DAMON is maintained and developed by its own community, which is a sub-set of
the linux kernel development community.&lt;/p&gt;
&lt;p&gt;The community is mainly driven by the mailing list (&lt;a href=&#34;mailto:damon@lists.linux.dev&#34;&gt;damon@lists.linux.dev&lt;/a&gt;).
All the patches are posted there and reviewed.  Almost every discussions are
also made there.&lt;/p&gt;
&lt;p&gt;For easy communication, a mailing tool called
&lt;a href=&#34;https://github.com/sjp38/hackermail&#34;&gt;HacKerMaiL&lt;/a&gt; is recommended.  The tool
is maintained by DAMON maintainer and committed to support DAMON community.&lt;/p&gt;
&lt;p&gt;If you prefer web-based interface for reading the mails, you can use
&lt;a href=&#34;https://lore.kernel.org/damon/&#34;&gt;lore&lt;/a&gt;.  If you prefer the traditional
subscription based mailing workflow, you can subscribe to the mailing list via
&lt;a href=&#34;https://subspace.kernel.org/lists.linux.dev.html&#34;&gt;subspace.kernel.org&lt;/a&gt;
following the &lt;a href=&#34;https://subspace.kernel.org/#subscribing&#34;&gt;instruction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The community also have an open, regular, and informal virtual bi-weekly
meeting series for DAMON community called DAMON Beer/Coffee/Tea chat
&lt;a href=&#34;https://lore.kernel.org/damon/20220810225102.124459-1-sj@kernel.org/&#34;&gt;series&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;contribution&#34;&gt;Contribution&lt;/h2&gt;
&lt;p&gt;DAMON and its related projects including
&lt;a href=&#34;https://github.com/awslabs/damo&#34;&gt;&lt;code&gt;damo&lt;/code&gt;&lt;/a&gt; and
&lt;a href=&#34;https://github.com/sjp38/hackermail&#34;&gt;&lt;code&gt;hackermail&lt;/code&gt;&lt;/a&gt; are open source projects.
You can contribute to the development following the guidelines.  Please refer
to contribution guidelines of each project to further look into the process.&lt;/p&gt;
&lt;p&gt;For DAMON in Linux kernel, please also read the maintainer&amp;rsquo;s profile
&lt;a href=&#34;https://www.kernel.org/doc/html/latest/mm/damon/maintainer-profile.html&#34;&gt;document&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;publications-and-presentations&#34;&gt;Publications and Presentations&lt;/h2&gt;
&lt;p&gt;Below are featured and/or upcoming publications and presentations covering
DAMON.
For more complete list of those, please refer to another
dedicated &lt;a href=&#34;https://sjp38.github.io/post/damon_publications_talks/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMON Recipes: Ways to Save Memory Using a Linux Kernel
Subsystem in the Real World.&lt;/strong&gt; In Open Source Summit Europe, Sep 2024.
&lt;a href=&#34;https://sched.co/1ej2S&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMON Updates and Plans: Automation of DAMON tuning,
tiering, and VM guest scaling.&lt;/strong&gt;
In &lt;em&gt;Linux Storage | Filesystem | MM &amp;amp; BPF Summit&lt;/em&gt;, May 2024.
&lt;a href=&#34;https://github.com/damonitor/talks/blob/master/2024/lsfmmbpf/damon_lsfmmbpf_2024.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/ywmwXq01ySA?feature=shared&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/176LXLys9Uh6A-Eal2flrzcbUSJMUXGkGwyihr9jAAaQ/edit?usp=sharing&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan Corbet, &lt;strong&gt;An update and future plans for DAMON.&lt;/strong&gt; In Linux Weekly
News, May 2024.
&lt;a href=&#34;https://lwn.net/Articles/973702/&#34;&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMO[N,S]?: Implementing Self-Driven Data Access-Aware
Efficient Linux System.&lt;/strong&gt; In Open Source Summit North America, Apr 2024.
&lt;a href=&#34;https://static.sched.com/hosted_files/ossna2024/ff/damo_damon_damos_ossummit_na_2024.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/vP5x5P47S1U?feature=shared&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://sched.co/1aBOg&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMON: Current Status and Future Plans.&lt;/strong&gt;
In Kernel Summit, Nov 2023.
&lt;a href=&#34;https://lpc.events/event/17/contributions/1624/attachments/1340/2732/damon_status_and_plans_kernel_summit_2023_11_15.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;http://www.youtube.com/watch?v=rwHCGA3ppT4&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://lpc.events/event/17/contributions/1624/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;Data Access Monitoring Operator (DAMO): User-Space
Tool/Python Library for Access-Aware Profiling and Optimization of Your Linux
Systems.&lt;/strong&gt;
In Open Source Summit Europe, Sep 2023.
&lt;a href=&#34;https://static.sched.com/hosted_files/osseu2023/92/damo_ossummit_eu_2023.pdf?_gl=1*ddzen2*_ga*NTQ4MTgzOTIyLjE2Nzg4MTE1NzY.*_ga_XH5XM35VHB*MTY5NTE5NDc1My4xNS4xLjE2OTUxOTc4NTUuNjAuMC4w&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/i7_W8-MozxY?si=AFhtdAzTbJJJFeGE&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://sched.co/1OGf9&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan Corbet, &lt;strong&gt;A 2023 DAMON update.&lt;/strong&gt; In Linux Weekly News, May 2023.
&lt;a href=&#34;https://lwn.net/Articles/931769/&#34;&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMON, DAMOS, and DAMO: Kernel Subsystems and User-Space
Tools for Data Access-Aware System Analysis/Optimizations.&lt;/strong&gt;
In &lt;em&gt;Open Source Summit North America&lt;/em&gt;, May 2023.
&lt;a href=&#34;https://github.com/damonitor/talks/blob/master/2023/ossummit_na/damon_damos_damo_ossummit_na_2023.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/fImXcHS5PPE&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://sched.co/1K5HS&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;DAMON updates and future plans.&lt;/strong&gt;
In &lt;em&gt;Linux Storage | Filesystem | MM &amp;amp; BPF Summit&lt;/em&gt;, May 2023.
&lt;a href=&#34;https://github.com/damonitor/talks/blob/master/2023/lsfmmbpf/damon_lsfmmbpf_2023.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://www.youtube.com/watch?v=bbC23ApPvow&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://events.linuxfoundation.org/lsfmm/program/schedule-at-a-glance/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;Current Status and Future Plans of DAMON.&lt;/strong&gt;
In &lt;em&gt;The Linux Kernel Summit&lt;/em&gt;, September 2022.
&lt;a href=&#34;https://lpc.events/event/16/contributions/1224/attachments/1107/2137/damon_status_plan_ksummit_2022.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://youtu.be/e2SZoUPhDRg?t=13245&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://lpc.events/event/16/contributions/1224/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan Corbet, &lt;strong&gt;LRU-list manipulation with DAMON.&lt;/strong&gt; In Linux Weekly News,
August 2022.  &lt;a href=&#34;https://lwn.net/Articles/905370/&#34;&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Madhuparna Bhowmik, Alexandru Uta, &lt;strong&gt;DAOS: Data Access-aware
Operating System.&lt;/strong&gt; In &lt;em&gt;The 31st International ACM Symposium on
High-Performance Parallel and Distributed Computing (HPDC&#39;22)&lt;/em&gt;, June 2022.
&lt;a href=&#34;https://www.amazon.science/publications/daos-data-access-aware-operating-system&#34;&gt;Paper&lt;/a&gt;,
&lt;a href=&#34;https://damonitor.github.io/misc/daos_hpdc_2022_slides.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://damonitor.github.io/misc/daos_hpdc_2022_poster.pdf&#34;&gt;Poster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan Corbet, &lt;strong&gt;Using DAMON for proactive reclaim.&lt;/strong&gt; In Linux Weekly News,
July 2021.  &lt;a href=&#34;https://lwn.net/Articles/863753/&#34;&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan Corbet, &lt;strong&gt;Memory-management optimization with DAMON.&lt;/strong&gt; In Linux
Weekly News, February 2020.
&lt;a href=&#34;https://lwn.net/Articles/812707/&#34;&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Yunjae Lee, Heon Y. Yeom, &lt;strong&gt;Profiling Dynamic Data Access
Patterns with Controlled Overhead and Quality.&lt;/strong&gt; In 20th ACM/IFIP
International Middleware Conference Industry, December 2019.
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3368125&#34;&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DAPHICX: Data Access Pattern Hint Injecting Compiler Extension</title>
      <link>https://sjp38.github.io/post/daphicx/</link>
      <pubDate>Thu, 30 May 2019 18:59:53 +0900</pubDate>
      <guid>https://sjp38.github.io/post/daphicx/</guid>
      <description>&lt;p&gt;Memory pressure is inevitable as the size of working sets is rapidly growing
while the capacity of dynamic random access memory (DRAM) is not. Meanwhile,
storage devices have evolved so that their speed is comparable to the speed of
DRAM while their capacity scales are comparable to that of hard disk drives
(HDD). Thus, hierarchial memory systems configuring DRAM as the main memory and
high-end storages as swap devices will be common.&lt;/p&gt;
&lt;p&gt;Due to the unique characteristics of these modern storage devices, the swap
target decision should be optimal. It is essential to know the exact data
access patterns of workloads for such an optimal decision, although underlying
systems cannot accurately estimate such complex and dynamic patterns. For this
reason, memory systems allow programs to voluntarily hint their data access
pattern. Nevertheless, it is exhausting for a human to manually figure out the
patterns and embed optimal hints if the workloads are huge and complex.&lt;/p&gt;
&lt;p&gt;This project introduces a compiler extension that automatically optimizes a
program to voluntarily hint its dynamic data access patterns to the underlying
swap system using a static/dynamic analysis based profiling result. To our best
knowledge, this is the first profile-guided optimization (PGO) for modern swap
devices. Our empirical evaluation of the scheme using realistic workloads shows
consistent improvement in performance and swap device lifetime up to 2.65 times
and 2.98 times, respectively.&lt;/p&gt;
&lt;h1 id=&#34;publications-and-presentations&#34;&gt;Publications And Presentations&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;SeongJae Park, Yunjae Lee, Moonsub Kim Heon Y. Yeom, &lt;strong&gt;Automating Context
Based Access Pattern Hint Injection for System Performance and Swap Storage
Durability.&lt;/strong&gt; In 11th USENIX Workshop on Hot Topics in Storage and File
Systems (HotStorage), July 2019.
&lt;a href=&#34;https://www.usenix.org/system/files/hotstorage19-paper-park.pdf&#34;&gt;Paper&lt;/a&gt;,
&lt;a href=&#34;https://www.usenix.org/sites/default/files/conference/protected-files/hotstorage19_slides_park.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Yunjae Lee, Moonsub Kim, Heon Y. Yeom, &lt;strong&gt;Automated Data Access
Pattern Hint Instrumentation for System Performance and Durability of Swap
Storages.&lt;/strong&gt; (WiP) In 17th USENIX Conference on File and Storage Technologies
(FAST), February 2019.
&lt;a href=&#34;https://www.usenix.org/conference/fast19/wips&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Idle Page Tracking Tools</title>
      <link>https://sjp38.github.io/post/idle_page_tracking/</link>
      <pubDate>Wed, 13 Sep 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/post/idle_page_tracking/</guid>
      <description>&lt;p&gt;&lt;code&gt;idle_page_tracking&lt;/code&gt;[1] is a simple, stupid toolbox for idle pages tracking.
It can be used to get real working set size of a process.&lt;/p&gt;
&lt;h1 id=&#34;tools&#34;&gt;Tools&lt;/h1&gt;
&lt;p&gt;This section describes two tools in the box though more tools exists.  You can
get more description about each tool from the README in the repository[1].&lt;/p&gt;
&lt;h2 id=&#34;userprog&#34;&gt;userprog&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;userprog&lt;/code&gt; is a sample synthetic workload for test of other tools.  It
interactively allocates and access specified pages in the allocated pages.
After execution, it first asks how many pages to allocates.  Once you type in
how many pages to allocate, the program will repeatedly asks how many pages in
the allocated pages you want to do access.&lt;/p&gt;
&lt;h2 id=&#34;wspagessh&#34;&gt;wspages.sh&lt;/h2&gt;
&lt;p&gt;Now you can calculate working set size of a process using the tools.  To
simplify the life even more, &lt;code&gt;wspages.sh&lt;/code&gt; helps the complicated works.  It
requires pid, time interval, and target memory mapped regions as argument.  The
third argument can be ignored.  In the case, it uses heap, stack, and anonymous
pages as target memory region by default.  If you give the arguments well, this
tool will prints out number of pages accessed between the time interval.
Simple example of usage and output is as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo ./wspages.sh `pidof userprog` 1 [heap]
3
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;wspgstatsh&#34;&gt;wspgstat.sh&lt;/h2&gt;
&lt;p&gt;Like &lt;code&gt;*stat&lt;/code&gt; programs (such as vmstat, iostat, &amp;hellip;), wspgstat.sh monitors and
print out number of pages in working set of specific process repeatedly.  It
requires pid of target program, delay between idleness check, and target memory
mapped regions as arguments.  The third argument is optional and has default
value as same as wspages.sh&amp;rsquo;s same argument.  Simple example usage is as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./wspgstat.sh `pidof mysqld` 5
1 17448
9 21536
18 21659
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;limitations&#34;&gt;Limitations&lt;/h1&gt;
&lt;p&gt;The tools use idle page tracking feature of the Linux kernel[2] internally.  It
means that the tools work on Linux systems that idle page tracking feature is
turned on.  You can check whether your system turned on or off the feature by
simply running the command below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ if [ -d /sys/kernel/mm/page_idle ]; \
        then echo &amp;quot;ON&amp;quot;; else echo &amp;quot;OFF&amp;quot;; fi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It also shares limitation of idle page tracking feature of the Linux kernel.
It tracks only userspace pages on LRU list of the kernel.&lt;/p&gt;
&lt;h1 id=&#34;license&#34;&gt;License&lt;/h1&gt;
&lt;p&gt;GPL v3&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://github.com/sjp38/idle_page_tracking&#34;&gt;https://github.com/sjp38/idle_page_tracking&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://www.kernel.org/doc/Documentation/vm/idle_page_tracking.txt&#34;&gt;https://www.kernel.org/doc/Documentation/vm/idle_page_tracking.txt&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>lkml livestream</title>
      <link>https://sjp38.github.io/post/lkml_go/</link>
      <pubDate>Sun, 28 May 2017 17:51:43 +0900</pubDate>
      <guid>https://sjp38.github.io/post/lkml_go/</guid>
      <description>&lt;p&gt;I wrote a simple, stupid program[1] that showing LKML[2] mails in terminal
briefly like twitter livestream in Go language.  It is just an early version
and so many things to be complemented exists, though.  Nevertheless, now it
just works as I wanted at first.&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://github.com/sjp38/lkml&#34;&gt;https://github.com/sjp38/lkml&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_kernel_mailing_list&#34;&gt;https://en.wikipedia.org/wiki/Linux_kernel_mailing_list&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>https://sjp38.github.io/post/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>https://sjp38.github.io/post/gcma/</guid>
      <description>&lt;p&gt;The importance of physically contiguous memory has increased in modern
computing environments, including both low- and high-end systems. Existing
physically contiguous memory allocators generally have critical limitations.
For example, the most commonly adopted solution, the memory reservation
technique, wastes a significant amount of memory space. Scatter/Gather direct
memory access (DMA) and input-output memory management units (IOMMUs) avoid
this problem by utilizing additional hardware for address space virtualization.
However, additional hardware means an increase in costs and power consumption,
which is especially disadvantageous for small systems and they do not provide
real contiguous memory. Linux Contiguous Memory Allocator (CMA) aims to provide
both contiguous memory allocation and to maximize memory utilization based on
page migration, but they suffer from unpredictably long latency and a high
probability of allocation failure. Therefore, we introduce a new solution to
this problem, the guaranteed contiguous memory allocator (GCMA). This
guarantees efficient memory space utilization, short latency, and successful
allocation. The GCMA uses a reservation scheme and increases memory utilization
by sharing the memory with immediately discardable data. Our evaluation of a
GCMA on a Raspberry Pi 2 finds a latency that is 15-130 times lower compared to
a CMA, and a latency that is up to 10 times lower when taking a photo. Using a
large working set in a memory-fragmented high-end system, the GCMA is able to
produce a 2.27× speedup.&lt;/p&gt;
&lt;h1 id=&#34;source-code&#34;&gt;Source Code&lt;/h1&gt;
&lt;p&gt;The source code for this version has been submitted to &lt;a href=&#34;https://lkml.org/lkml/2015/2/23/480&#34;&gt;LKML&lt;/a&gt; for discussion.
A complete git tree is also available at &lt;a href=&#34;https://github.com/gcma-mm/linux&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;publications-and-presentations&#34;&gt;Publications and Presentations&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;SeongJae Park, Minchan Kim, Heon Y. Yeom, &lt;strong&gt;GCMA: Guaranteed Contiguous
Memory Allocator.&lt;/strong&gt; In &lt;em&gt;Transactions on Computers&lt;/em&gt;, March 2019.
&lt;a href=&#34;https://ieeexplore.ieee.org/document/8456561&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, &lt;strong&gt;GCMA: Guaranteed Contiguous Memory Allocator.&lt;/strong&gt; In &lt;em&gt;The
Linux Kernel Summit&lt;/em&gt;, November 2018.
&lt;a href=&#34;https://linuxplumbersconf.org/event/2/contributions/247/attachments/74/85/gcma_ksummit2018.pdf&#34;&gt;Slides&lt;/a&gt;,
&lt;a href=&#34;https://www.youtube.com/watch?v=ARrelFfdVkw&#34;&gt;Video&lt;/a&gt;,
&lt;a href=&#34;https://linuxplumbersconf.org/event/2/contributions/247/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Minchan Kim, Heon Y. Yeom, &lt;strong&gt;GCMA: Guaranteed Contiguous
Memory Allocator.&lt;/strong&gt; In &lt;em&gt;45th issue of ACM SIGBED Review&lt;/em&gt;, January 2016.
&lt;a href=&#34;http://sigbed.seas.upenn.edu/archives/2016-01/EWiLi15_4.pdf&#34;&gt;Paper&lt;/a&gt;,
&lt;a href=&#34;http://sigbed.seas.upenn.edu/vol13_num1.html#issue&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Minchan Kim, Heon Y. Yeom, &lt;strong&gt;GCMA: Guaranteed Contiguous
Memory Allocator.&lt;/strong&gt; In &lt;em&gt;Embedded Operating Systems Workshop (EWiLi)&lt;/em&gt;, October
2015.
&lt;a href=&#34;http://ceur-ws.org/Vol-1464/ewili15_12.pdf&#34;&gt;Paper&lt;/a&gt;,
&lt;a href=&#34;https://www.slideshare.net/SeongJaePark1/gcma-guaranteed-contiguous-memory-allocator&#34;&gt;Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SeongJae Park, Minchan Kim, &lt;strong&gt;GCMA: Guaranteed Contiguous Memory Allocator.&lt;/strong&gt;
In &lt;em&gt;Linux Foundation Korea Linux Forum (LFKLF)&lt;/em&gt;, October 2014.
&lt;a href=&#34;http://events.linuxfoundation.org/sites/events/files/slides/gcma-guaranteed_contiguous_memory_allocator-lfklf2014_0.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>&#34;Is Parallel Programming Hard, And, If So, What Can You Do About It?&#34; Translation</title>
      <link>https://sjp38.github.io/post/perfbook-kokr/</link>
      <pubDate>Tue, 10 Jan 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/post/perfbook-kokr/</guid>
      <description>&lt;p&gt;&amp;ldquo;Is Parallel Programming is Hard, And, If So, What Can You Do About It?&amp;quot;[1] 은
parallel programming 분야에서 대가라 불릴만한 분으로, 이쪽 분야에서 매우 중요한
동기화 메커니즘인 RCU[2] 를 개발했으며 리눅스 커널의 RCU 메인테이너로 활동하고
있는 Paul E. McKenney[3] 가 오픈소스 방식으로 저술하고 있는, parallel
programming 에 대한 책입니다.&lt;/p&gt;
&lt;p&gt;개인적으로 이 책의 한국어 번역을 오픈소스[4]로 진행하고 있습니다.  이
프로젝트는 원저작자인 Paul 에게 공식 한국어 번역으로 인증받았습니다[5].&lt;/p&gt;
&lt;p&gt;컨트리뷰션에 대해서도 열려 있으니, 이에 관심 있는 분은 repository 내의 README
문서의 Contribution 섹션[6] 을 참고 바랍니다.&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://www.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html&#34;&gt;https://www.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&#34;https://en.wikipedia.org/wiki/Read-copy-update&#34;&gt;https://en.wikipedia.org/wiki/Read-copy-update&lt;/a&gt;&lt;br&gt;
[3] &lt;a href=&#34;http://www.rdrop.com/~paulmck/&#34;&gt;http://www.rdrop.com/~paulmck/&lt;/a&gt;&lt;br&gt;
[4] &lt;a href=&#34;https://github.com/sjp38/perfbook-ko_KR&#34;&gt;https://github.com/sjp38/perfbook-ko_KR&lt;/a&gt;&lt;br&gt;
[5] &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee046026d3f98592c411a20219b96c8e50&#34;&gt;https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee046026d3f98592c411a20219b96c8e50&lt;/a&gt;&lt;br&gt;
[6] &lt;a href=&#34;https://github.com/sjp38/perfbook-ko_KR#contribution&#34;&gt;https://github.com/sjp38/perfbook-ko_KR#contribution&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
