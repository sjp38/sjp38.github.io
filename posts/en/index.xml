<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on hacklog</title>
    <link>https://sjp38.github.io/posts/en/</link>
    <description>Recent content in Posts on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Oct 2025 09:20:04 -0700</lastBuildDate>
    <atom:link href="https://sjp38.github.io/posts/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LKML News v6.18-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.18-rc2/</link>
      <pubDate>Thu, 16 Oct 2025 09:20:04 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.18-rc2/</guid>
      <description>[RFC PATCH v10 mm-new 0/9] mm, bpf: BPF-MM, BPF-THP (Yafang Shao) https://lore.kernel.org/20251015141716.887-1-laoar.shao@gmail.com
Yafang posted 10th RFC version of BPF-based THP control patch series.</description>
    </item>
    <item>
      <title>LKML News v6.18-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.18-rc1/</link>
      <pubDate>Tue, 30 Sep 2025 06:45:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.18-rc1/</guid>
      <description>[PATCH v6 00/23] mm/ksw: Introduce real-time KStackWatch debugging tool (Jinchao Wang) https://lore.kernel.org/20250930024402.1043776-1-wangjinchao600@gmail.com
Jinchao Wang posted sixth versin of the kernel stack watching tool patchset.
[GIT PULL] slab updates for 6.18 (Vlastimil Babka) https://lore.kernel.org/5dc1b53d-29fb-42f6-9fff-d6b42da17a7f@suse.cz
Vlastimil posted SLAB subsystem pull request for 6.18 to Linus Torvalds. This includes the SLAB sheves and re-entrant kmalloc_nolock().
[GIT PULL] MM updates for 6.18-rc1 (Andrew Morton) https://lore.kernel.org/20251001190218.f33f695b869696c2df9e841d@linux-foundation.org
Andrew posted memory management subsystem pull requests for 6.18-rc1 to Linus Torvalds.</description>
    </item>
    <item>
      <title>LKML News v6.17</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17/</link>
      <pubDate>Mon, 29 Sep 2025 06:38:01 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17/</guid>
      <description>Linux 6.17 (Linus Torvalds) https://lore.kernel.org/CAHk-=wiX38oG6=xFBNLO0pnjqHfxzjd6-1kZ5Nv9HfqNC2PoFA@mail.gmail.com
Linus released Linux 6.17, mentioning there were no huge surprises this past week.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc6/</link>
      <pubDate>Tue, 09 Sep 2025 20:06:10 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc6/</guid>
      <description>[TECH TOPIC] Reaching consensus on CONFIG_HIGHMEM phaseout (Arnd Bergman) https://lore.kernel.org/4ff89b72-03ff-4447-9d21-dd6a5fe1550f@app.fastmail.com
Arnd proposes a kernel summit session for discussing removal of CONFIG_HIGHMEM.
Linux 6.17-rc6 (Linus Torvalds) https://lore.kernel.org/CAHk-=wganrF=w6xndv5kFeM9v2QwtZW4yzgHY=0=SwnjxxFVaA@mail.gmail.com
Linus announced the sixth candiate for Linux 6.17. Linus says apparently this release and calm and nice, maybe because of the vacations in August.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc5/</link>
      <pubDate>Mon, 01 Sep 2025 20:06:52 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc5/</guid>
      <description>[GIT PULL] hotfixes for 6.17-rc5 (Andrew Morton) https://lore.kernel.org/20250901172234.3a74524a97b595a5a81d1697@linux-foundation.org
Andrew posted MM hotfixes pull request for 6.17-rc5 to Linus Torvalds.
[PATCH v2 RFC 0/7] KFuzzTest: a new kernel fuzzing framework (Ethan Graham) https://lore.kernel.org/20250901164212.460229-1-ethan.w.s.graham@gmail.com
Ethan posted second RFC version patch series for kernel internal fuzzing test framework.
[v4 00/15] mm: support device-private THP (Balbir Singh) https://lore.kernel.org/20250903011900.3657435-1-balbirs@nvidia.com
Balbir posted the fourth version of the patch series for supporting THP on device-private memory.
Where to put page-&amp;gt;memdesc initially (Matthew Wilcox) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc4/</link>
      <pubDate>Wed, 27 Aug 2025 07:11:03 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc4/</guid>
      <description>[PATCH v6 mm-new 00/10] mm, bpf: BPF based THP order selection (Yafang Shao) https://lore.kernel.org/20250826071948.2618-1-laoar.shao@gmail.com
Yafang posted the sixth version of his patch series for deciding THP order for given virtual memory range using BPF.
[Linux Memory Hotness and Promotion] Notes from August 14, 2025 (David Rientjes) https://lore.kernel.org/fc0143a1-568f-f90c-9422-e642b3c0b515@google.com
David posted notes of discussions that made on last Linux Memory Hotness and Promotion meeting.
Linux 6.17-rc4 (Linus Torvalds) https://lore.kernel.org/CAHk-=whHNCj4Xw5xWoKhgP0BAOe0msFRVXKSQku9Qgxhc0eHbQ@mail.gmail.com
Torvalds announces the fourth candidate for Linux v6.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc3/</link>
      <pubDate>Tue, 19 Aug 2025 06:53:57 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc3/</guid>
      <description>[RFC PATCH v5 mm-new 0/5] mm, bpf: BPF based THP order selection (Yafang Shao) https://lore.kernel.org/20250818055510.968-1-laoar.shao@gmail.com
Yafang posted the fifth RFC patch series for BPF-based THP control.
[PATCH v1 00/14] mm: BPF OOM (Roman Guschin) https://lore.kernel.org/20250818170136.209169-1-roman.gushchin@linux.dev
Roman posted the first non-RFC patchset for BPF-based out of memory handling.
[RFC PATCH mm-next v2 00/12] mm/damon: support ARM32 with LPAE (Quanmin Yan) https://lore.kernel.org/20250820080623.3799131-1-yanquanmin1@huawei.com
Quanmin posted second RFC version of patch series for extending DAMON to support ARM32 with LPAE.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc2/</link>
      <pubDate>Tue, 12 Aug 2025 07:15:20 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc2/</guid>
      <description>[PATCH v3 00/11] mm: vm_normal_page*() improvements (David Hildenbrand) https://lore.kernel.org/20250811112631.759341-1-david@redhat.com
David posted third version of the patch series for improving vm_normal_page*().
[RFC PATCH v4 00/28] Cache aware load-balancing (Chen Yu) https://lore.kernel.org/cover.1754712565.git.tim.c.chen@linux.intel.com
Chen Yu posted a patch series for cache-aware scheduping, which was originally proposed by Pter.
[PATCH 00/10] mm: make mm-&amp;gt;flags a bitmap and 64-bit on all arches (Lorenzo Stoakes) https://lore.kernel.org/cover.1755012943.git.lorenzo.stoakes@oracle.com
Lorenzo posted a patch series for refactoring mm-&amp;gt;flags for arch-indenpendent and safe-to-use type.</description>
    </item>
    <item>
      <title>LKML News v6.17-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc1/</link>
      <pubDate>Tue, 29 Jul 2025 07:03:05 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.17-rc1/</guid>
      <description>[PATCH v1 0/2] mm/damon: Add damos_stat support for vaddr PanJason https://lore.kernel.org/cover.1753794408.git.pyyjason@gmail.com
Pan posted a patch series letting virtual address space monitoring operations of DAMON to support DAMOS_STAT with hugepage_size filter.
[RFC PATCH v4 0/4] mm, bpf: BPF based THP order selection (Yafang Shao) https://lore.kernel.org/20250729091807.84310-1-laoar.shao@gmail.com
Yafang posted the fourth veersion of bpf-based THP order selection patch series.
[Linux Memory Hotness and Promotion] Notes from July 17, 2025 (David Rientjes) https://lore.kernel.org/c2f5a8d7-061b-7649-2b9d-03e6314d1102@google.com
David shares a note from the last Linux Memory Hotness and Promotion call.</description>
    </item>
    <item>
      <title>LKML News v6.16</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16/</link>
      <pubDate>Tue, 22 Jul 2025 06:39:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16/</guid>
      <description>[PATCH POC] prctl: extend PR_SET_THP_DISABLE to optionally exclude VM_HUGEPAGE (David Hildenbrand) https://lore.kernel.org/20250721090942.274650-1-david@redhat.com
David posted a patch for extending prctl() for more fine-tuned control of THP behaviors per processes with their childs.
[PATCH v2] MAINTAINERS: add MM MISC section, add missing files to MISC and CORE (Lorenzo Stoakes) https://lore.kernel.org/20250723095823.21940-1-lorenzo.stoakes@oracle.com
Lorenzo posted a patch for further making MM sections on MAINTAINERS file be well organized.
[RFC][PATCH v2 00/29] introduce kmemdump (Eugen Hristev) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc7/</link>
      <pubDate>Tue, 15 Jul 2025 06:46:58 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc7/</guid>
      <description>[PATCH v9 00/14] khugepaged: mTHP support (Nico Pache) https://lore.kernel.org/20250714003207.113275-1-npache@redhat.com
Nico posted ninth version of the patch series for adding mTHP support on khugepaged.
[PATCH v7 0/7] use per-vma locks for /proc/pid/maps reads (Suren Baghadasaryan) https://lore.kernel.org/20250716030557.1547501-1-surenb@google.com
Suren posted the seventh version of the patch series making reading of /proc/pid/maps with only per-vma locks.
[PATCH v5 00/15] kunit: Introduce UAPI testing framework (Thomas Weißschuh) https://lore.kernel.org/20250717-kunit-kselftests-v5-0-442b711cde2e@linutronix.de
Thomas posted fifth version of his patch series for unifying kunit and kselftest.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc6/</link>
      <pubDate>Mon, 14 Jul 2025 06:38:42 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc6/</guid>
      <description>Linux 6.16-rc6 (Linus Torvalds) https://lore.kernel.org/CAHk-=wgMZkz3O5d3aHvbw3uN9JyF1Lt1xrpTYdEuZmU7aUYJ3w@mail.gmail.com
Linus released the sixth candidate of Linux v6.16. Linus mentions there was an issue that made him scared, but it turned out it was a simple issue. Release of v6.16 is back on the track.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc5/</link>
      <pubDate>Tue, 01 Jul 2025 07:13:24 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc5/</guid>
      <description>[PATCH v1 00/29] mm/migration: rework movable_ops page migration (part 1) (David Hildenbrand) David prepares the future that struct page and struct folio be decoupled and hence movable_ops page became no folio.
[PATCH v8 00/15] khugepaged: mTHP support (Nico Pache) https://lore.kernel.org/20250702055742.102808-1-npache@redhat.com
Nico Pache sent the eighth versin of his patch series for mTHP support on khugepaged.
[RFC PATCH v3 00/13] mm/damon/vaddr: Allow interleaving in migrate_{hot,cold} actions (Bijan Tabatabai) https://lore.kernel.org/20250702201337.5780-1-bijan311@gmail.com
Bijan posted third RFC version of DAMOS-based memory interleaving patch series.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc4/</link>
      <pubDate>Fri, 27 Jun 2025 07:25:29 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc4/</guid>
      <description>[PATCH 0/3] mm: introduce snapshot_page() (Luiz Capitulino) https://lore.kernel.org/cover.1750961812.git.luizcap@redhat.com
Luiz introduces a helper functions for creating a snapshot of a page and its folio.
[PATCH v4 0/2] fix MADV_COLLAPSE issue if THP settings are disabled (Baolin Wang) https://lore.kernel.org/cover.1750815384.git.baolin.wang@linux.alibaba.com
Baolin posted a patch series for making THP never means never.
Linux 6.16-rc4 (Linus Torvalds) https://lore.kernel.org/CAHk-=wjqJeFHs_CsO2MeFLi-qceFM7_dVfKBMH4B7oVJaH6tHQ@mail.gmail.com
Linus released the fourth candidate for Linux 6.16. Linus mentions things look fairly normal despite of the large merge window.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc3/</link>
      <pubDate>Tue, 17 Jun 2025 07:29:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc3/</guid>
      <description>[RFC 0/3] mm: introduce snapshot_page() (Luiz Capitulino) https://lore.kernel.org/cover.1750170418.git.luizcap@redhat.com
Luiz posted an RFC patch series for introducing a helper function for showing consistent view of a folio, and using it from kpagecount and stable_page_flags().
[RFC PATCH v1 0/4] Kernel thread based async batch migration (Bharata B Rao) https://lore.kernel.org/20250616133931.206626-1-bharata@amd.com
Bharata posted an RFC patch series for doing pages migration in an asynchronous and batched way.
[Linux Memory Hotness and Promotion] Notes from June 5, 2025 (David Rientjes) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc2/</link>
      <pubDate>Tue, 10 Jun 2025 06:52:11 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc2/</guid>
      <description>[PATCH RFC] mm: madvise: use per_vma lock for MADV_FREE (Barry Song) https://lore.kernel.org/20250610055920.21323-1-21cnbao@gmail.com
Barry posted ano ther RFC for using per-vma lock for MADV_FREE.
[Invitation] Linux MM Alignment Session on SLUB Sheaves counters on Wednesday (David Rientjes) https://lore.kernel.org/7e833009-9eb7-cfbd-ee94-590035da84c0@google.com
David announces next Linux MM alignment session for SLUB sheaves, which will be led by Vlastimil Babka.
[RFC PATCH 0/4] mm/damon: Add DAMOS action to interleave data across nodes (Bijan Tabatabai) https://lore.kernel.org/20250612181330.31236-1-bijan311@gmail.com
Bijan posted a patch series for utilizing DAMON to do dynamic memory interleaving.</description>
    </item>
    <item>
      <title>LKML News v6.16-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc1/</link>
      <pubDate>Tue, 27 May 2025 06:54:01 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.16-rc1/</guid>
      <description>[PATCH RFC] mm: use per_vma lock for MADV_DONTNEED (Barry Song) https://lore.kernel.org/20250527044145.13153-1-21cnbao@gmail.com
Barry posted an RFC to make MADV_DONTNEED madvise() calls to use per-vma lock when the region is in a signle vma.
[PATCH v4] tools/mm: Add script to display page state for a given PID and VADDR (Ye Liu) https://lore.kernel.org/20250528091543.355386-1-ye.liu@linux.dev
Ye posted fourth version of a patch for drgn script that shows detailed information of page for a given virtual address.</description>
    </item>
    <item>
      <title>I will have a talk at the Kernel Recipes 2025</title>
      <link>https://sjp38.github.io/posts/en/kernel_recipes_2025_talk/</link>
      <pubDate>Fri, 23 May 2025 07:59:31 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernel_recipes_2025_talk/</guid>
      <description>DAMON talk for Kernel Recipes 2025 has been scheduled. The title of the talk is &amp;ldquo;Overcoming Observer Effects in Memory Management with DAMON&amp;rdquo;. It will introduce DAMON at whole for wider audience.</description>
    </item>
    <item>
      <title>LKML News v6.15</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15/</link>
      <pubDate>Tue, 20 May 2025 06:57:25 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15/</guid>
      <description>[RFC PATCH v2 0/5] mm, bpf: BPF based THP adjustment (Yafang Shao) https://lore.kernel.org/20250520060504.20251-1-laoar.shao@gmail.com
Yafang posted the second version of BPF-based THP policy adjustment patch series.
[RFC PATCH 0/5] add process_madvise() flags to modify behaviour (Lorenzo Stoakes) https://lore.kernel.org/cover.1747686021.git.lorenzo.stoakes@oracle.com
Lorenzo posted an RFC series for extending process_madvise() behavior using its flags option.
[RFC v2 PATCH 0/9] Intel RAR TLB invalidation (Rik van Riel) https://lore.kernel.org/20250520010350.1740223-1-riel@surriel.com
Rik posted the second version of his RFC patch series for Intel&amp;rsquo;s h/w-based tlb invalidation optimization.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc7/</link>
      <pubDate>Mon, 19 May 2025 06:45:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc7/</guid>
      <description>Linux 6.15-rc7 (Linus Torvalds) https://lore.kernel.org/CAHk-=whtwpdL9e_5j1oq8C=1EZud_cXerZeHqe5L8y7wG+34EA@mail.gmail.com
Linus Torvalds released the seventh candidate version for Linux 6.15. Linus mentions last week was having some exciting events including CPU bug mitigations, Xe fixes and sched_ext fixes. Which is not what Linus wanted. But still he beleives those were reasonable and solid in whole. Still he aims to release 6.15 next week, unless something strange happens.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc6/</link>
      <pubDate>Wed, 07 May 2025 07:33:52 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc6/</guid>
      <description>[PATCH v3] mm: Add CONFIG_PAGE_BLOCK_ORDER to select page block order (Juan Yescas) https://lore.kernel.org/20250506002319.513795-1-jyescas@google.com
As a followup of the LSFMMBPF discussion, Juan posted a patch for the CMA alignment requirements issue on large page size configuration.
[RFC PATCH 0/9] Intel RAR TLB invalidation (Rik van Riel) https://lore.kernel.org/20250506003811.92405-1-riel@surriel.com
Rick posted an RFC patch series for reducing IPI for TLB invaludations on Intel machines using its RAR feature.
[PATCH 0/1] prctl: allow overriding system THP policy to always (Usama Arif) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc5/</link>
      <pubDate>Mon, 05 May 2025 06:59:50 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc5/</guid>
      <description>Linux 6.15-rc5 (Linus Torvalds) https://lore.kernel.org/CAHk-=wgjwfsyPf3SfjrPhAMJqN6brBpajQ3F9qp_TatwOs56YQ@mail.gmail.com
Linus released the fifth candidate for Linux 6.15. It is larger than the usual, but still in normal range. The big size was mainly due to selftest changes.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc4/</link>
      <pubDate>Tue, 22 Apr 2025 07:34:36 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc4/</guid>
      <description>[PATCH V4 0/4] add max arg to swappiness in memory.reclaim and lru_gen (Zhongkun He) https://lore.kernel.org/cover.1745225696.git.hezhongkun.hzk@bytedance.com
Zhongkun posted a patch series for fine tuning memory.reclaim and lru_gen for reclaiminig only anonymous pages.
[PATCH] MAINTAINERS: add core mm section (Lorenzo Stoakes) https://lore.kernel.org/20250423123042.59082-1-lorenzo.stoakes@oracle.com
Lorenzo posted a patch for splitting MM section on MAINTAINER further, for the core part.
[PATCH v3] tools/mm: Add script to display page state for a given PID and VADDR (Ye Liu) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc3/</link>
      <pubDate>Tue, 15 Apr 2025 07:02:32 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc3/</guid>
      <description>[PATCH] tools/drgn: Add script to display page state for a given PID and VADDR (Ye Liu) https://lore.kernel.org/20250415075024.248232-1-ye.liu@linux.dev
Ye Liu introduces a drgn script for showing page information for specific virtual address range.
[RFC PATCH v4 0/6] Promotion of Unmapped Page Cache Folios. (Gregory Price) https://lore.kernel.org/20250411221111.493193-1-gourry@gourry.net
Gregory continues his unmapped page cache folios promotion work and sent the fourth version.
[PATCH v2 0/2] separate out mmap_lock/VMA locking and update MAINTAINERS (Lorenzo Stoakes) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc2/</link>
      <pubDate>Wed, 09 Apr 2025 07:08:04 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc2/</guid>
      <description>[PATCH v2 0/3] Implement numa node notifier (Oscar Salvador) https://lore.kernel.org/20250408084153.255762-1-osalvador@suse.de
Oscar found 5/10 memory notifier users are actually interested in only NUMA level change, and proposes numa node notifier.
[RFC PATCH v2] Introduce Hierarchical Per-CPU Counters (Mathiew Desnoyers) https://lore.kernel.org/20250408160508.991738-1-mathieu.desnoyers@efficios.com
Mathiew proposes a hierarchical per-cpu counter that can provide better scalability on multi CPU machines.
[RFC PATCH 00/14] Virtual Swap Space (Nhat Pham) https://lore.kernel.org/20250407234223.1059191-1-nphamcs@gmail.com
Nhat proposes virtual swap space, which was also presented at LSFMMBPF a few weeks ago.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2025</title>
      <link>https://sjp38.github.io/posts/en/ossummit_na_2025_talk/</link>
      <pubDate>Mon, 07 Apr 2025 21:12:06 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/ossummit_na_2025_talk/</guid>
      <description>DAMON talk for OSSummit North America 2025 has been accepted and scheduled. The title of the talk is &amp;ldquo;Self-Driving DAMON/S: Controlled and Automated Access-aware Efficient Systems&amp;rdquo;. It will present DAMON&amp;rsquo;s two auto-tuning features for access monitoring and access-aware system operations.</description>
    </item>
    <item>
      <title>LKML News v6.15-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc1/</link>
      <pubDate>Mon, 31 Mar 2025 07:12:14 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.15-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.15-rc1 (Andrew Morton) https://lore.kernel.org/20250330165732.f4c1493615375623f67e38eb@linux-foundation.org
Andrew Morton sent MM pull requests for 6.15-rc1 to Linus Torvalds.
mm.git grew a branch (Andrew Morton) https://lore.kernel.org/20250401030418.6b9e3b048eacc05d1cdeeffd@linux-foundation.org
Andrew announces a new branch on mm.git, called mm-new. He explains what it will be, and asks Stephen to continue adding mm-unstable to next while not adding mm-new.
[PATCH 0/2] Implement numa node notifier (Oscar Salvador) https://lore.kernel.org/20250401092716.537512-1-osalvador@suse.de
Oscar posted a patchset for extending memory notifier for only NUMA state changes.</description>
    </item>
    <item>
      <title>I will have two sessions for DAMON at LSFMM&#43;BPF 2025</title>
      <link>https://sjp38.github.io/posts/en/lsfmmbpf_2025_talks/</link>
      <pubDate>Sat, 22 Mar 2025 13:58:08 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lsfmmbpf_2025_talks/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON, and any requirements to DAMON for more access-aware memory management kernel subsystem of future in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2025. The title of the talks are &amp;ldquo;DAMON Updates and Plans: Monitoring Parameters Auot-tuning and Memory Tiering&amp;rdquo; and &amp;ldquo;DAMON Requirements for Access-aware MM of Future&amp;rdquo;, respectively.
Detailed schedules can be found from the below Google doc spreadsheet.</description>
    </item>
    <item>
      <title>LKML News v6.14</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14/</link>
      <pubDate>Thu, 20 Mar 2025 07:09:29 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14/</guid>
      <description>[RFC v1 0/3] Live Update Orchestrator (Pasha Tatashin) https://lore.kernel.org/20250320024011.2995837-1-pasha.tatashin@soleen.com
Pasha posted an RFC patch series for Linux kernel live update that uses kexec hand over as a way to preserve memory state from old kernel.
[GIT PULL] slab updates for 6.15 (Vlastimil Babka) https://lore.kernel.org/2f7985a8-0460-42de-9af0-4f966b937695@suse.cz
Vlastimil posted Slab pull request for Linux v6.15 to Linus.
[PATCH v5 00/16] kexec: introduce Kexec HandOver (KHO) (Changyuan Lyu) https://lore.kernel.org/20250320015551.2157511-1-changyuanl@google.com
Changyuan posted the fifth version of kexec handover patch series.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc7/</link>
      <pubDate>Tue, 11 Mar 2025 07:24:37 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc7/</guid>
      <description>[PATCH v2 00/11] cgroup v1 deprecation messages (Michal Kountny) https://lore.kernel.org/20250311123640.530377-1-mkoutny@suse.com
Michal categorizes and wordsmith memcg deprecation warning messages.
[RFC 0/5] track memory used by balloon drivers (Nico Pache) https://lore.kernel.org/20250312000700.184573-1-npache@redhat.com
Nic posted an RFC patch series that adding a counter to track how many pages are reclaimed by the balloon driver.
[PATCH 0/5] mm: reliable huge page allocator (Johannes Weiner) https://lore.kernel.org/20250313210647.1314586-1-hannes@cmpxchg.org
Johannes posted a patch series for making huge page allocatioin more reliable by making allocator, reclaim, and compaction code try harder to avoid fragmentation.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc6/</link>
      <pubDate>Tue, 04 Mar 2025 06:54:33 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc6/</guid>
      <description>[PATCH v15 0/9] Rust support for mm_struct, vm_area_struct, and mmap (Alice Ryhl) https://lore.kernel.org/20250304-vma-v15-0-5c641b31980a@google.com
Alice Ryhl posted the fiftennth version of Rust binding for major mm API.
[RFC PATCH 0/4] Kernel daemon for detecting and promoting hot pages (Bharata B Rao) https://lore.kernel.org/20250306054532.221138-1-bharata@amd.com
Bharata posted an RFC patch set for igniting discussion about one source that provides page access information with an example. The patch uses AMD IBS driver as the source.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc5/</link>
      <pubDate>Tue, 25 Feb 2025 06:40:30 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc5/</guid>
      <description>[RFC PATCH 0/3] sched/numa: Introduce per cgroup numa balance control (Chen Yu) https://lore.kernel.org/cover.1740483690.git.yu.c.chen@intel.com
Chen posted an RFC for cgroup based numa balancing control, following recent approach from Kaiyang Zhao.
[LSF/MM/BPF TOPIC] SLUB allocator, mainly the sheaves caching layer (Vlastimil Babka) https://lore.kernel.org/14422cf1-4a63-4115-87cb-92685e7dd91b@suse.cz
Vlastimil proposes an LSFMMBPF topic for his SLUB sheaves patch series.
[RFC PATCH 0/2] SKSM: Synchronous Kernel Samepage Merging (Mathieu Desnoyers) https://lore.kernel.org/20250228023043.83726-1-mathieu.desnoyers@efficios.com
Matthieu proposes a variant of KSM that works in synchronous manner, unlike KSM.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc4/</link>
      <pubDate>Wed, 19 Feb 2025 07:11:05 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc4/</guid>
      <description>[Hypervisor Live Update] Notes from February 10, 2025 (David Rientjes) https://lore.kernel.org/dc1ee0c3-d3e7-4284-6329-346b8cea68b5@google.com
David shares hypervisor live update meeting summary.
[GIT PULL] hotfixes for 6.14-rc4 (Andrew Morton) https://lore.kernel.org/20250219175311.7a5b47084de5ad0258526be2@linux-foundation.org
Andrew posted mm hotfixes for 6.14-rc4 to Linus Torvalds.
Rust kernel policy (Miguel Ojeda) https://lore.kernel.org/CANiq72m-R0tOakf=j7BZ78jDHdy=9-fvZbAT8j91Je2Bxy0sFg@mail.gmail.com
Miguel posted a mail about his blog post for the policy around Rust for Linux kernel. Long discussion is following.
[PATCH 0/2] Add a command line option that enables control of how many threads per NUMA node should be used to allocate huge pages.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc3/</link>
      <pubDate>Tue, 11 Feb 2025 07:35:39 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc3/</guid>
      <description>[PATCH v10 00/12] AMD broadcast TLB invalidation (Rik van Riel) https://lore.kernel.org/20250211210823.242681-1-riel@surriel.com
Rik posted the tenth versin of the TLB invalication broadcasting patch series for AMD.
[PATCH v14 0/8] Rust support for mm_struct, vm_area_struct, and mmap (Alice Ryhl) https://lore.kernel.org/20250213-vma-v14-0-b29c47ab21f5@google.com
Alice posted 14th version of the patch series for adding Rust support to mm_struct, vm_rea_struct and mmap.
[LSF/MM/BPF TOPIC] Rust in FS, Storage, MM (Andreas Mindborg) https://lore.kernel.org/87ldu9uiyo.fsf@kernel.org
Andreas proposes an LSFMMBPF topic for discussing status and experience of Rust adoption for the subsystems.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc2/</link>
      <pubDate>Tue, 04 Feb 2025 06:44:30 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc2/</guid>
      <description>[LSF/MM/BPF TOPIC] Integrate Swap Cache, Swap Maps with Swap Allocator (Kairui Song) https://lore.kernel.org/CAMgjq7BvQ0ZXvyLGp2YP96+i+6COCBBJCYmjXHGBnfisCAb8VA@mail.gmail.com
Kairui proposes yet another LSFMMBPF topic for redesigning and integrating multiple swap data into the swap allocator.
[PATCH v4 00/14] kexec: introduce Kexec HandOver (KHO) (Mike Rapoport) https://lore.kernel.org/20250206132754.2596694-1-rppt@kernel.org
Mike posted the fourth version of the kexec handover patch series.
Linux 6.14-rc2 (Linus Torvalds) https://lore.kernel.org/CAHk-=wiGR6aB2oE7VsDkpnSbHaUnxVqtMvcEB0JzdvS-YmT_Lg@mail.gmail.com
Linus Torvalds released the second candidate of Linux 6.14. It is a small rc2 following the small rc1 pattern.</description>
    </item>
    <item>
      <title>LKML News v6.14-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc1/</link>
      <pubDate>Wed, 22 Jan 2025 07:00:31 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.14-rc1/</guid>
      <description>[PATCH] mm: Optimize TLB flushes during page reclaim (Vinay Banakar) https://lore.kernel.org/CALf+9Yc3WjbG89uRWiDC_qYshJ5z_9WCrbEJe42Vbv+gJjs26g@mail.gmail.com
Vinay optimizes shrink_folio_list() to do TLB flush in batch instead of per page being reclaimed.
[LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning (Raghavendra K T) https://lore.kernel.org/20250123105721.424117-1-raghavendra.kt@amd.com
Raghavendra proposes an LSFMMBPF topic for discussions around multiple ways to find hot pages, and possible future composition of those.
[LSF/MM/BPF TOPIC] Enhancements to Page Migration with Multi-threading and Batch Offloading to DMA (Shivank Garg) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.13</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13/</link>
      <pubDate>Tue, 14 Jan 2025 07:09:05 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13/</guid>
      <description>[LSF/MM/BPF TOPIC] Predictive readahead of dentries (Shyam Prasad N) https://lore.kernel.org/CANT5p=rxLH-D9qSoOWgjYeD87uahmZJMwXp8uNKW66mbv8hmDg@mail.gmail.com
Shyam proposes an LSFMM topic for dentries readahead, like that of filesystems.
[PATCH v9 00/17] reimplement per-vma lock as a refcount (Suren Baghdasaryan) https://lore.kernel.org/20250111042604.3230628-1-surenb@google.com
Suren continues revisioning of his per-vma lock optimization, and posted the ninth version of it, with changed title.
[Feedback Needed] Hypervisor live update biweekly meeting time (David Rientjes) https://lore.kernel.org/2908e4ab-abc4-ddd0-b191-fe820856cfb4@google.com
David announces start of a bi-weekly syncup for hypervisor live update, which was a topic of last year&amp;rsquo;s MM alignment session, and asking feedback about the time proposal.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc7/</link>
      <pubDate>Tue, 07 Jan 2025 07:27:02 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc7/</guid>
      <description>[PATCH] tools/mm: Introduce a tool to handle entries in allocinfo (Hao Ge) https://lore.kernel.org/20250106112103.25401-1-hao.ge@linux.dev
Hao posted a patch adding a tool for handling of the kernel&amp;rsquo;s memory allocation profilier output.
[Invitation] Linux MM Alignment Session on Cgroup-based THP Control on Wednesday (David Rientjes) https://lore.kernel.org/5535fc79-c566-93a0-6134-bfdf1cf5171a@google.com
David invites people for next Linux MM Alignment session. The topic will be cgroup-based THP control, led by Gutierez Asier, who proposed the idea.
Swap Min Odrer (Daniel Gomez) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc6/</link>
      <pubDate>Thu, 02 Jan 2025 07:00:45 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc6/</guid>
      <description>[PATCH v3 00/12] AMD broadcast TLB invalidation (Rik van Riel) https://lore.kernel.org/20241230175550.4046587-1-riel@surriel.com
Rik posted the third version of the patch series for AMD TLB invalidastion broadcasting support.
[PATCH mm-unstable v4 0/7] mm/mglru: performance optimizations (Yu Zhao) https://lore.kernel.org/20241231043538.4075764-1-yuzhao@google.com
Yu posted the fourth version of MGLRU performance optimization, which fixes two more regressions.
[RFC PATCH 0/9 v2] cgroup: separate per-subsystem rstat trees (JP Kobryn) https://lore.kernel.org/20250103015020.78547-1-inwardvessel@gmail.com
JP posted second version of the RFC patch sereis that reduce per-subsystem stat reading overhead by separating the data structure per subsystem.</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2024</title>
      <link>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2024/</link>
      <pubDate>Tue, 31 Dec 2024 10:16:21 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2024/</guid>
      <description>As today is the last day of 2024, I checked my open source commits statistics using my simple and buggy scripts. Similar statistics for 2023 is available at another post.
Note that the script may have bugs, and numbers don&amp;rsquo;t tell everything.
In short, I made 7th and 2nd biggest changes to Linux kernel memory management subsystem among the 340 people, in terms of lines of changes (2,347) and commits (102).</description>
    </item>
    <item>
      <title>LKML News v6.13-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc5/</link>
      <pubDate>Mon, 30 Dec 2024 16:28:09 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc5/</guid>
      <description>Linus 6.13-rc5 (Linus Torvalds) https://lore.kernel.org/&amp;lt;CAHk-=wh=sk+uzFj5edCwdSmUuhfe40mH+G04XQXZtzbx_XBnvQ@mail.gmail.com
After yet another calm week of holidays, Linus released the fifth candidate for Linux 6.13. It it again a tiny one, having less than a hundred non-merge commits.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc4/</link>
      <pubDate>Tue, 17 Dec 2024 06:49:17 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc4/</guid>
      <description>[RFC PATCH 00/12] khugepaged: Asynchronous mTHP collapse (Dev Jain) https://lore.kernel.org/20241216165105.56185-1-dev.jain@arm.com
Dev Jain posted an RFC patch series that makes khugepaged collapses multi-sized THP.
[PATCH] mm/page_idle: Constify &amp;lsquo;struct bin_attribute&amp;rsquo; (Thomas Weißschuh) https://lore.kernel.org/20241216-sysfs-const-bin_attr-page_idle-v1-1-cc01ecc55196@weissschuh.net
Thomas marks struct bin_attribute objects that used in page_idle to be marked as const, since it is now supported.
Slow-tier Page Promotion discussion recap and open questions (David Rientjes) https://lore.kernel.org/6d582bb6-3ba5-1768-92f2-6025340a3cd4@google.com
David shares his summary of the discussions around asynchronous page promotion approach from AMD that was held on last MM alignment session.</description>
    </item>
    <item>
      <title>I will have a talk at the FOSDEM 2025</title>
      <link>https://sjp38.github.io/posts/en/fosdem2025_talk/</link>
      <pubDate>Fri, 13 Dec 2024 09:08:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/fosdem2025_talk/</guid>
      <description>I will present DAMON in FOSDEM&#39;25. The title of the talk is &amp;ldquo;DAMON: Kernel Subsystem for Data Access Monitoring and Access-aware System Operations&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc3/</link>
      <pubDate>Mon, 09 Dec 2024 11:18:02 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc3/</guid>
      <description>[Invitation] Linux MM Alignment Session on Slow-tier Page Promotion on Wednesday (David Rientjes) https://lore.kernel.org/52a4867a-f330-4d3f-2da8-0919bc49c6ea@google.com
David Rientjes invites MM people to the next alignment session. The topic is slow-tier page promotion, led by RaghavendraKT from AMD. They have RFC, too: https://lore.kernel.org/linux-mm/20241201153818.2633616-1-raghavendra.kt@amd.com/T/#t
[PATCH mm-unstable 00/17] mm: Introduce arch_mmap_hint() (Kalesh Singh) https://lore.kernel.org/20241210024119.2488608-1-kaleshsingh@google.com
Kalesh posted a patch that introducing per-architecture mmap_hint() implementation and fixing the mmap hint being ignored due to THP in some cases.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc2/</link>
      <pubDate>Mon, 09 Dec 2024 07:18:30 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc2/</guid>
      <description>[PATCH] MAINTAINERS: group all VMA-related files into the VMA section (Lorenzo Stoakes) https://lore.kernel.org/20241206191600.45119-1-lorenzo.stoakes@oracle.com
Lorenzo posted a patch adding more source files for VMA section of MAINTAINERS file, to avoid people sending patches without Cc-ing VMA maintainers.
Linux 6.13-rc2 (Linus Torvalds) https://lore.kernel.org/CAHk-=wgDe9JfGynY9KQ1exkL0DM-cyLYdeYdOxbCXNHm=qAgSQ@mail.gmail.com
Linus released the second candidate of Linux v6.13. Some autoamted cleanup changes made the diff bit noisy, and there are some real fixes for drivers, networking and bpf.</description>
    </item>
    <item>
      <title>LKML News v6.13-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc1/</link>
      <pubDate>Tue, 19 Nov 2024 06:35:06 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.13-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.13-rc1 (Andrew Morton) https://lore.kernel.org/20241118193001.6aefcadd7426feafedf824e1@linux-foundation.org
Andrew posted memory management subsystem pull request for v6.13-rc1 to Linus Torvalds.
[PATCHSET v5 0/17] Uncached buffered IO (Jens Axboe) https://lore.kernel.org/20241114152743.2381672-2-axboe@kernel.dk
Jens is continuing his work on support of buffered IO that isn&amp;rsquo;t page cache persistent. The motivation is the fact that device speed is getting faster while reclaim is not.
[RFCv1 0/6] Page Detective (Pasha Tatashin) https://lore.kernel.org/20241116175922.3265872-1-pasha.tatashin@soleen.com
Pasha posted an RFC patch series for better debugging of page status.</description>
    </item>
    <item>
      <title>LKML News v6.12</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12/</link>
      <pubDate>Tue, 12 Nov 2024 06:38:12 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12/</guid>
      <description>[PATCH 0/4] move per-vma lock into vm_area_struct (Suren Baghdasaryan) https://lore.kernel.org/20241111205506.3404479-1-surenb@google.com
Suren posted a patch moving vm_lock back into vm_area_struct after confirming the performance regression found before happens only on limited cases (old Broadwell microarchitecture).
[PATCH] lib/alloc_tag: Remove the sysctl configuration to prevent users from disabling it at runtime (Hao Ge) https://lore.kernel.org/20241108075004.131911-1-hao.ge@linux.dev
Hao tries to remove runtime memory allocation profiling on/off knob, since he believes it is only making users confused.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc7/</link>
      <pubDate>Tue, 05 Nov 2024 06:40:52 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc7/</guid>
      <description>[PATCH 0/3] Introduce acctmem (Matthew Wilcox) https://lore.kernel.org/20241104210602.374975-1-willy@infradead.org
Willy tries to split out page-&amp;gt;memcg_data reference counting using a new abstract, acctmem.
[linus:master] [mm, mmap] d4148aeab4: will-it-scale.per_process_ops 3888.9% improvement (kernel test robot) https://lore.kernel.org/202411072132.a8d2cf0f-oliver.sang@intel.com
Kernel test robot reports huge improvement on will-it-scale benchmark, coming from commit d4148aeab412 (&amp;ldquo;mm, mmap: limit THP alignment of anonymous mappings to PMD-aligned sizes&amp;rdquo;).
Linux 6.12-rc7 (Linus Torvalds) https://lore.kernel.org/CAHk-=wiWK-GCmFGNqknDZzWMZM-u58tmP=jZ9ooTo9b8NURvgQ@mail.gmail.com
Linus released the seventh candidate for Linux v6.12. Linus says no big surprises found, so he anticipates final 6.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc6/</link>
      <pubDate>Mon, 28 Oct 2024 22:03:33 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc6/</guid>
      <description>[GIT PULL] hotfixes for 6.12-rc6 (Andrew Morton) https://lore.kernel.org/20241028203743.3fe4d95463aaafe23a239b51@linux-foundation.org
Andrew posted mm hotfixes for v6.12-rc6.
[PATCH v2 0/4] mm: add more kernel parameters to control mTHP (Maíra Canal) https://lore.kernel.org/20241029002324.1062723-1-mcanal@igalia.com
Maira posted a patch series for adding kernel parameters to control mTHP for shmem.
[Invitation] Linux MM Alignment Session on Memory Error Detector on Wednesday (David Rientjes) https://lore.kernel.org/9242f7cc-6b9d-b807-9079-db0ca81f3c6d@google.com
David invites kernel developers to another MM alignment session. The topic is how to make user-space control memory failure recovery.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc5/</link>
      <pubDate>Tue, 22 Oct 2024 07:40:31 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc5/</guid>
      <description>[PATCH v1 0/6] mm/arm64: re-enable HVO (Yu Zhao) https://lore.kernel.org/20241021042218.746659-1-yuzhao@google.com
There were a few attempts to enable hugetlb vmemmap optimization (HVO) on arm64. Yu posted another approach.
linus-next: improving functional testing for to-be-merged pull requests (Sasha Levin) https://lore.kernel.org/ZxZ8MStt4e8JXeJb@sashalap
Sasha proposes having a new test-purpose tree for Linus&amp;rsquo; concern about testing.
Re: [GIT PULL] bcachefs fixes for 6.12-rc5 (Sasha Levin) https://lore.kernel.org/Zxf3vp82MfPTWNLx@sashalap
Following the feedback to linus-next proposal, Sasha implemented a bot for simple pre-merge check of pull requests, and showcase it on a random pull request.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc4/</link>
      <pubDate>Tue, 15 Oct 2024 06:37:20 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc4/</guid>
      <description>[Invitation] bi-weekly guest_memfd upstream call on 2024-10-17 (David Hildenbrand) https://lore.kernel.org/df619e65-e65e-4856-b4ca-9938e8e08f18@redhat.com
David starts a bi-weekly call series for discussing guest_memfd. The first instance will be held on 2024-10-17 9am PT.
[Invitation] Linux MM Alignment Session on IOMMU(fd) persistence and Kexec Hand Over (KHO) on Wednesday (David Rientjes) https://lore.kernel.org/c85a45fb-7b21-4f9f-568a-e86debbd001a@google.com
David invites people to next MM alignment session. The topic will be Amazon&amp;rsquo;s kexec hand-over for making iommu persistent during live update of kernel.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc3/</link>
      <pubDate>Tue, 08 Oct 2024 07:54:17 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc3/</guid>
      <description>[RFC PATCH v3 0/4] sched+mm: Track lazy active mm existence with hazard pointers (Mathew Desnoyers) https://lore.kernel.org/20241008135034.1982519-1-mathieu.desnoyers@efficios.com
Mathiew Desnoyers posted the third version of his hazard pointer patch series for optimizing active_mm tracking following comments from Peter Zijlstra and Paul E. McKenney on the previous versions of the patch series.
[RFC PATCH 0/1] Buddy allocator like folio split (Zi Yan) https://lore.kernel.org/20241008223748.555845-1-ziy@nvidia.com
Zi Yan posted an RFC patch for making folio split behaves like the Buddy allocator, to reduce total number of folios after splits.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc2/</link>
      <pubDate>Tue, 01 Oct 2024 06:54:08 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc2/</guid>
      <description>[PATCH v2 1/2] virt: pvmemcontrol: control guest physical memory properties (Yuanchu Xie) https://lore.kernel.org/20241001011328.2806686-1-yuanchu@google.com
Yuanchu posted the second version of a patch series for pvmemcontrol, which allows VM guests control their physcial memory properties and enable security features optimizations.
[Invitation] Linux MM Alignment Session on shared PTEs across processes on Wednesday (David Rientjes) https://lore.kernel.org/eb2ce2c1-9fbd-215b-9973-7ec515c14015@google.com
Dadiv shares next Linux MM alignment session will be held this Wednesday. The topic will be &amp;ldquo;Add support for shared PTEs across processes&amp;rdquo;, aka mshare().</description>
    </item>
    <item>
      <title>LKML News v6.11</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11/</link>
      <pubDate>Wed, 11 Sep 2024 09:41:15 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11/</guid>
      <description>[PATCH hotfix 6.11] minmax: reduce egregious min/max macro expansion (Lorenzo Stoakes) https://lore.kernel.org/20240911153457.1005227-1-lorenzo.stoakes@oracle.com
Lorenzo sent a patch for resolving min()/max() expansions causing kernel build time issue by fixing a few known-bad cases of nested macro usages.
[RFC PATCH 0/7] support for mm-local memory allocations and use it (Fares Mehanna) https://lore.kernel.org/20240911143421.85612-1-faresx@amazon.de
Fares posted an RFC patch series for mm-local memory allocations for pushing those out of rach for possible speculation based cross-process attacks.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc7/</link>
      <pubDate>Wed, 04 Sep 2024 06:10:40 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc7/</guid>
      <description>[PATCH 00/15] timers: Cleanup delay/sleep related mess (Anna-Maria Behnsen) https://lore.kernel.org/20240904-devel-anna-maria-b4-timers-flseep-v1-0-e98760256370@linutronix.de
A discussion started from a question about acpi_os_sleep() concluded the documentation is outdated, and same for some code for the same reason. This patchset tries to update the documents and code.
[PATCH 0/2 v2] remove PF_MEMALLOC_NORECLAIM (Michal Hocko) https://lore.kernel.org/20240902095203.1559361-1-mhocko@kernel.org
Michal sent the second revision of PF_MEMALLOC_NORECLAIM removal patchset with Reviewed-by: tags in a more formal version.
[GIT PULL] hotfixes for 6.</description>
    </item>
    <item>
      <title>LKML News v6.12-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc1/</link>
      <pubDate>Wed, 04 Sep 2024 06:10:40 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.12-rc1/</guid>
      <description>[GIT PULL] slab updates for 6.11 (Vlastimil Babka) https://lore.kernel.org/8d6c5d10-5750-4472-858c-eadc105453be@suse.cz
Vlastimil sent the slab pull request for Linux 6.12-rc1. Apparently the title is a typo.
[RFC PATCH 0/4] Add hazard pointers to kernel (Boqun Feng) https://lore.kernel.org/20240917143402.930114-1-boqun.feng@gmail.com
Boqun posted a patch series for introducing hazard pointers for kernel space, which is &amp;ldquo;a scalable reference counting mechanism with RCU-like API&amp;rdquo;.
[GIT PULL] hotfixes for 6.12-rc1 (Andrew Morton) https://lore.kernel.org/20240919003557.1777673c0f759f9e4ebaa328@linux-foundation.org
Andrew sent a hotfixes pull request for 6.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc6/</link>
      <pubDate>Mon, 26 Aug 2024 18:49:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc6/</guid>
      <description>[RFC PATCH -next 0/3] fs: Introduce the scope-based resource management for folio_lock/unlock (Li Zetao) https://lore.kernel.org/20240826071036.2445717-1-lizetao1@huawei.com
Li proposes scope-based resource management for folio locking.
[PATCH 0/2] get rid of PF_MEMALLOC_NORECLAIM (Michal Hocko) https://lore.kernel.org/20240826085347.1152675-1-mhocko@kernel.org
Michal argues PF_MEMALLOC_NORECLAIM has merged even though MM people pushed it back, and attempts to get rid of it by updating its users to use explicit GFP_NOWAIT allocation context.
[PATCH] bcachefs: Switch to memalloc_flags_do() for vmalloc allocations (Kent Overstreet) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc5/</link>
      <pubDate>Wed, 21 Aug 2024 02:47:12 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc5/</guid>
      <description>[PATCH v4 0/6] mm: split underused THPs (Usama Arif) https://lore.kernel.org/20240819023145.2415299-1-usamaarif642@gmail.com
Yusama posted the fourth version of the patch series for splitting underutilized THPs for keeping THP performance gain while reducing the huge page internal fragmentation-cuased memory usage bloat.
[PATCH 0/5] page allocation tag compression (Suren Baghdasaryan) https://lore.kernel.org/20240819151512.2363698-1-surenb@google.com
Suren sent a patch series for improving page allocation tagging.
[PATCH 0/4] Increase the number of bits available in page_type (Matthew Wilcox) https://lore.kernel.org/20240821173914.2270383-1-willy@infradead.org</description>
    </item>
    <item>
      <title>LKML News v6.11-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc4/</link>
      <pubDate>Tue, 13 Aug 2024 06:39:19 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc4/</guid>
      <description>[PATCH v3 0/6] mm: split underutilized THPs (Usama Arif) https://lore.kernel.org/20240813120328.1275952-1-usamaarif642@gmail.com
Usama posted the third version of THP split patch series.
[PATCH] Reenable NUMA policy support in the slab allocator (Christoph Lameter) https://lore.kernel.org/20240812-numa_policy-v1-1-1732602b976c@gentwo.org
Christoph sent a patch that reverts previous commit that disabled the numa policy support in the slab allocator.
[RFC PATCH v1 0/4] mm: ZSWAP swap-out of mTHP folios (Kanchan P Sridhar) https://lore.kernel.org/20240814062830.26833-1-kanchana.p.sridhar@intel.com
Kanchan sent an RFC patch series for enabling zswap_store() storing mTHP folios.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc3/</link>
      <pubDate>Tue, 06 Aug 2024 06:36:47 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc3/</guid>
      <description>[PATCH 00/10] mm: remove vma_merge() (Lorenzo Stoakes) https://lore.kernel.org/cover.1722849859.git.lorenzo.stoakes@oracle.com
Lorenzo posted a patchset for removing the infamous vma_merge(), which caused too much complexity, and the prior attempt remove it was failed.
[RFC PATCH 0/4] mm/arm64: re-enable HVO (Yu Zhao) https://lore.kernel.org/20240806022114.3320543-1-yuzhao@google.com
Yu sent an RFC patchset for re-enabling HugeTLB Vmemmap Optimization on arm64.
[PATCH 00/10] Introduce guestmemfs: persistent in-memory filesystem (James Gowans) https://lore.kernel.org/20240805093245.889357-1-jgowans@amazon.com
James Gowans posted a patch series for a new in-memory filesystem that designed for live update.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc2/</link>
      <pubDate>Tue, 30 Jul 2024 06:48:17 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc2/</guid>
      <description>[RFC 0/2] mm: introduce THP deferred setting (Nico Pache) https://lore.kernel.org/20240729222727.64319-1-npache@redhat.com
Nico found increased memory footprint from THP after their customers switching from RHEL7 to RHEL8. To mitigate the issue, Nico is proposing adding a new THP configuration called deferred. It is same to madvise but allows khugepaged to do the work.
[PATCH v2 0/4] mm: clarify nofail memory allocation (Barry Song) https://lore.kernel.org/20240731000155.109583-1-21cnbao@gmail.com
Barry posted the second version of their patchset for __GFP_NOFAIL clarification.</description>
    </item>
    <item>
      <title>LKML News v6.11-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc1/</link>
      <pubDate>Tue, 16 Jul 2024 07:04:14 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.11-rc1/</guid>
      <description>[PATCH 00/17] mm: introduce numa_memblks (Mike Rapoport) https://lore.kernel.org/20240716111346.3676969-1-rppt@kernel.org
Mike Rapoport posted thi spatchset for moving numa_memblks from x86 to the generic code, as a followup of the discussion for CXL memory windows handling on arm64.
[RFC PATCHv2] mm: introduce reclaim throttle in MGLRU (Zhaoyang Huang) https://lore.kernel.org/20240716094348.2451312-1-zhaoyang.huang@unisoc.com
Zhaoyang sent a patch that makes direct reclaim of MGLRU be throttled by judging the number of isolated and inactive folios, to prevent issues similar to classic LRU.</description>
    </item>
    <item>
      <title>Creating DAMON logo using DAMON</title>
      <link>https://sjp38.github.io/posts/en/damon_heatmap_logo/</link>
      <pubDate>Sat, 13 Jul 2024 13:56:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_heatmap_logo/</guid>
      <description>I just made a DAMON logo using DAMON, like below.
$ git clone https://github.com/sjp38/masim &amp;amp;&amp;amp; cd masim $ cat damon_pixel_2 11111111 11 11 111111 11111111 11 11 11111111 11111111 1111 11111111 11111111 11 11 11111111 11111111 1111 11111111 $ ./pixels_to_access_config.py ./damon_pixel_2 $((100*1024*1024)) 300 damon.cfg $ sudo damo record &amp;#34;./masim ./configs/stairs.cfg&amp;#34; $ sudo damo report heatmap --output damon.png The output is below:
The cropped one:</description>
    </item>
    <item>
      <title>LKML News v6.10</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10/</link>
      <pubDate>Tue, 09 Jul 2024 06:36:14 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10/</guid>
      <description>[RFC][PATCH 0/4] slab: Allow for type introspection during allocation (Kees Cook) https://lore.kernel.org/20240708190924.work.846-kees@kernel.org
Kees posted this RFC patch, which allows kmalloc() be able to know the type of the object that it is requested to allocate memory for. It is done by letting kmalloc() optionally receives the pointer instead of the size.
[Invitation] Linux MM Alignment Session on guest_memfd() mapping, hugepages, and page pinning on Wednesday https://lore.kernel.org/197a2f19-c71c-fbde-a62a-213dede1f4fd@google.com
David invites MM community to another instance of the MM alignment.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc7/</link>
      <pubDate>Fri, 05 Jul 2024 08:20:44 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc7/</guid>
      <description>[RFC PATCH 0/4] Introduce PMC(PER-MEMCG-CACHE) (Huan Yang) https://lore.kernel.org/20240702084423.1717904-1-link@vivo.com
Huan posted an RFC for per-memcg-cache, which is for utilizing per-memcg cache of certain rules. The goal is allowing memory that released by an application be allocated with high priority within the application, to improve locality and performance while avoiding unnecessary memory reclamation.
[PATCH] mm: remove CONFIG_MEMCG_KMEM (Johannes Weiner) https://lore.kernel.org/20240701153148.452230-1-hannes@cmpxchg.org
Since CONFIG_MEMCG_KMEM was default-enabled and equivalent to CONFIG_MEMCG for almost a decade, Johannes tries to remove the config option.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc6/</link>
      <pubDate>Tue, 25 Jun 2024 06:39:34 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc6/</guid>
      <description>[PATCH] memcg: Add a new sysctl parameter for automatically setting memory.high (Waiman Long) https://lore.kernel.org/20240623204514.1032662-1-longman@redhat.com
While memcg v1 has only single file for memory limit setting, namely memory.limit_in_bytes, memcg v2 has two files, memory.max and memory.high for the purpose. Users migrating from memcg v1 to memcg v2 usually sets only memory.max, and hence get problems sometimes. This patch add a new knob, memory_high_autoset_ratio, which allows setting memory.high as a ratio of memory.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc5/</link>
      <pubDate>Tue, 18 Jun 2024 06:09:34 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc5/</guid>
      <description>[GIT PULL] hotfixes for 6.10-rc5 (Andrew Morton) https://lore.kernel.org/20240617114712.45d4743f8bacb832dea4b5a9@linux-foundation.org
Andrew posted hotfixes pull request to Linus Torvalds.
[PATCH] Add accumulated call counter for memory allocation profiling (David Wang) https://lore.kernel.org/20240617153250.9079-1-00107082@163.com
David sent a patch for adding accumulated call counter for memory allocation profiling. He argues this could help performance behaviors analysis.
[RFC PATCH v1 0/5] Alternative mTHP swap allocator improvements (Ryan Roberts) https://lore.kernel.org/20240618232648.4090299-1-ryan.roberts@arm.com
Ryan posted this proof-of-concept patchset for achieving 0% fallback at mTHP swap.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit Euroe 2024</title>
      <link>https://sjp38.github.io/posts/en/ossummit_eu_2024_talk/</link>
      <pubDate>Wed, 12 Jun 2024 21:22:55 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/ossummit_eu_2024_talk/</guid>
      <description>DAMON talk for OSSummit EU 2024 has accepted and scheduled. The talk will focus on use cases of DAMON for saving memory including those for real world products.
The title of the talk is &amp;ldquo;DAMON Recipes: Ways to Save Memory Using a Linux Kernel Subsystem in the Real World&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc4/</link>
      <pubDate>Tue, 11 Jun 2024 06:34:49 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc4/</guid>
      <description>[PATCH 0/7] arm64 / x86-64: low-level code generation issues (Linus Torvalds) https://lore.kernel.org/20240610204821.230388-1-torvalds@linux-foundation.org
Linus Torvalds posted another version of runtime const patchset for not only x86_64 but also arm64. He mentions the work was motivated by his Altra box that shows __d_lookup_rcu() like a horror.
[PATCH v2 1/2] virt: pvmemcontrol: control guest physical memory properties (Yuanchu Xie) https://lore.kernel.org/20240612021207.3314369-1-yuanchu@google.com
Yuanchu posted a patchset for letting guest control its physical memory properties, security features and optimizations.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc3/</link>
      <pubDate>Tue, 04 Jun 2024 06:36:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc3/</guid>
      <description>[PATCH v2 0/8] mm: workingset reporting (Yuanchu Xie) https://lore.kernel.org/20240604020549.1017540-1-yuanchu@google.com
Yuanchu posted second version of the MGLRU-based workingset reporting patchset.
[PATCH 0/2] mm/pstore: Reserve named unspecified memory across boots (Steven Rostedt) https://lore.kernel.org/20240603233330.801075898@goodmis.org
Steven posted a patch for reserving part of memory for pstore, which is currently being reserved via firmware, via a new kernel command line parameter, reserve_mem.
[PATCH v4 00/11] riscv: Memory Hot(Un)Plug support (Björn Töpel) https://lore.kernel.org/20240605114100.315918-1-bjorn@kernel.org
Björn posted the fourth version of the patchset for supporting memory hot-[un]plugging and ZONE_DEVICE support on RISC-V.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc2/</link>
      <pubDate>Tue, 28 May 2024 06:34:57 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc2/</guid>
      <description>[PATCH 0/3] mm: zswap: global shrinker fix and proactive shrink (Takero Funaki) https://lore.kernel.org/20240528043404.39327-2-flintglass@gmail.com
This patchset fixes two zswap issues coming from global shrinker, and add proactive shrinking of zswap which starts when zswap is 95% full, for 90% accept threshold.
[PATCH v7 0/4] Memory management patches needed by Rust Binder (Alice Ryhl) https://lore.kernel.org/20240528-alice-mm-v7-0-78222c31b8f4@google.com
Alice sent the seventh revision for making memory management subsystem changes that needed by Rust Binder implementation.</description>
    </item>
    <item>
      <title>LKML News v6.10-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc1/</link>
      <pubDate>Fri, 17 May 2024 06:45:41 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.10-rc1/</guid>
      <description>[LSFMM] automating measuring memory fragmentation (Luis Chamberlain) https://lore.kernel.org/ZkUOXQvVjXP1T6Nk@bombadil.infradead.org
Luis suggested yet another LSFMM session for memory fragmentation measurement aiming to be used to understand how bad the current kernel&amp;rsquo;s defragmentation approach is, and how much improvement some new proposal is making.
page-flags.rst (Matthew Wilcox) https://lore.kernel.org/ZkOu4yXP-sGGtwc4@casper.infradead.org
Matthew posted the page-flags documentation that he wrote with LSFMM attendees on his session.
[GIT PULL] MM updates for 6.10-rc1 (Andrew Morton) https://lore.kernel.org/20240517192239.9285edd85f8ef893bb508a61@linux-foundation.org
Andrew sent the memory management part pull request for 6.</description>
    </item>
    <item>
      <title>I will have a session for DAMON at LSFMM 2024</title>
      <link>https://sjp38.github.io/posts/en/lsfmmbpf_2024_talk/</link>
      <pubDate>Wed, 08 May 2024 07:48:52 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lsfmmbpf_2024_talk/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2024. The title of the talks is &amp;ldquo;DAMON updates and Plans: Automation of DAMON tuning, tiering, and VM guest scaling&amp;rdquo;.
https://docs.google.com/spreadsheets/d/176LXLys9Uh6A-Eal2flrzcbUSJMUXGkGwyihr9jAAaQ/edit#gid=0</description>
    </item>
    <item>
      <title>LKML News v6.9</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9/</link>
      <pubDate>Tue, 07 May 2024 06:36:45 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9/</guid>
      <description>[LSF/MM/BPF TOPIC] Locally attached memory tiering (David Rientjes) https://lore.kernel.org/e90dc785-c4e6-47e4-8eda-d35325c82ff9@google.com
David suggests a new LSFMM topic for local-attached memory tiering.
[LSF/MM/BPF TOPIC] CXL Development Discussions (Adam Manzanares) https://lore.kernel.org/9bf86b97-319f-4f58-b658-1fe3ed0b1993@nmtadam.samsung
Adam suggests a new LSFMM topic for general CXL development.
kdevops BoF at LSFMM (Luis Chamberlain) https://lore.kernel.org/CAB=NE6XyLS1TaAcgzSWa=1pgezRjFoy8nuVtSWSfB8Qsdsx_xQ@mail.gmail.com
Luis suggests to have a time slot for sharing ongoing developments and changes for kdevops, which automates complex kernel development workflows.
[RFC PATCH 0/2] introduce budgt control in readahead (Zhaoyang Huang) https://lore.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc7/</link>
      <pubDate>Tue, 30 Apr 2024 06:44:38 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc7/</guid>
      <description>[PATCH] thp: Remove HPAGE_PMD_ORDER minimum assertion (Matthew Wilcox) https://lkml.kernel.org/r/20240429190114.3126789-1-willy@infradead.org
Willy removes the assumption that THP order is always two or more, since we now handle order-1 folios correctly.
[LSF/MM/BPF TOPIC] SLUB: what&amp;rsquo;s next? (Vlastimil Babka) https://lkml.kernel.org/r/b929d5fb-8e88-4f23-8ec7-6bdaf61f84f9@suse.cz
Vlastimil proposes an LSFMM session to retrospect the SLAB deprecation, share ongoing works, and discuss possible future works for reducing similar allocators such as objpool or mempool.
[LSF/MM/BPF TOPIC] Maple Tree Proposed Features (Liam R.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc6/</link>
      <pubDate>Tue, 23 Apr 2024 06:37:58 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc6/</guid>
      <description>[RFC PATCH 0/5] add mTHP support for anonymous share pages (Baolin Wang) https://lkml.kernel.org/r/cover.1713755580.git.baolin.wang@linux.alibaba.com
Baolin adds mTHP support for anonymous shared pages with this RFC patchset. There are some todo items, though.
[LSF/MM/BPF TOPIC] SLAB BOF (Matthew Wilcox) https://lkml.kernel.org/r/ZiZy2VVpTQMjN-ko@casper.infradead.org
In this mail, Matthew introduces his radical idea around Slab allocator, which decouples the objects from the page and proposes a BoF to discuss it with not only Vlastimil but more audiences.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc5/</link>
      <pubDate>Tue, 16 Apr 2024 06:39:33 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc5/</guid>
      <description>[RFC 0/3] Improve memory statistics for virtio balloon (zhenwei pi) https://lkml.kernel.org/r/20240415084113.1203428-1-pizhenwei@bytedance.com
This RFC patchset exposes six new VM statistics in the guest to the host via virtio-balloon. The statistics include oom-kill, alloc-stall, scan-async, scan-direct, reclaim-async, and reclaim-direct.
[PATCH] Documentation: coding-style: don&amp;rsquo;t encourage WARN*() (Alex Elder) https://lkml.kernel.org/r/20240414170850.148122-1-elder@linaro.org
Due to the panic_on_warn setting, even WARN() and its friends are not that welcomed in multiple situations. Alex posted a patchset to make this point clearer.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc4/</link>
      <pubDate>Tue, 09 Apr 2024 06:39:36 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc4/</guid>
      <description>[PATCH v4 0/9] transfer page to folio in KSM (Alex Shi) https://lkml.kernel.org/r/20240409092826.1733637-1-alexs@kernel.org
Alex sent the first patchset for making KSM uses folios.
[PATCH] tracing: Add new_exec tracepoint (Marco Elver) https://lkml.kernel.org/r/20240408090205.3714934-1-elver@google.com
Marco sent a patch for adding a new tracepoint. The tracepoint is for tracing a case where new exec starts while having original state including the mm.
Announcing Community Engagement Working Group (Nikolai Kondrashov) https://lkml.kernel.org/r/bf81be70-61ec-4169-b66a-5c3136869107@gmail.com/
KernelCI project announces Community Engagement Working Group which will purpose to connect with kernel maintainers and discuss test quality improvement for their subsystems.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc3/</link>
      <pubDate>Tue, 02 Apr 2024 06:37:44 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc3/</guid>
      <description>[PATCH v3 0/7] mm/kvm: Improve parallelism for access bit harvesting (James Houghton) https://lkml.kernel.org/r/20240401232946.1837665-1-jthoughton@google.com
James posted the third version of the patchset for adding KVM&amp;rsquo;s test-and-clear-access-bits fast path that doesn&amp;rsquo;t take mmu_lock. It is RFC because the author wants to do more performance tests, and unusre if the arm64 part is correct.
[PATCH] mm, mmap: remove vma_merge() (Vlastimil Babka) https://lkml.kernel.org/r/20240401192623.18575-2-vbabka@suse.cz
After the successful removal of SLAB, Vlastimil suggests to remove vma_merge(). But the patch has sent on 2024-04-01 :)</description>
    </item>
    <item>
      <title>LKML News v6.9-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc2/</link>
      <pubDate>Tue, 26 Mar 2024 06:34:47 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc2/</guid>
      <description>[PATCH 0/2] support multi-size THP numa balancing (Baolin Wang) https://lkml.kernel.org/r/cover.1711453317.git.baolin.wang@linux.alibaba.com
Baolin posted a patchset for making NUMA balancing algorithm for multi-sized THP (mTHP) to follow the THP strategy as the basic support.
[PATCH v2 0/6] Improve visibility of writeback (Kemeng Shi) https://lkml.kernel.org/r/20240327155751.3536-1-shikemeng@huaweicloud.com
Kemeng posted a patchset that adds two new debugfs file, bdi/xxx/stats and bdi/xxx/wb_stats to show whole bdi and per-wb writeback information.
[PATCH v10] zswap: replace RB tree with xarray (Chris Li) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.9-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc1/</link>
      <pubDate>Tue, 12 Mar 2024 07:03:45 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.9-rc1/</guid>
      <description>[GIT PULL] slab updates for 6.9 (Vlastimil Babka) https://lkml.kernel.org/r/c021631d-29e5-432f-bfcd-1d75ec28d065@suse.cz
Vlastimil sent the slab pull request for 6.9 to Linus Torvalds.
[PATCH v4 0/6] Swap-out mTHP without splitting (Ryan Roberts) https://lkml.kernel.org/r/20240311150058.1122862-1-ryan.roberts@arm.com
Ryan sent the fourth version of the patchset to swap-out multi-sized THP without splitting first. The approach is similar to that for PMD-sized THP.
[PATCH] vmstat: Keep count of the maximum page reached by the kernel stack (Pasha Tatashin) https://lkml.kernel.org/r/20240313033417.447216-1-pasha.tatashin@soleen.com</description>
    </item>
    <item>
      <title>LKML News v6.8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8/</link>
      <pubDate>Tue, 05 Mar 2024 06:22:38 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8/</guid>
      <description>[RFC 01/16] mm/hmm: let users to tag specific PFNs (Leon Romanovksy) https://lkml.kernel.org/r/a77609c9c9a09214e38b04133e44eee67fe50ab0.1709631413.git.leon@kernel.org
This RFC patchset introduces new flag that allows users to tag specific PFNs with extra data.
[PATCH V3 01/10] mm: page_alloc: freelist migratetype hygiene (Johannes Weiner) https://lkml.kernel.org/r/20240306041526.892167-1-hannes@cmpxchg.org
Whne pages of one migratetype end up on the freelists on another type, migratetype violations happen. This third version of patchset fixes it.
[PATCH 0/8] tracing: Persistent traces across a reboot or crash (Steven Rostedt) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.8-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc7/</link>
      <pubDate>Tue, 27 Feb 2024 06:37:30 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc7/</guid>
      <description>[PATCH 1/1] mm/madvise: enhance lazyfreeing with mTHP in madvise_free (Lance Yang) https://lkml.kernel.org/r/20240225123215.86503-1-ioworker0@gmail.com
Lance improves madvise_free_pte_range() to handle large folios that smaller than PMD-size and optimizes lazy-free of PTE-mapped smaller than PMD-size THPs using this patch.
[RFC PATCH] mm: Add reclaim type to memory.reclaim (Yafang Shao) https://lkml.kernel.org/r/20240225114204.50459-1-laoar.shao@gmail.com
This RFC patch extends memory.reclaim memcg file to receive type of memory to reclaim. It supports pagecache only, slabs only, and both.
[LSF/MM/BPF TOPIC] mm/mempolicy extentions for heterogeneous memory systems (Gregory Price) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.8-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc6/</link>
      <pubDate>Tue, 20 Feb 2024 06:34:52 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc6/</guid>
      <description>[PATCH V2 0/2] Introduce slabinfo version 2.2 (Fangzheng Zhang) https://lkml.kernel.org/r/20240219031911.10372-1-fangzheng.zhang@unisoc.com
This patchset updates slabinfo to version 2.2 and adds slabreclaim column for recording whether each slab pool is reclaim type.
[RFC PATCH 0/3] make the hugetlb migration strategy consistent (Baolin Wang) https://lkml.kernel.org/r/cover.1708507022.git.baolin.wang@linux.alibaba.com
Falling back to other NUMA nodes when migrating freed hugetlb is prevented while it is allowed for in-use hugetlb. This patchset make it more clear and consistent.
[Invitation] Linux MM Alignment Session on Cold Page Detection on Wednesday (David Rientjes) https://lkml.</description>
    </item>
    <item>
      <title>Hackermail v1 is released</title>
      <link>https://sjp38.github.io/posts/en/hackermail_v1/</link>
      <pubDate>Sat, 17 Feb 2024 10:40:58 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/hackermail_v1/</guid>
      <description>I started subscribing linux kernel mailing list with my gmail account in 2013. Dealing with the large amount of mails was not that easy, probably due to my poor setup and being lazy at trying more tools.
In 2019, while returning from Linux Plumbers Conference, I read an LWN article saying Linus Torvalds is now considering unsubscribing the linux kernel mailing list, owing to the evolvement of the public-inbox and lore.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2024</title>
      <link>https://sjp38.github.io/posts/en/ossummit_na_2024_talk/</link>
      <pubDate>Wed, 14 Feb 2024 23:05:59 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/ossummit_na_2024_talk/</guid>
      <description>DAMON talk for OSSummit North America 2024 has been accepted and scheduled. The talk will present DAMOS auto-tuning and hopefully, more new DAMO features. The features are still under development, but hopefully, the power of presentation-driven development will make it. ;) Looking forward to meeting you there!</description>
    </item>
    <item>
      <title>LKML News v6.8-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc5/</link>
      <pubDate>Tue, 13 Feb 2024 06:36:48 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc5/</guid>
      <description>[PATCH v3] cgroup2: New memory.max.effective like cgroup1 hierarchical_memory_limit (Jan Kratochvil) https://lkml.kernel.org/r/ZctiM5RintD_D0Lt@host1.jankratochvil.net
Unlike cgroup v1, which was able to find effective memory limit using hierarchical_memorylimit and hierarchical_memsw_limit lines, cgoup v2 doesn&amp;rsquo;t have such hierarchical information, so need to read all files in the hierarchy to know the effective memory limit. This patchset adds memory.max.effective and memory.swap.max.effective to let users easily get the information.
[PATCH v3 00/35] Memory allocation profiling (Suren Baghdasaryan) https://lkml.</description>
    </item>
    <item>
      <title>Perfbook 2nd edition translation is complete</title>
      <link>https://sjp38.github.io/posts/en/perfbook_2nd_edition_translation_complete/</link>
      <pubDate>Sun, 11 Feb 2024 10:05:34 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/perfbook_2nd_edition_translation_complete/</guid>
      <description>After about 8 years of progress on my little hobby project[1], the Korean translation of Paul E. McKenney &amp;rsquo;s book, I&amp;rsquo;m marking it as completed a humble milestone[2]. It was a very fun and informative journey.
[1] https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee0460 [2] https://lore.kernel.org/perfbook/20240211175355.4986-1-sj38.park@gmail.com/</description>
    </item>
    <item>
      <title>LKML News v6.8-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc4/</link>
      <pubDate>Tue, 06 Feb 2024 06:34:11 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc4/</guid>
      <description>[PATCH] mm/cma: Add sysfs file &amp;lsquo;release_pages_success&amp;rsquo; (Anshuman Khandual) https://lkml.kernel.org/r/20240206045731.472759-1-anshuman.khandual@arm.com
This patch adds a new sysfs file for tracking the number of successfully released pages from a given CMA heap area. It aims to be hulpful at determining available active CMA pages.
[PATCH v2] mm/demotion: print demotion targets (Li Zhijian) https://lkml.kernel.org/r/20240206020151.605516-1-lizhijian@fujitsu.com
Li Zhijian sent a patch for printing demotion target information in case of fallback for unmet requirements on the target node, directly to the kernel log.</description>
    </item>
    <item>
      <title>LKML News v6.8-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc3/</link>
      <pubDate>Tue, 30 Jan 2024 06:37:02 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc3/</guid>
      <description>[GIT PULL] hotfixes for 6.8-rc3 (Andrew Morton) https://lkml.kernel.org/r/20240128232759.7535e6774bec152556fb9730@linux-foundation.org
Andrew Morton sent a hotfixes pull request to Linus Torvalds.
[LSF/MM/BPF TOPIC] Reclaiming &amp;amp; documenting page flags (Matthew Wilcox) https://lkml.kernel.org/r/Zbcn-P4QKgBhyxdO@casper.infradead.org
Matthew proposes yet another LSFMM topic for discussing what page flags actually mean altogether, for better documentation.
[PATCH v7 0/1] mm: report per-page metadata information (Sourav Panda) https://lkml.kernel.org/r/20240129224204.1812062-1-souravpanda@google.com
Sourav from Google posted a patch for adding a new field on /proc/meminfo and /sys/devices/system/node/nodeN/vmstat called PageMetadata and nr_page_metadata respectively, which can helps understand how much memory are being used for page metadata.</description>
    </item>
    <item>
      <title>LKML News v6.8-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc2/</link>
      <pubDate>Tue, 23 Jan 2024 06:43:17 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc2/</guid>
      <description>Project: Improving the PCP allocator (Matthew Wilcox) https://lkml.kernel.org/r/Za6RXtSE_TSdrRm_@casper.infradead.org
Matthew introduces an idea to improve the PCP allocator, roughly saying, keeping only compound memory on the PCP list.
[PATCH v2 0/3] Enable &amp;gt;0 order folio memory compaction (Zi Yan) https://lkml.kernel.org/r/20240123034636.1095672-1-zi.yan@sent.com
Zi enables larger than zero order folio compaction, which is the prerequisite for large folio support.
[PATCH v2 1/3] mm: make vm_area_struct anon_name field RCU-safe (Suren Baghdasaryan) https://lkml.kernel.org/r/20240123231014.3801041-1-surenb@google.com
For lockless /proc/pid/maps reads, this patch makes anon_name field of vm_area_struct, which is the only one field that need to be accessed for reading the file but not RCU-protected, to be protected by RCU.</description>
    </item>
    <item>
      <title>LKML News v6.8-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc1/</link>
      <pubDate>Tue, 09 Jan 2024 06:52:07 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.8-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.8-rc1 (Andrew Morton) https://lkml.kernel.org/r/20240108155039.fd2798712a2a93a108b710ce@linux-foundation.org/
Andrew Morton sent the memory management subsystem side pull request for Linux v6.8-rc1 to Linus Torvalds. The request has many interesting changes including zswap writeback improvement, Feedback-based DAMOS autotuning, Multi-size anon THP, KSM advisor and many more.
[GIT PULL] non-MM updates for 6.8-rc1 (Andrew Morton) https://lkml.kernel.org/r/20240109110420.dcdefe80d76257d9ff645a32@linux-foundation.org
Andrew sent yet another pull request for out of memory management subsystem changes to Linus Torvalds.</description>
    </item>
    <item>
      <title>LKML News v6.7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7/</link>
      <pubDate>Tue, 02 Jan 2024 06:46:21 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7/</guid>
      <description>[PATCH v3 0/7] hugetlb: parallelize hugetlb page init on boot (Gang Li) https://lkml.kernel.org/r/20240102131249.76622-1-gang.li@linux.dev
The thrid version of hugetlb initialization prallelization patchset has posted.
[PATCH v3 00/11] Mitigate a vmap lock contention v3 (Uladzislau Rezki) https://lkml.kernel.org/r/20240102184633.748113-1-urezki@gmail.com
Third version of vmap lock contention mitigation patch has posted.
[PATCH v6 0/2] Add swappiness argument to memory.reclaim (Dan Schatzberg) https://lkml.kernel.org/r/20240103164841.2800183-1-schatzberg.dan@gmail.com
Sixth version of the patchset for letting memory.reclaim memcg file be used with swappiness argument has posted.</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2023</title>
      <link>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2023/</link>
      <pubDate>Sun, 31 Dec 2023 12:57:52 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2023/</guid>
      <description>As today is the last day of 2023, I checked some open source commits statistics using my simple and buggy script, and github. Similar statistics for 2022 is available at another post.
In short, I made 8th and 4th biggest changes to Linux kernel memory management subsystem among the 295 people, for lines of changes (1,910) and commits (66).
For the Linux kernel whole tree, the numbers become 264th (3,562 lines) and 80th (147 commits) among 5,006 people.</description>
    </item>
    <item>
      <title>LKML News v6.7-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc8/</link>
      <pubDate>Tue, 26 Dec 2023 06:44:18 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc8/</guid>
      <description>[PATCH] kernel: Introduce a write lock/unlock wrapper for tasklist_lock (Maria Yu) https://lkml.kernel.org/r/20231225081932.17752-1-quic_aiquny@quicinc.com
A patch introducing a write lock/unlock wrapper for tasklist_lock, to overcome bad responsive performance of system that coming from scenarios that acquiring read lock which wrote lock needed to be waiting for.
[PATCH v3 00/10] IOMMU memory observability (Pasha Tatashin) https://lkml.kernel.org/r/20231226200205.562565-1-pasha.tatashin@soleen.com
Third version of patchset to allow monitoring and limiting IOMMU memory usage is posted.
[GIT PULL] hotfixes for 6.</description>
    </item>
    <item>
      <title>LKML News v6.7-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc7/</link>
      <pubDate>Tue, 19 Dec 2023 06:37:26 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc7/</guid>
      <description>[PATCH v5 0/4] mm/ksm: Add ksm advisor (Stefan Roesch) https://lkml.kernel.org/r/20231218231054.1625219-1-shr@devkernel.io
Stefan posted the fifth version of the patchset for automatic and efficient tuning of kernel samepage merging.
[PATCH -next v4 0/2] Make memory reclamation measurable (Bixuan Cui) https://lkml.kernel.org/r/20231220012123.2787-1-cuibixuan@vivo.com
This patchset adds a new tracer to shrink_active_list(), shrink_inactive_list(), and shrinker-&amp;gt;count_objects() to make memory recycling mesaurable with bpf.
[RFC PATCH 1/1] mm: mark folio accessed in minor fault (Zhaoyang Huang) https://lkml.kernel.org/r/20231220102948.1963798-1-zhaoyang.huang@unisoc.com
Inactive mapped folio is promoted to active only when it is scanned in shrink_inactive_list().</description>
    </item>
    <item>
      <title>LKML News v6.7-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc6/</link>
      <pubDate>Tue, 12 Dec 2023 07:07:30 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc6/</guid>
      <description>[Invitation] Linux MM Alignment Session on remap_file_pages on Wednesday (David Rientjes) https://lkml.kernel.org/r/46f97bec-3a48-e714-0a8d-b5206e1704ba@google.com
There will be the last Linux MM Alignment Session for re-introducing remap_file_pages(), led by Matthew Wilcox, on 2023-11-13.
[PATCH] kernel: Introduce a write lock/unlock wrapper for tasklist_lock (Maria Yu) https://lkml.kernel.org/r/20231213101745.4526-1-quic_aiquny@quicinc.com
There are multiple scenarios for tasklist_lock that could lead to bad responsiveness. To mitigate the situation, this patch introduces a write lock/unlock wrapper for tasklist_lock.
[PATCH 0/9] Finish two folio conversions (Matthew Wilcox) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.7-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc5/</link>
      <pubDate>Tue, 05 Dec 2023 06:38:00 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc5/</guid>
      <description>[PATCH] mm/thp: add CONFIG_TRANSPARENT_HUGEPAGE_NEVER option (Dmytro Maluka) https://lkml.kernel.org/r/20231204163254.2636289-1-dmaluka@chromium.org
Khugepaged has its own memory cost, and it increases vm.min_free_kbytes as it needs when it starts. On 4GB RAM, 3 mmzones and pageblock_order == MAX_ORDER, khugepaged increases vm.min_free_kbytes from 8MB to 132MB. This patch introduces a config to disallow khugepaged starts by default. It still allows the userspace to start khugepaged, though.
[PATCH v4 0/2] KSM: support smart-scan feature (Stefan Roesch) https://lkml.kernel.org/r/20231205180952.3843711-1-shr@devkernel.io</description>
    </item>
    <item>
      <title>LKML News v6.7-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc4/</link>
      <pubDate>Tue, 28 Nov 2023 06:35:48 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc4/</guid>
      <description>[PATCH v2] prctl: Get private anonymous memory region name (Rong Tao) https://lkml.kernel.org/r/tencent_77E0BC1E8E9A21CA1B9009DD66555C72A90A@qq.com
Now prctl() can set the name of anonymous vmas, but there is no option for getting the name. This patch implements the getter feature.
[RFC PATCH 0/6] Supporting GMEM (generalized memory management) for external memory devices (Weixi Zhu) https://lkml.kernel.org/r/20231128125025.4449-1-weixi.zhu@huawei.com
Because Linux kernels&amp;rsquo; memory management system is mainly for only host DRAM, accelerator driver developers need to invent their own external memory management subsystems that feature similar functionality.</description>
    </item>
    <item>
      <title>LKML News v6.7-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc3/</link>
      <pubDate>Tue, 21 Nov 2023 06:33:44 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc3/</guid>
      <description>[PATCH v6 0/4] page_owner: print stacks and their counter (Oscar Salvador) https://lkml.kernel.org/r/20231120084300.4368-1-osalvador@suse.de
This patchset introduces a new read-only file page_owner_stacks. This can be useful for getting the relationship between stacks and allocation/free without fiddling with pages.
[PATCH v3 0/8] riscv: ASID-related and UP-related TLB flush enhancements (Samuel Holland) https://lkml.kerenl.org/r/20231122010815.3545294-1-samuel.holland@sifive.com
A patchset for improving some TLB flush inefficiencies in risc-v.
[RFC] mm: Multi-gen LRU: fix use of mm/page_idle/bitmap (Henry Huang) https://lkml.kernel.org/r/cover.1700719508.git.henry.hj@antgroup.com</description>
    </item>
    <item>
      <title>LKML News v6.7-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc2/</link>
      <pubDate>Fri, 17 Nov 2023 07:34:48 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc2/</guid>
      <description>[PATCH v7 00/10] Small-sized THP for anonymous memory (Ryan Roberts) https://lkml.kernel.org/r/20231115132734.931023-1-ryan.roberts@arm.com
The seventh revision of small-sized anonymout memory THP is posted.
[PATCH v2 00/14] Transparent Contiguous PTEs for User Mappings (Ryan Roberts) https://lkml.kernel.org/r/20231115163018.1303287-1-ryan.roberts@arm.com
This patchset makes opportunistic and transparent contpte mappings for user memory when it meets the requirement.
[GIT PULL] hotfixes for 6.7-rc2 (Andrew Morton) https://lkml.kernel.org/r/20231117140848.02adcf56c301bb3ab85ae75a@linux-foundation.org
MM subsystem hotfixes for rc2 has sent to Linus Torvalds.
Linux 6.7-rc2 (Linus Torvalds) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.7-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc1/</link>
      <pubDate>Tue, 31 Oct 2023 07:04:49 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.7-rc1/</guid>
      <description>NUMA + THP test suites? (John Hubbard) https://lkml.kernel.org/r/21812f89-c1a0-4ca0-9f73-54f20c4d29ef@nvidia.com
John asks tets suite for NUMA and THP that can be useful for testing patches for the topics.
[PATCH v4 0/1] mm: report per-page metadata information (Sourav Panda) https://lkml.kernel.org/r/20231031223846.827173-1-souravpanda@google.com
This patch adds per-node and global page metadata information to sysfs and procfs, to let users know how much memory is being used by the metadata.
[GIT PULL] MM updates for 6.7-rc1 (Andrew Morton) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6/</link>
      <pubDate>Tue, 24 Oct 2023 06:48:24 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6/</guid>
      <description>Virtual Scanning Considered Harmful (Matthew Wilcox) https://lkml.kernel.org/r/ZTc7SHQ4RbPkD3eZ@casper.infradead.org
Matthew shares his benchmark program that simulates speeds of LRU pages traversal using an linked list, an array, and direct physical addresses. As can expect, the physical address based traversal is fastest.
[GIT PULL] hotfixes for 6.6 (Andrew Morton) https://lkml.kernel.org/r/20231024094608.f2dc0ca5ed2619d411a31df5@linux-foundation.org
Andrew sent mm hotfixes for v6.6 to Linus Torvalds. One for DAMON also contained.
[PATCH v4 0/5] workload-specific and memory pressure-driven zswap writeback (Nhat Pham) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc7/</link>
      <pubDate>Tue, 17 Oct 2023 06:51:28 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc7/</guid>
      <description>[PATCH] x86/mm: drop 4MB restriction on minimal NUMA node size (Mike Rapoport) https://lkml.kernel.org/r/20231017062215.171670-1-rppt@kernel.org
Kernel can panic when less than 4MB NUMA node is configured. The commit which introduced the 4MB limit doesn&amp;rsquo;t clearly explain the reason. This patch drops the limit.
[Invitation] Linux MM Alignment Session on Small-sized THPs on Wednesday (David Rientjes) https://lkml.kernel.org/r/76c2f454-5ab2-61db-a41f-a30f08a4aa1e@google.com
The next MM alignment session sill be lead by Ryan Roberts from ARM, for small-sized THP.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc6/</link>
      <pubDate>Tue, 10 Oct 2023 06:40:48 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc6/</guid>
      <description>[RFC PATCH 0/5] hot page swap to zram, cold page swap to swapfile directly (Lincheng Yang) https://lkml.kernel.org/r/20231008095924.1165106-1-lincheng.yang@transsion.com
The team has made the kernel feature that swaps hot page to zram and cold pages to swapfile, directly. It aims to reduce zram compression/decompression overhead under memory pressure on Android v4.19 linux kernel, and trying to make it upstreamed due to the GKI limitation.
[RFC PATCH] zswap: add writeback_time_threshold interface to shrink zswap pool (Zhongkun He) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc5/</link>
      <pubDate>Tue, 03 Oct 2023 06:47:07 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc5/</guid>
      <description>[PATCH 0/5] riscv: Use READ_ONCE()/WRITE_ONCE() for pte accesses (Alexandre Ghiti) https://lkml.kernel.org/r/20231002151031.110551-1-alexghiti@rivosinc.com
A patchset for making all page table entries accesses use READ_ONCE()/WRITE_ONCE(), to avoid compiler reordering of the accesses.
[PATCH v1 0/3] mm/gup: Introduce pin_user_pages_fd() for pinning shmem/hugetlbfs file pages (Vivek Kasireddy) https://lkml.kernel.org/r/20231003074447.3245729-1-vivek.kasireddy@intel.com
A patchset introducing a new function for long-term pages pinning.
[RFC PATCH v3 0/3] Introduce persistent memory pool (Stanislav Kinsburskii) https://lkml.kernel.org/r/169645773092.11424.7258549771090599226.stgit@skinsburskii.
An RFC implementing a memory allocator in the kernel for persistent memory has posted.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc4/</link>
      <pubDate>Tue, 26 Sep 2023 06:50:25 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc4/</guid>
      <description>[PATCH v3 0/4] Smart scanning mode for KSM (Stefan Roesch) https://lkml.kernel.org/r/20230926040939.516161-1-shr@devkernel.io
KSM scans pages without historic information, so pages that already found to be not eligible for deduplication are scanned unnecessarily. This patchset introduces smart scanning for KSM, which utilizes the historic information.
[PATCH -V2 00/10] mm: PCP high auto-tuning (Huang Ying) https://lkml.kernel.org/r/20230926060911.266511-1-ying.huang@intel.com
This patchset implements auto-tuning of Per-CPU Pageset high to optimize page allocation performance.
[PATCH rfc 0/5] mm: improve performance of kernel memory accounting (Roman Gushchin) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc3/</link>
      <pubDate>Wed, 20 Sep 2023 12:12:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc3/</guid>
      <description>[Invitation] Linux MM Alignment Session on APIs for Sparse Mappings on Wednesday (David Rientjes) https://lkml.kernel.org/r/fba78307-e4a3-2621-2917-464f19bb4c57@google.com
David is organizing yet another Linux MM alignment session for proper API for sparse mappings.
[PATCH v2] vmscan: add trace events for lru_gen (Jaewon Kim) https://lkml.kernel.org/r/20230921062206.14429-1-jaewon31.kim@samsung.com
This patch adds two new tracevents called trace_mm_vmscan_lru_gen_scan and trace_mm_vmscan_lru_gen_evict that similar to trace_mm_vmscan_lru_isolate and trace_mm_vmscan_lru_shrink_[in]active.
[PATCH v3 00/15] futex: More futex2 bits (Peter Zijlstra) https://lkml.kernel.org/r/20230921104505.717750284@noisy.programming.kicks-ass.net
Peter sent third version of the patchset that introduces a new interface for same futex core, futex2.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc2/</link>
      <pubDate>Tue, 12 Sep 2023 06:46:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc2/</guid>
      <description>[syzbot] Monthly mm report (Sep 2023) https://lkml.kernel.org/r/000000000000c06b600605127cb3@google.com
Syzbot posted its mm subsystem report for last 31 days. For the period, seven new issues were found and two among those were fixed. In total, 43/232 issues are still open.
[PATCH 0/2] workload-specific and memory pressure-driven zswap writeback (Nhat Pham) https://lkml.kernel.org/r/20230911164024.2541401-1-nphamcs@gmail.com
Zswap has only single LRU list and shrinks under user-defined limit. This patch series seperates the LRU list out to per-memcg and per-NUMA, and perform workload-specific writeback under memory pressure.</description>
    </item>
    <item>
      <title>LKML News v6.6-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc1/</link>
      <pubDate>Mon, 28 Aug 2023 06:47:38 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.6-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.6-rc1 (Andrew Morton) https://lkml.kernel.org/r/20230828184251.bfbc164280503903eacf498c@linux-foundation.org
Andrew sent the mm subsystem pull request for v6.6-rc1 to Linus Torvalds. And, it pulled.
[PATCH 1/2] mm/vmalloc: Add a safer version of find_vm_area() for debug (Joel Fernendes) https://lkml.kernel.org/r/20230830110402.386898-1-joel@joelfernandes.org
A patchset implementing safe trylock version of vmalloc dump function.
[PATCH v2 0/6] Introduce __mt_dup() to improve the performance of fork() (Peng Zhang) https://lkml.kernel.org/r/20230830125654.21257-1-zhangpeng.00@bytedance.com
When doing fork(), vma of the parent should be inserted into the maple tree of the child.</description>
    </item>
    <item>
      <title>LKML News v6.5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5/</link>
      <pubDate>Tue, 22 Aug 2023 03:44:10 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5/</guid>
      <description>[PATCH] maple_tree: shrink struct maple_tree from 24 to 16 bytes on LP64 (Mateusz Guzik) https://lkml.kernel.org/r/20230821225145.2169848-1-mjguzik@gmail.com
This patchset moves ma_root field to be placed after ma_flags to plug a padding hole of struct mape_tree, to reduce the size of the struct.
idea for scalable and almost waste-free percpu counter alloc (was: Re: [PATCH 0/2] execve scalability issues, part 1) (Mateusz Guzik) https://lkml.kernel.org/r/CAGudoHH-b5R+COHUtns92NTzSVeT1ECMHb22SEcH_108Pi0FTQ@mail.gmail.com
Mateusz is suggesting another idea for scalable and almost-waste-free percpu counter alloc.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc7/</link>
      <pubDate>Tue, 15 Aug 2023 06:38:39 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc7/</guid>
      <description>[MAINTAINERS SUMMIT] Handling of embargoed security issues &amp;ndash; security@korg vs. linux-distros@ (Jiri Kosina) https://lkml.kernel.org/r/nycvar.YFH.7.76.2308150927190.14207@cbobk.fhfr.pm
Yet another maintainers summit agenda proposal about security issue handling has posted. There are securitiy@korg and linux-distros@. The kernel community wants to do handling of the security fixes from only security@, without being bothered by linux-distros@. Jiri proposes to discuss about if it could eventually better handled with linux-distros@.
Maintainers Summit 2023 Call for Topics (Theodore Ts&amp;rsquo;o) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc6/</link>
      <pubDate>Tue, 08 Aug 2023 06:55:38 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc6/</guid>
      <description>[RFC PATCH 0/3] Reduce NUMA balance caused TLB-shootdowns in a VM (Yan Zhao) https://lkml.kernel.org/r/20230808071329.19995-1-yan.y.zhao@intel.com
For virtual machines having assigned devices or VFIO mediated devices, all or part of its memory are pinned for long-term. Auto NUMA balancing can cause unnecessary TLB-shootdowns. This RFC patchset proposes a solution for that.
[PATCH v2] cma: introduce CMA_ALLOC_DEBUG config (Bibek Kumar Patro) https://lkml.kernel.org/r/20230809131640.18791-1-quic_bibekkum@quicinc.com
CONFIG_CMA_DEBUG makes all CMA debugging message enabled. This can results in flooding the dmesg buffer.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc5/</link>
      <pubDate>Tue, 01 Aug 2023 06:57:11 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc5/</guid>
      <description>[PATCH] MAINTAINERS: Add maple tree mailing list (Liam R. Howlett) https://lkml.kernel.org/r/20230731175542.1653200-1-Liam.Howlett@oracle.com
Maple tree has its own development mailing list at infradead.org. This patch adds it on the MAINTAINERS file.
Maple Tree Work 2023/08 (Laim R. Howlett) https://lkml.kernel.org/r/20230801194820.alch3ot7pvrgig5v@revolver
Liam shares monthlee update of maple tree work progress and todo for avoid conflict.
[RFC PATCH 0/2] vmrd: dynamic guest VM memory resizing daemon (Sudarshan Rajagopalan) https://lkml.kernel.org/r/cover.1690836010.git.quic_sudaraja@quicinc.com
Sudarshan posted an RFC for dynamic guest VM memory resizing based on the guest&amp;rsquo;s memory demand.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc4/</link>
      <pubDate>Tue, 25 Jul 2023 07:06:09 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc4/</guid>
      <description>[PATCH v5 0/7] Add support for memmap on memory feature on ppc64 (Aneesh Kumar K.V) https://lkml.kernel.org/r/20230725100212.531277-1-aneesh.kumar@linux.ibm.com
Aneesh continues adding support of memmap_on_memory for more architectures.
[PATCH mm-unstable v7 00/31] Split ptdesc from struct page (Vishal Moola) https://lkml.kernel.org/r/20230725042051.36691-1-vishal.moola@gmail.com
The seventh revision of the patchset for splitting page table tracking information out of struct page for making it smaller.
[PATCH v3 00/49] use refcount+RCU method to implement lockless slab shrink (Qi Zheng) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc3/</link>
      <pubDate>Tue, 18 Jul 2023 06:49:03 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc3/</guid>
      <description>[PATCH v4 0/6] Add support for memmap on memory feature on ppc64 (Aneesh Kumar K.V) https://lkml.kernel.org/r/20230718024409.95742-1-aneesh.kumar@linux.ibm.com
The fourth version of the patchset for support of memmap on memory on ppc64 has posted.
[GIT PULL] hotfixes for 6.5-rc2 (Andrew Morton) https://lkml.kernel.org/r/20230718123131.5ec065527c2127a568e5754c@linux-foundation.org
Andrew sent mm subsystem hotfixes for 6.5 rc2 to Linus.
[PATCH v2 0/5] Invalidate secondary IOMMU TLB on permission upgrade (Alistair Popple) https://lkml.kernel.org/r/cover.de78568883814904b78add6317c263bf5bc20234.1689768831.git-series.apopple@nvidia.com
This patch moves secondary TLB invcalidation mmu notifier callbacks to architecture specific TLB flushing functions.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc2/</link>
      <pubDate>Tue, 11 Jul 2023 07:08:29 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc2/</guid>
      <description>[Invitation] Linux MM Alignment Session on mshare on Wednesday (David Rientjes) https://lkml.kernel.org/r/CAE-26VAZZ+buEX0wbqHTz0k1hshYzYP3KzMmXT6jc6=NucPa0Q@mail.gmail.com
David from Google is hosting yet another Linux MM Alignment session on Wednesday. The topic of this week is the process page table sharing, which could be a clear efficiency win for situations where huge number of processes sharing same pages.
[PATCH v3 0/7] Add support for memmap on memory feature on ppc64 (Aneesh Kumar K.V) https://lkml.kernel.org/r/20230711044834.72809-1-aneesh.kumar@linux.ibm.com
This makes the memmap on memory feature more useful for ppc64-like architectures having alignment rules that different with 64K page size.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit Europe 2023</title>
      <link>https://sjp38.github.io/posts/en/ossummit_eu_2023_talk/</link>
      <pubDate>Fri, 30 Jun 2023 16:01:51 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/ossummit_eu_2023_talk/</guid>
      <description>DAMON talk for OSSummit EU 2023 has accepted and scheduled. The talk will focus on its user-space tool, damo. It&amp;rsquo;s mainly for helping more audiences to digest the content easier, and also for accelerating the development of damo. By the time, hopefully the version of damo would reach to, or exceed 2.0.0, and newer interface and features will be introduced together.
The title of the talk is &amp;ldquo;Data Access Monitoring Operator (DAMO): User-Space Tool/Python Library for Access-Aware Profiling and Optimization of Your Linux Systems&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v6.5-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc1/</link>
      <pubDate>Tue, 27 Jun 2023 07:35:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.5-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.5-rc1 (Andrew Morton) https://lkml.kernel.org/r/20230626085035.e66992e96b4c6d37dad54bd9@linux-foundation.org
Andrew Morton sent the memory management subsystem pull request for v6.5-rc1. Among the change, cachestata() syscall and Mel Gorman&amp;rsquo;s compaction optimization looks interesting to me.
[GIT PULL] slab updates for 6.5 (Vlastimil Babka) https://lkml.kernel.org/r/1c39c9b0-ec37-f910-2b09-cedf7acf6e91@suse.cz
Vlastimil sent the slab pull request for v6.5 to Linus Torvalds. This contains the SLAB config deprecation renaming (s/CONFIG_SLAB/CONFIG_SLAB_DEPRECATED/).
[PATCH v1 0/5] mm/memory_hotplug: make offline_and_remove_memory() timeout instead of failing on fatal signals (David Hildenbrand) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4/</link>
      <pubDate>Tue, 20 Jun 2023 07:03:30 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4/</guid>
      <description>[PATCH] mm/memory_hotplug.c: don&amp;rsquo;t fail hot unplug quite so eagerly (John Hubbard) https://lkml.kernel.org/r/20230620011719.155379-1-jhubbard@nvidia.com
Some device drivers add and remove memory to the system via memory hot [un]plog. Nevertheless, the ungplugging could fail easily, especially for the pending signal on the process. This patch simply remove the signal check error.
[PATCH v2] mm/min_free_kbytes: modify min_free_kbytes calculation rules (liuq) https://lkml.kernel.org/r/20230621073912.21747-1-liuq131@chinatelecom.cn
This patch adjusts min_free_kbytes calculation so that ZONE_NORMAL is unnecessarily be too small when ZONE_MOVABLE exists.</description>
    </item>
    <item>
      <title>LKML News v6.4-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc7/</link>
      <pubDate>Tue, 13 Jun 2023 07:28:47 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc7/</guid>
      <description>[GIT PULL] hotfixes for 6.4-rc7 (Andrew Morton) https://lkml.kernel.org/r/20230612122712.f495e24b80f88f58557ea470@linux-foundation.org
Andrew sent hot fixes pull request to Linus Torvalds. The one for DAMON is also contained.
[PATCH stable 5.10 0/1] Fix memleak during hotremove memory (Ma Wupeng) https://lkml.kernel.org/r/20230614061900.3296725-1-mawupeng1@huawei.com
Ma found a memory leak in memory hotplugging, and providing a patch.
[ANNOUNCE/CFP] CXL Microconference at LPC 2023 (Davidlohr Bueso) https://lkml.kernel.org/r/a4c2gx2tnm4ckax7qkx2trnvmqjssfytc45sb2zikuayd2marc@rpsjp4icgsvn
Davidlohr announces CXL microconference has accepted for LPC this year, and inviting people in the call for participation.</description>
    </item>
    <item>
      <title>LKML News v6.4-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc6/</link>
      <pubDate>Tue, 06 Jun 2023 07:19:57 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc6/</guid>
      <description>As of 2023-06-06, for some reason https://lore.kernel.org/linux-mm seems stopped being updated since 2023-05-31. On the day of 2023-06-06, the update has resumed.
[PATCH v3 0/5] riscv: Introduce KASLR (Alexandre Ghiti) https://lkml.kernel.org/r/20230606123242.20804-1-alexghiti@rivosinc.com
This patchset introduces KASLR, which allows kernel mapping randomization, for riscv.
Question about oom-killer (Gou Hao) https://lore.kernel.org/linux-mm/A31B3EA06AF77F13+c7278bd0-2695-4cc0-5a56-531a06ac2389@uniontech.com/
A question about oom-killer behavior that suspected to be a kernel bug.
[PATCH v3] Documentation/mm: Initial page table documentation (Linus Walleij) https://lkml.kernel.org/r/20230608125501.3960093-1-linus.walleij@linaro.org</description>
    </item>
    <item>
      <title>LKML News v6.4-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc5/</link>
      <pubDate>Tue, 30 May 2023 07:31:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc5/</guid>
      <description>[PATCH 00/12] mm: free retracted page table by RCU (Hugh Dickins) https://lkml.kernel.org/r/35e983f5-7ed3-b310-d949-9ae8b130cdab@google.com
This patchset aims to reduce mmap_lock contention by freeing retracted page table by RCU, with preceding and succeeding patchsets. This patchset was in Google data center kernel for three years.
[PATCH] mm: madvise: fix uneven accounting of psi (Charan Teja Kalla) https://lkml.kernel.org/r/1685531374-6091-1-git-send-email-quic_charante@quicinc.com
For madvise(MADV_PAGEOUT) is called for folios, PSI for the folio is not always accounted. This patchset makes it be consistent by always not considering PSI for folios that are reclaimed through madvise(MADV_PAGEOUT).</description>
    </item>
    <item>
      <title>LKML News v6.4-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc4/</link>
      <pubDate>Tue, 23 May 2023 07:41:12 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc4/</guid>
      <description>[PATCH 0/9] Mitigate a vmap lock contention (Uladzislau Rezki) https://lkml.kernel.org/r/20230522110849.2921-1-urezki@gmail.com
Uladzislau sent a patchset for vmap lock contention mitigation, as suggested at LSFMM+BPF.
[PATCH] mm: deduct the number of pages reclaimed by madvise from workingset (Zhaoyang Huang) https://lkml.kernel.org/r/1684919574-28368-1-git-send-email-zhaoyang.huang@unisoc.com
Pages reclaimed by madvise() with MADV_PAGEOUT hint doesn&amp;rsquo;t handle the workingset, hence leads to large refault distance than it should be. This patch addresses the case by making reclaim_pages() to receive mm_struct and deduct the pages from workingset.</description>
    </item>
    <item>
      <title>LKML News v6.4-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc3/</link>
      <pubDate>Tue, 16 May 2023 07:02:19 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc3/</guid>
      <description>[PATCH v3 00/11] Introduce cmpxchg128() &amp;ndash; aka. the demise of cmpxchg_double() (Peter Zijlstra) https://lkml.kernel.org/r/20230515075659.118447996@infradead.org
This patchset introduces an alternative for cmpxchg_double(), namely cmpxchg128(), and replace the old usages of cmpxchg_double(). This is because Linus hates cmpxchg_double()[1].
[1] https://lore.kernel.org/all/Y2U3WdU61FvYlpUh@hirez.programming.kicks-ass.net/T/#u
[PATCH 0/6] Memory Mapping (VMA) protection using PKU - set 1 (Jeff Xu) https://lkml.kernel.org/r/20230515130553.2311248-1-jeffxu@chromium.org
[Invitation] Linux MM Alignment Session on Code Tagging on Wednesday (David Rientjes) https://lkml.kernel.org/r/CAE-26VDomF_pZybGjgCBJZuWusX0z3MTEJmkwtuQXx3PyrN6fw@mail.gmail.com
Google is hosting Linux MM alignment session.</description>
    </item>
    <item>
      <title>LKML News v6.4-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc2/</link>
      <pubDate>Tue, 09 May 2023 07:31:35 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc2/</guid>
      <description>[PATCH 0/2] Optimization of CMA allocation and reclaiming (Zhaoyang Huang) https://lkml.kernel.org/r/1683538383-19685-1-git-send-email-zhaoyang.huang@unisoc.com
This patchset avoids being OOMed when all free pages are composed of CMA.
[RFC PATCH 0/2] mm: Working Set Reporting (Yuanchu Xie) https://lkml.kernel.org/r/20230509185419.1088297-1-yuanchu@google.com
This RFC patch adds working set size reporting structure for each node and total, using MGLRU as its core, and extends virtio-balloon for letting the host get the information.
[PATCH] MAINTAINERS: repair pattern in DIALOG SEMICONDUCTOR DRIVERS (Lukas Bulwahn) https://lkml.</description>
    </item>
    <item>
      <title>DAMON Publications and Presentations</title>
      <link>https://sjp38.github.io/posts/en/damon_publications_talks/</link>
      <pubDate>Sat, 06 May 2023 12:17:00 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_publications_talks/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_publications_talks. This out-dated post will be removed soon.
Below is a list of publications and presentations that cover DAMON project.
This list is not exhaustive and is compiled to the best of our ability, as some publications or presentations may have been made without the knowledge of the DAMON maintainers. If you find a publication or announcement that should be added to this list, please let us know at sj@kernel.</description>
    </item>
    <item>
      <title>DAMON News List</title>
      <link>https://sjp38.github.io/posts/en/damon_news/</link>
      <pubDate>Sat, 06 May 2023 11:27:07 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_news/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_news. This out-dated post will be removed soon.
Below is a list of news around DAMON project.
This list is not exhaustive but just a DAMON maintainer&amp;rsquo;s collection of news. If you find a news that should be added to this list, please let us know at sj@kernel.org and/or damon@lists.linux.dev.
2024 2024-10-15: DAMON debugfs interface removal RFC patch has posted.
2024-10-10: Monthly PyPI downloads of DAMON user-space too, DAMO, doubled again after ten days.</description>
    </item>
    <item>
      <title>I will have a session for DAMON at the LSFMM 2023</title>
      <link>https://sjp38.github.io/posts/en/lsfmmbpf_2023_talk/</link>
      <pubDate>Thu, 04 May 2023 18:13:37 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lsfmmbpf_2023_talk/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2023. The title of the talks is &amp;ldquo;DAMON updates and future plans&amp;rdquo;.
https://events.linuxfoundation.org/lsfmm/program/schedule-at-a-glance/</description>
    </item>
    <item>
      <title>LKML News v6.4-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc1/</link>
      <pubDate>Tue, 25 Apr 2023 07:41:36 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.4-rc1/</guid>
      <description>[PATCH v2 0/2] Reduce lock contention related with large folio (Yin Fengwei) https://lkml.kernel.org/r/20230425084627.3573866-1-fengwei.yin@intel.com
Ryan found large anonymous folios exposes some lock contention unlike large page cache folios, because anonymous mapping is allocated/freed more frequently. This patchset mitigates the lock contention by avoid acquiring queue lock unnecessarily, and allowing batched large folio list adds to lru list.
[PATCH v2 0/3] fs: multigrain timestamps (Jeff Layton) https://lkml.kernel.org/r/20230424151104.175456-1-jlayton@kernel.org
This patchset makes file system to support not single-gran timestamp but multi-gran timestamps.</description>
    </item>
    <item>
      <title>LKML News v6.3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3/</link>
      <pubDate>Tue, 18 Apr 2023 07:35:18 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3/</guid>
      <description>[PATCH 00/33] Split ptdesc from struct page (Vishal Moola) https://lkml.kernel.org/r/20230417205048.15870-1-vishal.moola@gmail.com
To reduce the struct page overhead, which is about 1.5% of the whole system memory, people are working on to reduce some fileds in struct page. As one of the approach, this patchset prepares for splitting ptdesc from struct page.
[RFC PATCH v1 0/5] Introduce objects folding mechanism (Alexey Romanov) https://lkml.kernel.org/r/20230418062503.62121-1-avromanov@sberdevices.ru
This patchset adds a feature which allowing folding identical zsmalloc objects into single one.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc7/</link>
      <pubDate>Tue, 11 Apr 2023 07:41:47 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc7/</guid>
      <description>[PATCH v5] mm: oom: introduce cpuset oom (Gang Li) https://lkml.kernel.org/r/20230411134539.45046-1-ligang.bdlg@bytedance.com
This patch makes oomkiller to aware of numa nodes of processes that assigned via cpuset so that real memory pressure tirggeered process can be picked as victim of the pressure.
[LSF/MM/BPF TOPIC] Reducing zombie memcgs (T.J. Mercier) https://lkml.kernel.org/r/CABdmKX2M6koq4Q0Cmp_-=wbP0Qa190HdEGGaHfxNS05gAkUtPA@mail.gmail.com
Memcg lives in the kernel until the reference count drops to zero, even if it&amp;rsquo;s removed by userspace. This zombie-like memcg consumes system resource and makes kernel operations that get affected by the total number of memcg less efficient.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc6/</link>
      <pubDate>Tue, 04 Apr 2023 08:14:59 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc6/</guid>
      <description>[PATCH 0/6] Avoid the mmap lock for fault-around (Matthew Wilcox) https://lkml.kernel.org/r/20230404135850.3673404-1-willy@infradead.org
A patchset for gradually pushing the mmap lock down. No specific regression found, but also no special performance improvement measured.
[PATCH] memcg-v1: Enable setting memory min, low, high (Shaun Tancheff) https://lkml.kernel.org/r/20230405110107.127156-1-shaun.tancheff@gmail.com
For users who cannot update to memcg v2, this patch provides a way for memcg v1 to effectively apply memory pressure, which can be used for effectively throttle file I/O.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc5/</link>
      <pubDate>Tue, 28 Mar 2023 07:31:57 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc5/</guid>
      <description>[PATCH] LoongArch: Add kernel address sanitizer support (Qing Zhang) https://lkml.kernel.org/r/20230328111714.2056-1-zhangqing@loongson.cn
Loongarch has arch specific memory holes and mapping formula. This patch adds kasan support for Loongarch.
[PATCH v2 0/7] Split a folio to any lower order folios (Zi Yan) https://lkml.kernel.org/r/20230329011712.3242298-1-zi.yan@sent.com
Currently, split_huge_page() splits huge page to only order 0 pages. This patchset adds support of splitting a huge page to any lower order pages.
[PATCHv9 00/14] mm, x86/cc: Implement support for unaccepted memory (Kirill A.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc4/</link>
      <pubDate>Tue, 21 Mar 2023 06:48:19 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc4/</guid>
      <description>[PATCH 00/15] mm: move core MM initialization to mm/mm_init.c (Mike Rapoport) https://lkml.kernel.org/r/20230319220008.2138576-1-rppt@kernel.org
This patchset consolidates MM initialization code to mm/mm_init.c file for better maintainability.
[PATCH -next v6 0/2] Delay the initialization of zswap (Liu Shixin) https://lkml.kernel.org/r/20230322102006.780624-1-liushixin2@huawei.com
This patchset delays zswap initialization until it gets enabled to save about 18MB of memory, which is allocated during the initialization.
[PATCH V6 1/2] mm: compaction: move compaction sysctl to its own file (Minhao Chi) https://lkml.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2023</title>
      <link>https://sjp38.github.io/posts/en/ossummit_na_2023_talk/</link>
      <pubDate>Sat, 18 Mar 2023 09:34:33 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/ossummit_na_2023_talk/</guid>
      <description>I will present DAMON, DAMOS, and DAMO in Open Source Summit North America 2023. The title of the talk is &amp;ldquo;DAMON, DAMOS, and DAMO: Kernel Subsystems and User-Space Tools for Data Access-Aware System Analysis/Optimizations&amp;rdquo;.
https://sched.co/1K5HS</description>
    </item>
    <item>
      <title>LKML News v6.3-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc3/</link>
      <pubDate>Tue, 14 Mar 2023 07:42:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc3/</guid>
      <description>[LSF/MM/BPF TOPIC] SLOB+SLAB allocators removal and future SLUB improvements (Vlastimil Babka) https://lkml.kernel.org/r/4b9fc9c6-b48c-198f-5f80-811a44737e5f@suse.cz
Linux kernel has three objects allocators, namely SLOB, SLAB, and SLUB. Vlastimil and many developers have tried to make it only one single allocator. Deprecation of SLOB has made some progress so far. Vlastimil proposes an LSF/MM/BPF topic for discussing deprecation of SLAB and SLUB futur eimprovement.
[GIT PULL] hotfixes for 6.3-rc1 (Andrew Morton) https://lkml.kernel.org/r/20230314165437.a2d992731a970582fe36aaba@linux-foundation.org
Yet another mm subsystem hotfixes pull request has sent to Linus Torvalds.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc2/</link>
      <pubDate>Tue, 07 Mar 2023 07:40:16 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc2/</guid>
      <description>[Invitation] Linux MM Alignment Session on Wednesday (David Rientjes) https://lkml.kernel.org/r/CAE-26VAFJtSu5xEbzNUgPVn3W13-B1bGvvU8-+i-hkS4GtupCw@mail.gmail.com
David is hosting biweekly meetings for Linux memory management developments called Linux MM Alignment, and he is publicly inviting people to the meetings.
The next instance will be held on 10:00 PST, 2023-03-08, at https://meet.google.com/csb-wcds-xya
THP backed thread stacks (Mike Kravetz) https://lkml.kernel.org/r/20230306235730.GA31451@monkey
Mike found THP-always&amp;rsquo;s memory bloat issue due to THP usage for threads&#39; stacks. Mike feels it might make no sense to use THP for stacks even if the THP policy is &amp;lsquo;always&amp;rsquo;, and starting discussions on improvment of the situation.</description>
    </item>
    <item>
      <title>LKML News v6.3-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc1/</link>
      <pubDate>Tue, 21 Feb 2023 07:32:00 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.3-rc1/</guid>
      <description>[GIT PULL] MM updates for 6.3-rc1 (Andrew Morton) https://lkml.kernel.org/r/20230220135225.91b0f28344c01d5306c31230@linux-foundation.org
The mm updates pull request for v6.3-rc1 has posted by Andrew.
[GIT PULL] Compute Express Link (CXL) for 6.3 (Dan Williams) https://lkml.kernel.org/r/63f5a4e2277b1_c94229453@dwillia2-mobl3.amr.corp.intel.com.notmuch
A pull request for makincg CXL handling including CXL memory layout parsing/updating and events/errors reporting has posted for v6.3. Without this patchset, currently the works are dependents on platform-firmware.
[RFC v2 0/5] tmpfs: add the option to disable swap (Luis Chamberlain) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2/</link>
      <pubDate>Tue, 14 Feb 2023 07:02:05 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2/</guid>
      <description>[PATCH] mm/userfaultfd: Support operation on multiple VMAs (Muhammad Usama Anjum) https://lkml.kernel.org/r/20230213104323.1792839-1-usama.anjum@collabora.com
mwriteprotect_range() handle only single VMA, but there are usecases which need to handle multiple VMAs in a memory range of interest. This commit fixes the case.
[v2 PATCH 0/5] Introduce mempool pages bulk allocator and use it in dm-crypt (Yang Shi) https://lkml.kernel.org/r/20230214190221.1156876-1-shy828301@gmail.com
Noticeable overhead on disc encryption due to page allocations have found. The overhead was because the allocation logic in dm-crypt allocates one page in each pass of a loop.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc8/</link>
      <pubDate>Tue, 07 Feb 2023 06:32:31 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc8/</guid>
      <description>[LSF/MM/BPF TOPIC] sframe: An orc like stack unwinder for the kernel to get a user space stacktrace (Steven Rostedt) https://lkml.kernel.org/r/20230206103828.6efcb28f@rorschach.local.home
Steven Rostedt proposes yet another LSF/MM/BPF topic for using sframe section, which is introduced by binutils, for more efficient user space stack tracing.
[PATCH v4 00/14] Introduce Copy-On-Write to Page Table (Chih-En Lin) https://lkml.kernel.org/r/20230207035139.272707-1-shiyn.lin@gmail.com
Fourth version of the patchset making copy-on-write be used for page table, while it is currently only used for the mapped memory.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc7/</link>
      <pubDate>Tue, 31 Jan 2023 07:50:12 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc7/</guid>
      <description>[LSF/MM/BPF TOPIC] CXL Fabric Manager (FM) architecture (Viacheslav A.Dubeyko) https://lkml.kernel.org/r/7F001EAF-C512-436A-A9DD-E08730C91214@bytedance.com
A topic suggestion for LSF/MM/BPF. It suggests to discuss about Fabric Manager (FM) architecture, which requires configuration tool, daemon, and QEMU emulation of CXL hardware features.
[PATCH V2 0/3] sched/numa: Enhance vma scanning (Ragghavendra K T) https://lkml.kernel.org/r/cover.1675159422.git.raghavendra.kt@amd.com
A patchset for improving access scanning for NUMA balancing. This uses per-thread VMA scanning idea from Mel.
LSFMMBPF proposal [MM]: Lazy RCU memory reclaim (Joel Fernandes) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc6/</link>
      <pubDate>Tue, 24 Jan 2023 07:51:20 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc6/</guid>
      <description>[RFC PATCH 00/19] mm: Introduce a cgroup to limit the amount of locked and pinned memory (Alistair Popple) https://lkml.kernel.org/r/cover.f52b9eb2792bccb8a9ecd6bc95055705cfe2ae03.1674538665.git-series.apopple@nvidia.com
This RFC patchset introduces a cgroup limit like RLIMIT_MEMLOCKED but that for pinned pages.
[RFC PATCH 0/4] Fix excessive CPU usage during compaction (Mel Gorman) https://lkml.kernel.org/r/20230125134434.18017-1-mgorman@techsingularity.net
A patch for not ignoring fast_find_migrateblock() found pageblocks made compaction shows high CPU and stalls. It therefore once merged in mainline, than reverted, and again merged in mm-unstable.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc5/</link>
      <pubDate>Tue, 17 Jan 2023 07:37:29 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc5/</guid>
      <description>[RFC] memory pressure detection in VMs using PSI mechanism for dynamically inflating/deflating VM memory (Sudarshan Rajagopalan) https://lkml.kernel.org/r/DS0PR02MB90787835F5B9CB9771A20329C4C09@DS0PR02MB9078.namprd02.prod.outlook.com
Qualcomm&amp;rsquo;s Linux memory team asks upstream&amp;rsquo;s opinion about their userspace deamon approach for controlling VM memory size based on memory demands via monitoring PSI.
[PATCH v1 0/3] Introduce per NUMA node memory error statistics (Jiaqi Yan) https://lkml.kernel.org/r/20230116193902.1315236-1-jiaqiyan@google.com
On huge memory systems, memory error is inevitable, so detailed statistics of it helps administrators to operate systems more efficiently.</description>
    </item>
    <item>
      <title>DAMON-based System Optimization Guide</title>
      <link>https://sjp38.github.io/posts/en/damon_optimization_guide/</link>
      <pubDate>Sun, 15 Jan 2023 10:36:11 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_optimization_guide/</guid>
      <description>This document helps you estimating the amount of benefit that you could get from DAMON-based system optimizations, and describes how you could achieve it.
Check The Signs No optimization can provide same extent of benefit to every case. Therefore you should first guess how much improvements you could get using DAMON. If some of below conditions match your situation, you could consider using DAMON.
Low IPC and High Cache Miss Ratios.</description>
    </item>
    <item>
      <title>DAMON Evaluation</title>
      <link>https://sjp38.github.io/posts/en/damon_evaluation/</link>
      <pubDate>Sun, 15 Jan 2023 10:34:06 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_evaluation/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_evaluation. This out-dated post will be removed soon.
DAMON is lightweight. It increases system memory usage by 0.39% and slows target workloads down by 1.16%.
DAMON is accurate and useful for memory management optimizations. An experimental DAMON-based operation scheme for THP, namely &amp;rsquo;ethp&amp;rsquo;, removes 76.15% of THP memory overheads while preserving 51.25% of THP speedup. Another experimental DAMON-based &amp;lsquo;proactive reclamation&amp;rsquo; implementation, namely &amp;lsquo;prcl&amp;rsquo;, reduces 93.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc4/</link>
      <pubDate>Tue, 10 Jan 2023 07:34:41 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc4/</guid>
      <description>[PATCH 00/41] Per-VMA locks (Suren Baghdasaryan) https://lkml.kernel.org/r/20230109205336.3665937-1-surenb@google.com
For the mmap_lock scalability issue, yet another approach called per-VMA locks has posted.
[PATCH v2 0/2] docs/mm: start filling out new structure (Mike Rapoport) https://lkml.kernel.org/r/20230110152358.2641910-1-rppt@kernel.org
MM kernel documentation has restructured to be somewhat more like textbook that can better explaining overall concept and how it manage memory, but the content is empty. Mike starts filling the content.
LSFMMBPF proposal [General/MM]: SRCU: a case study in memory ordering (Joel Fernandes) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc3/</link>
      <pubDate>Tue, 03 Jan 2023 07:29:24 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc3/</guid>
      <description>[PATCH] zram: correctly handle all next_arg() cases (Sergey Senozhatsky) https://lkml.kernel.org/r/20230103030119.1496358-1-senozhatsky@chromium.org
Handle NULL val pointer case from zram&amp;rsquo;s arguments handling.
[RFC PATCH 00/25] Upstream kvx Linux port (Yann Sionneau) https://lkml.kernel.org/r/20230103164359.24347-1-ysionneau@kalray.eu
This patchset adds support of Kalray&amp;rsquo;s kvx family kv3-1 CPU architecture.
[PATCH 00/46] Based on latest mm-unstable (85b44c25cd1e). (James Houghton) https://lkml.kernel.org/r/20230105101844.1893104-1-jthoughton@google.com
This patchset introduces HugeTLB high-Granularity Mapping (HGM), which teaches HugeTLB how to map HugeTLB pages at high granularity like how THPs PTE-mapped.</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2022</title>
      <link>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2022/</link>
      <pubDate>Sat, 31 Dec 2022 13:48:12 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/en/my_opensource_commits_stat_2022/</guid>
      <description>As today is the last day of 2022, I checked some open source commits statistics using my simple and buggy script[1], and github.
Linux kernel statistics I ran my buggy script[1] to show some 2022 statistics for memory management subsystem and whole tree of Linux kernel as below.
Memory Management In 2022, 305 people participated in Linux kernel memory management subsystem development by making 81,631 lines of changes with 2,135 commits.</description>
    </item>
    <item>
      <title>Summary of DAMON Development in 2022</title>
      <link>https://sjp38.github.io/posts/en/damon_stat_2022/</link>
      <pubDate>Thu, 29 Dec 2022 19:35:00 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_stat_2022/</guid>
      <description>A summary of DAMON development in 2022 has posted: https://lore.kernel.org/damon/20221229171209.162356-1-sj@kernel.org/
2022 was a year of active and healthy DAMON development.
Seven new DAMON major features were delivered to users. Some of those were featured in articles and academic papers.
It was possible thanks to the DAMON community. The community has expanded with its own mailing list and an open bi-weekly chat series. 40 people contributed their great code to DAMON via making their 275 commits merged into the mainline.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc2/</link>
      <pubDate>Wed, 28 Dec 2022 07:59:10 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc2/</guid>
      <description>[PATCH -next v3 0/7] mm: convert page_idle/damon to use folios (Kefeng Wang) https://lkml.kernel.org/r/20221228113413.10329-1-wangkefeng.wang@huawei.com
Patchset for converting Idle Pages Tracking and DAMON to use Folios instead of Page where possible has posted.
[PATCH 1/1] mm: fix vma-&amp;gt;anon_name memory leak for anonymous shmem VMAs (Suren Baghdasaryan) https://lkml.kernel.org/r/20221228194249.170354-1-surenb@google.com
Shared anonymous pages VMA naming has a memory leak. This patch fixes the leak.
[QUESTION] about the maple tree and current status of mmap_lock scalability (Hyeonggon Yoo) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.2-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc1/</link>
      <pubDate>Tue, 13 Dec 2022 08:05:03 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.2-rc1/</guid>
      <description>memcg reclaim demotion wrt. isolation (Michal Hocko) https://lkml.kernel.org/r/Y5idFucjKVbjatqc@dhcp22.suse.cz
Currently pages allocated for demotion targets includes __GFP_KSWAPD_RECALIM, and therefore memcg triggered reclaim could result in reclaims of pages in different hierarchy. Michal suggests simple modification of it.
[GIT PULL] MM updates for 6.2-rc1 (Andrew Morton) (1+ msgs) (Andrew Morton) https://lkml.kernel.org/r/20221213142614.525a9240506119abc3cef6b6@linux-foundation.org
Andrew Morton sent the MM pull request for v6.2-rc1 to Linus Torvalds. It includes 28 DAMON patches for cleanup and DAMOS tried regions sysfs.</description>
    </item>
    <item>
      <title>LKML News v6.1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1/</link>
      <pubDate>Tue, 06 Dec 2022 07:12:28 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1/</guid>
      <description>[PATCH v3] [mm-unstable] mm: Fix memcg reclaim on memory tiered systems (Mina Almasry) https://lkml.kernel.org/r/20221206023406.3182800-1-almasrymina@google.com
There was a patch for enabling demotion via memory.reclaim memcg file. It made try_to_free_mem_cgroup_pages() behavior changed. As the changed behavior is somewhat the users of the caller didn&amp;rsquo;t expect, this patch fixes it.
[PATCHv8 00/14] mm, x86/cc: Implement support for unaccepted memory (Kirill A. Shutemov) https://lkml.kernel.org/r/20221207014933.8435-1-kirill.shutemov@linux.intel.com
Some confidential VM approaches like Intel TDX or AMD SEV-SNP requires the guests to accept memory that they will use before use.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc8/</link>
      <pubDate>Tue, 29 Nov 2022 08:00:17 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc8/</guid>
      <description>[PATCH 1/2] lockdep: allow instrumenting lockdep.c with KMSAN (Alexander Potapenko) https://lkml.kernel.org/r/20221128094541.2645890-1-glider@google.com
Lockdep and KMSAN are known to work together nowadays, though it could make kernel run slower. This patch fixes KMSAN&amp;rsquo;s false positives on wq_head-&amp;gt;lock-&amp;gt;dep_map.
[PATCH] mm/huge_memory: add TRANSPARENT_HUGEPAGE_NEVER for THP (ye xingchen) https://lkml.kernel.org/r/202211301651462590168@zte.com.cn
This patch adds a new kernel config called TRANSPARENT_HUGEPAGE_NEVER, which will set the value of /sys/kernel/mm/transparent_hugepage/enabled [never].
[RFC PATCH v2] mm: Add nodes= arg to memory.reclaim (Mina Almasry) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc7/</link>
      <pubDate>Tue, 22 Nov 2022 07:35:46 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc7/</guid>
      <description>[PATCH 00/12] Introduce CONFIG_SLUB_TINY and deprecate SLOB (Vlastimil Babka) https://lkml.kernel.org/r/20221121171202.22080-1-vbabka@suse.cz
Vlastimil has posted a mail[1] for a discussion about SLOB deprecation. As no one has objected at the idea so far, Vlastimil has sent a patchset for that.
[1] https://lore.kernel.org/all/b35c3f82-f67b-2103-7d82-7a7ba7521439@suse.cz/
[RFC PATCH v1 0/4] Introduce merge identical pages mechanism (Alexey Romanov) https://lkml.kernel.org/r/20221121190020.66548-1-avromanov@sberdevices.ru
This RFC patchset introduces a mechanism for merging identical compressed pages, which could be common in zram like use cases.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc6/</link>
      <pubDate>Tue, 15 Nov 2022 07:10:36 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc6/</guid>
      <description>[PATCH] mm: Make drop_caches keep reclaiming on all nodes (Jan Kara) https://lkml.kernel.org/r/20221115123255.12559-1-jack@suse.cz
drop_caches works in somewhat loop-until-no-progress manner. It could result in not so aggressive reclamation. This patch makes it to continue reclamation on other node until every node makes no progress.
[RFC][PATCH 0/4] cachestat: a new syscall for page cache state of files (Nha Pham) https://lkml.kernel.org/r/20221115182901.2755368-1-nphamcs@gmail.com
Users can know the cache state of files using mincore() system call, but it scales bad for large files.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc5/</link>
      <pubDate>Tue, 08 Nov 2022 07:15:10 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc5/</guid>
      <description>[PATCH v2] mm: anonymous shared memory naming (Pasha Tatashin) https://lkml.kernel.org/r/20221107184715.3950621-1-pasha.tatashin@soleen.com
Second version of the patch for allowing shared anonymous memory mapping naming has posted.
Deprecating and removing SLOB (Vlastimil Babka) https://lkml.kernel.org/r/b35c3f82-f67b-2103-7d82-7a7ba7521439@suse.cz
Vlastimil is describing his proposal for removing SLOB, mainly for the code maintenance overhead, and trying to continue discussions for that.
[PATCH 1/4] mm: introduce &amp;rsquo;encoded&amp;rsquo; page pointers with embedded extra bits (Linus Torvalds) https://lkml.kernel.org/r/20221109203051.1835763-1-torvalds@linux-foundation.org
Linus Torvalds has posted a patchset for a new type called struct encoded_page, which is for struct page pointers having extra flags in it.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc4/</link>
      <pubDate>Tue, 01 Nov 2022 07:55:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc4/</guid>
      <description>[PATCH -next] mm/page_reporting: change page_reporting_param_ops to static (Yang Yingliang) https://lkml.kernel.org/r/20221101070022.1930028-1-yangyingliang@huawei.com
This patch makes page_reporting_param_ops static, as it&amp;rsquo;s used in only the c file.
[RFC PATCH] mm: introduce accounting of page_owner via backtrace (Zhoyang Huang) https://lkml.kernel.org/r/1667390781-17515-1-git-send-email-zhaoyang.huang@unisoc.com
This RFC patchset accounts and sorts page_owner output via its backtrace for simplifying it.
[PATCH v6 0/5] THP Shrinker (Alexander Zhu) https://lkml.kernel.org/r/cover.1667454613.git.alexlzhu@fb.com
The patchset for THP shrinking, which aims to reduce memory waste due to the THP underutilization, has revised again to the sixth version.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc3/</link>
      <pubDate>Tue, 25 Oct 2022 06:54:56 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc3/</guid>
      <description>[PATCH] swap: add a limit for readahead page-cluster value (Kairu Song) https://lkml.kernel.org/r/20221023162533.81561-1-ryncsn@gmail.com
/proc/sys/vm/page-cluster could overflow because it has no upper limit. This patch set its upper-limit as 2**31, so that at most 2**31 pages could be read in at once.
[PATCH 0/1] Dead stores in maple-tree (Lukas Bulwahn) https://lkml.kernel.org/r/20221026120029.12555-1-lukas.bulwahn@gmail.com
This patch fixes some dead stores of maple tree that reported by clang analyzer.
[PATCH v6 00/21] TDX host kernel support (Kai Huang) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc2/</link>
      <pubDate>Tue, 18 Oct 2022 07:57:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc2/</guid>
      <description>[RFC PATCH] mm: Introduce new MADV_NOMOVABLE behavior (Baolin Wang) https://lkml.kernel.org/r/bc27af32b0418ed1138a1c3a41e46f54559025a5.1665991453.git.baolin.wang@linux.alibaba.com
This RFC patch introduces a new madvise() hint called MADV_NOMOVABLE for long-term pinning of memory.
[PATCH 0/4] Add MADV_COLLAPSE documentation (Zach O&amp;rsquo;Keefe) https://lkml.kernel.org/r/20221017175523.2048887-1-zokeefe@google.com
This patchset adds documentation of MADV_COLLAPSE, which is a new madvise() hint that merged in v6.1.
[PATCH v4 0/3] THP Shrinker (Alexander Zhu) https://lkml.kernel.org/r/cover.1666150565.git.alexlzhu@fb.com
Alexander posted the fourth version of THP shrinker, which aims to reduce the THP memory inefficiency due to the THP internal fragmentation.</description>
    </item>
    <item>
      <title>My 10th anniversary of the Linux kernel contribution</title>
      <link>https://sjp38.github.io/posts/en/linux_kernel_contribution_10th_anniversary/</link>
      <pubDate>Sun, 16 Oct 2022 09:09:55 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/linux_kernel_contribution_10th_anniversary/</guid>
      <description>Today is the 10th anniversary of my Linux kernel contribution. Including the tiny and trivial patch, I made 381 patches merged in the mainline during the 10 years.
$ git log --author SeongJae --reverse commit cf174b0ef52ad8184779e1da4132e2d9d17247e5 Author: SeongJae Park &amp;lt;sj38.park@gmail.com&amp;gt; Date: Tue Oct 16 16:47:50 2012 +0900 staging: csr: csr_framework_ext_types.h: fix coding style Fix coding style of csr_framework_ext_types.h Signed-off-by: SeongJae Park &amp;lt;sj38.park@gmail.com&amp;gt; Signed-off-by: Greg Kroah-Hartman &amp;lt;gregkh@linuxfoundation.org&amp;gt; [...] $ git log --author SeongJae --oneline | wc -l 381 I&amp;rsquo;m looking forward to the next 10 years.</description>
    </item>
    <item>
      <title>LKML News v6.1-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc1/</link>
      <pubDate>Tue, 04 Oct 2022 07:14:10 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.1-rc1/</guid>
      <description>[RFC UKL 00/10] Unikernel Linux (UKL) (Ali Raza) https://lkml.kernel.org/r/20221003222133.20948-1-aliraza@bu.edu
This RFC patchset introduces a research project called Unikernel Linux which integrates application specific optimization to the Linux kernel. It links an application directly with kernel and runs it in the supervisor mode.
[PATCH v6] mm: add zblock - new allocator for use via zpool API (Ananda) https://lkml.kernel.org/r/20221005053302.30387-1-a.badmaev@clicknet.pro
This patchset introduces a new allocator for zpool API. The author says it is better than zsmalloc in terms of worst execution time and therefore good at real-time usage.</description>
    </item>
    <item>
      <title>LKML News v6.0</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0/</link>
      <pubDate>Tue, 27 Sep 2022 08:35:53 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0/</guid>
      <description>[GIT PULL] hotfixes for 6.0[-rc8] (Andrew Morton) https://lkml.kernel.org/r/20220926123721.2a1edc734b4fc516a9a350b8@linux-foundation.org
Andrew&amp;rsquo;s mm hotfix patches pull request for Linux v6.0, or v6.0-rc8 has posted.
[RFC PATCH] mm: sort kmemleak object via backtrace (Zhaoyang Huang) https://lkml.kernel.org/r/1664264570-3716-1-git-send-email-zhaoyang.huang@unisoc.com
This RFC patch introduces a set of method to sort objects in kmemleak output by backtrace to make the report more easy to read.
[PATCH 0/3] THP Shrinker (Alexander Zhu) https://lkml.kernel.org/r/cover.1664347167.git.alexlzhu@fb.com
This patchset introduces a sysfs files for measuring THP utilization and a shrinker for splitting the under-utilized THPs.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc7/</link>
      <pubDate>Tue, 20 Sep 2022 06:59:44 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc7/</guid>
      <description>[RFC PATCH] mm: track bad page via kmemleak (Zhaoyang Huang) https://lkml.kernel.org/r/1663679468-16757-1-git-send-email-zhaoyang.huang@unisoc.com
This RFC patch makes bad pages to be tracked via kmemleak.
[PATCH v1 0/3] coding-style.rst: document BUG() and WARN() rules (David Hildenbrand) https://lkml.kernel.org/r/20220920122302.99195-1-david@redhat.com
There was a recent discussion on when to use BUG() and WARN() and the variants. This patch tries to make it clearly described in coding-style doc and checkpatch script.
[RFC 0/6] migrate_pages(): batch TLB flushing (Huang Ying) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc6/</link>
      <pubDate>Sun, 18 Sep 2022 08:35:46 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc6/</guid>
      <description>[PATCH mm-unstable v15 00/14] Multi-Gen LRU Framework (Yu Zhao) https://lkml.kernel.org/r/20220918080010.2920238-1-yuzhao@google.com
A new version of MGLRU patchset has posted. Among the changes in this new version, fix of long-tailed direct reclaim latency looks interesting.
Linux 6.0-rc6 (Linus Torvalds) https://lkml.kernel.org/r/CAHk-=wi=gtuSO8Yz8LDubkMk7TiMsZxpypt9S10jeZRkyaBFnA@mail.gmail.com
The sixth release candidate for Linux v6.0 has out. Maybe due to the LPC/OSS EU/Maintainers summit which all were held in last week, this release is quite small. Torvalds says it might mean that seventh release will be bigger than usual and therefore it might need one more week for v6.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc5/</link>
      <pubDate>Tue, 06 Sep 2022 07:48:25 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc5/</guid>
      <description>[LPC 2022] Kernel Memory Management Microconference - next Monday! (Vlastimil Babka) https://lkml.kernel.org/r/e918dd3c-aa71-c510-4a50-4f9882bca3e8@suse.cz
Vlastimil and Matthew are reminding about the kernel memory management microconference, which will be held as a part of the LPC this year, in Dublin.
[PATCH v6 00/44] Add KernelMemorySanitizer infrastructure (Alexander Potapenko) https://lkml.kernel.org/r/20220905122452.2258262-1-glider@google.com
Sixth iteration of the KMSAN infra patchset has posted.
[PATCH v3 0/2] Introduce CABA helper process tree (Pavel Tikhomirov) https://lkml.kernel.org/r/20220908140313.313020-1-ptikhomirov@virtuozzo.com
Current linux process tree looses the information in which subtree the child was originally born, after the children is died and therefore reparented.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc4/</link>
      <pubDate>Tue, 30 Aug 2022 08:15:04 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc4/</guid>
      <description>[RFC PATCH 00/28] per-VMA locks proposal (Suren Baghdasaryan) https://lkml.kernel.org/r/20220829212531.3184856-1-surenb@google.com
The VMA lock scalability issue is still there. This RFC patchset shows the proof of the concept for the per-VMA lock idea, which was discussed in LSF/MM this year, as part of the SPF discussion.
[RFC PATCH 00/30] Code tagging framework and applications (Suren Baghdasaryan) https://lkml.kernel.org/r/20220830214919.53220-1-surenb@google.com
This RFC patchset introduces code tagging framework which can identify a specific location in the source code when compile.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc3/</link>
      <pubDate>Tue, 23 Aug 2022 06:42:59 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc3/</guid>
      <description>[mm] 96db82a66d: will-it-scale.per_process_ops -95.3% regression (kernel test robot) https://lkml.kernel.org/r/YwIoiIYo4qsYBcgd@xsang-OptiPlex-9020
A big regression of mm multi-cpu scalability test (will-it-scale) has found by the kernel test robot. The commit 96db82a66d1db0e2966c02dc492e02eeb3a94a75 (&amp;ldquo;mm: align larger anonymous mappings on THP bundaries&amp;rdquo;) is pointed out as the suspect.
[PATCH v13 00/70] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20220822150128.1562046-1-Liam.Howlett@oracle.com
The thirteenth version of the maple tree patchset has posted after rebased on latest mm-unstable and fixed some bugs.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc2/</link>
      <pubDate>Tue, 16 Aug 2022 06:51:04 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc2/</guid>
      <description>[PATCH v14 00/14] Multi-Gen LRU Framework (Yu Zhao) https://lkml.kernel.org/r/20220815071332.627393-1-yuzhao@google.com
Fourteenth version of MGLRU patch has rebased on the latest mm-unstable and posted again. This may be merged in the mm tree.
folio_map (Matthew Wilcox) https://lkml.kernel.org/r/YvvdFrtiW33UOkGr@casper.infradead.org
Matthew explains his proposal on folio_map in detail and asks if others have better ideas.
[PATCH v3] mm: add thp_utilization metrics to debugfs (Alexander Zhu) https://lkml.kernel.org/r/20220818000112.2722201-1-alexlzhu@fb.com
This patch adds debugfs file for tracking how THP is utilized well.</description>
    </item>
    <item>
      <title>LKML News v6.0-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc1/</link>
      <pubDate>Tue, 02 Aug 2022 17:40:09 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v6.0-rc1/</guid>
      <description>[PATCH] mm: vmscan: fix extreme overreclaim and swap floods (Johannes Weiner) https://lkml.kernel.org/r/20220802162811.39216-1-hannes@cmpxchg.org
Johannes found proactive reclamation using memory.reclaim sometimes reclaim more pages than requested on specific cgroup use cases. This patch resolves the issue so that the proactive reclamation doesn&amp;rsquo;t over-reclaim pages.
[RFC PATCH 0/4] propose a auto-run mode for ksm (Xu Xin) https://lkml.kernel.org/r/20220803100306.1653382-1-xu.xin16@zte.con.cn
KSM operation management is quite manual and sometimes inefficient if not well managed. This patchset introduces auto-run mode that can operate KSM in a better way.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2022</title>
      <link>https://sjp38.github.io/posts/en/kernelsummit2022_talk/</link>
      <pubDate>Fri, 29 Jul 2022 21:02:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernelsummit2022_talk/</guid>
      <description>I will present current status and future plans for DAMON in KernelSummit&#39;22. The title of the talk is &amp;ldquo;Current Status and Future Plans of DAMON&amp;rdquo;.
https://lpc.events/event/16/contributions/1224/</description>
    </item>
    <item>
      <title>LKML News v5.19</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19/</link>
      <pubDate>Mon, 25 Jul 2022 16:40:01 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19/</guid>
      <description>[PATCH v4 0/3] mm/mprotect: Fix soft-dirty checks (Peter Xu) https://lkml.kernel.org/r/20220725142048.30450-1-peterx@redhat.com
Fourth version of the soft-dirty check fixes for mprotect has posted. This version polishes the commit message and adds tests.
[PATCH v2 1/2] mm/slub: enable debugging memory wasting of kmalloc (Feng Tang) https://lkml.kernel.org/r/20220725112025.22625-1-feng.tang@intel.com
As slab allocates memory in only power of 2 bytes size, memory can be wasted when slab allocation is requested for a large number of times for objects that sizes not aligned in power of two bytes.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc8/</link>
      <pubDate>Tue, 19 Jul 2022 07:26:27 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc8/</guid>
      <description>[RESEND PATCH v3] arm64: enable THP_SWAP for arm64 (Barry Song) https://lkml.kernel.org/r/20220718090050.2261-1-21cnbao@gmail.com
This patch enables THP_SWAP which can improve the swap performance for transparent hugepages on ARM64 architecture.
[PATCH v12 00/69] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20220720021727.17018-1-Liam.Howlett@oracle.com
Maple tree has already merged in the mm-unstable but a new bug has found, so the 12th version of the patchset has posted.
[PATCH v10 0/8] mm/demotion: Memory tiers and demotion (Aneesh Kumar K.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc7/</link>
      <pubDate>Tue, 12 Jul 2022 08:10:06 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc7/</guid>
      <description>[PATCH 0/4] add struct page and Direct I/O support to reserved memory (Li Chen) https://lkml.kernel.org/r/20220711122459.13773-1-me@linux.beauty
Only buffered I/O is available to reserved memory for ZONE_DEVICE and mhp. This patchset enables direct I/O to the memory for better throughput.
[PATCH -V4 RESEND 0/3] memory tiering: hot page selection (Huang Ying) https://lkml.kernel.org/r/20220713083954.34196-1-ying.huang@intel.com
This patchset implements a new hot page identification algorithm based on the latency between NUMA balancing page table scanning and hit page fault, so that it can be somewhat LFU algorithm instead of MRU algorithm.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc6/</link>
      <pubDate>Tue, 05 Jul 2022 07:30:37 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc6/</guid>
      <description>[PATCH v9 0/9] x86: Show in sysfs if a memory node is able to do encryption (Martin Fernandez) https://lkml.kernel.org/r/20220704135833.1496303-1-martin.fernandez@eclypsium.com
This patchset makes each memory descriptor node to show if it has the EFI_MEMORY_CPU_CRYPRO attribute.
[PATCH v3] arm64: enable THP_SWAP for arm64 (Barry Song) https://lkml.kernel.org/r/20220706072707.114376-1-21cnbao@gmail.com
THP_SWAP, which dealys the split of THP for swap, includes swap throughput and architecture independent, but enabled on x86_64 only. This patch enables it on arm64.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc5/</link>
      <pubDate>Tue, 28 Jun 2022 05:02:58 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc5/</guid>
      <description>[PATCH v3] docs: rename Documentation/vm to Documentation/mm (Mike Rapoport) https://lkml.kernel.org/r/20220627060026.180439-1-rppt@kernel.org
As the subject says, this commit renames the Documentation/vm directory to Documentation/mm.
[PATCH v6 0/4] KVM: mm: count KVM mmu usage in memory stats (Yosry Ahmed) https://lkml.kernel.org/r/20220628220938.3657876-1-yosryahmed@google.com
This patchset allows users account KVM mmu usages with NR_SECONDARY_PAGETABLE memory stat.
[RFC PATCH] mm/slub: enable debugging memory wasting of kmalloc (Feng Tang) https://lkml.kernel.org/r/20220630014715.73330-1-feng.tang@intel.com
As kmalloc allocates memory in power of 2 granularity, it could waste a lot of memory.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc4/</link>
      <pubDate>Tue, 21 Jun 2022 07:12:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc4/</guid>
      <description>[PATCH Part2 v6 00/49] Add AMD Secure Nested Paging (SEV-SNP) (Ashsh Kalra) https://lkml.kernel.org/r/cover.1655761627.git.ashish.kalra@amd.com
This is second part patchset of Secure Encrypted Paging (SEV-SNP) work, which focuses on the changes required in a host OS for the feature support.
[PATCH v7 00/12] mm/demotion: Memory tiers and demotion (Aneesh Kumar K.V) https://lkml.kernel.org/r/20220622082513.467538-1-aneesh.kumar@linux.ibm.com
This patchset improves memory tiers construction to be more explicit and flexible, and memory allocation for demotion to have no change.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc3/</link>
      <pubDate>Tue, 14 Jun 2022 07:06:16 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc3/</guid>
      <description>[PATCH 0/8] Extend DAMOS for Proactive LRU-lists Sorting (SeongJae Park) https://lkml.kernel.org/r/20220613192301.8817-1-sj@kernel.org
After the RFC, official patchset for DAMON-based LRU-lists sorting has posted. This immediately merged in the -mm tree.
[PATCH v12 00/14] Multi-Gen LRU Framework (Yu Zhao) https://lkml.kernel.org/r/20220614071650.206064-1-yuzhao@google.com
A new version of MGLRU has posted. Compared to the previous version, this version fixes a bug and nits, and contains new test results based on v5.19-rc1.
Maintainer&amp;rsquo;s / Kernel Summit 2022 CFP (Theodore Ts&amp;rsquo;o) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc2/</link>
      <pubDate>Tue, 07 Jun 2022 07:26:24 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc2/</guid>
      <description>[PATCH v3 0/6] introduce mirrored memory support for arm64 (Wupeng Ma) https://lkml.kernel.org/r/20220607093805.1354256-1-mawupeng1@huawei.com
This patchset adds memory mirroring support, which relies on UEFI and used to separate memory into two separate channels, to arm64.
[PATCH] mm: mempolicy: N:M interleave policy for tiered memory nodes (Johannes Weiner) https://lkml.kernel.org/r/20220607171949.85796-1-hannes@cmpxchg.org
Current pages NUMA-interleaving policy is 1:1 mapping, 1 for CPU node, 1 for remote note. As more types of tiered memory systems having CPU-less memory nodes are coming, this patchset introduces an N:M interleave policy, which N pages are allocated from the top-tier node while M pages are allocated from low-tier nodes.</description>
    </item>
    <item>
      <title>LKML News v5.19-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc1/</link>
      <pubDate>Tue, 24 May 2022 07:22:30 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.19-rc1/</guid>
      <description>[PATCH] arm64: enable THP_SWAP for arm64 (Barry Song) https://lkml.kernel.org/r/20220524071403.128644-1-21cnbao@gmail.com
This patch enables THP_SWAP, which can help swap performance on systems having fast swap storages, for arm64.
[CFP LPC 2022] Kernel Memory Management Microconference (Vlastimil Babka) https://lkml.kernel.org/r/d24e9ac9-0903-3c15-c446-2962f44a360f@suse.cz
This year, LPC will have kernel memory management microconference. It will supplement the LSF/MM and lead by Matthew Wilcox and Vlastimil Babka.
[PATCH v2] arm64: enable THP_SWAP for arm64 (Barry Song) https://lkml.kernel.org/r/20220527100644.293717-1-21cnbao@gmail.com
Second version of the THP_SWAP enablement for arm64 has posted.</description>
    </item>
    <item>
      <title>LKML News v5.18</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18/</link>
      <pubDate>Tue, 17 May 2022 07:09:37 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18/</guid>
      <description>[RFC] Add swappiness argument to memory.reclaim (Yosry Ahmed) https://lkml.kernel.org/r/CAJD7tkbDpyoODveCsnaqBBMZEkDvshXJmNdbk51yKSNgD7aGdg@mail.gmail.com
Yosry is proposing to add swappiness argument to memory.reclaim cgroup file to provide a way to enforce user policy on a stateless per-reclaim basis.
[PATCH v11 00/14] Multi-Gen LRU Framework (Yu Zhao) https://lkml.kernel.org/r/20220518014632.922072-1-yuzhao@google.com
The eleventh version of the patchset for MGLRU has posted. Maybe this has revised based on the comments from LSFMM.
[PATCH] memcg: provide reclaim stats via &amp;lsquo;memory.reclaim&amp;rsquo; (Vaibhav Jain) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc7/</link>
      <pubDate>Wed, 11 May 2022 06:20:47 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc7/</guid>
      <description>[PATCH v3 0/6] mm: introduce shrinker debugfs interface (Roman Gushchin) https://lkml.kernel.org/r/20220509183820.573666-1-roman.gushchin@linux.dev
This patchset introduces a descent debugfs interface for debugging the shrinker mechanism.
[PATCH v3 0/3] Fix CONT-PTE/PMD size hugetlb issue when unmapping or migrating (Baolin Wang) https://lkml.kernel.org/r/cover.1652147571.git.baolin.wang@linux.alibaba.com
For PTE-cont or PMD-cont size hugetlb pages, migration or unmapping of poisoned hugetlb pages which are using ptep_clear_flush() and set_pte_at() can cause data consistency issue. This patchset tries to fix the issue.</description>
    </item>
    <item>
      <title>My paper introducing DAMON and related works has accepted to appear in the HPDC 2022</title>
      <link>https://sjp38.github.io/posts/en/hpdc2022_talk/</link>
      <pubDate>Wed, 04 May 2022 07:12:26 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/hpdc2022_talk/</guid>
      <description>My paper introducing DAMON and related works for making Linux a more data access-aware operating system has been accepted to be presented by the HPDC&#39;22. The title of the paper is &amp;ldquo;DAOS: Data Access-aware Operating System&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc6/</link>
      <pubDate>Tue, 03 May 2022 09:14:23 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc6/</guid>
      <description>Memory allocation on speculative fastpaths (Paul E. McKenney) https://lkml.kernel.org/r/20220503155913.GA1187610@paulmck-ThinkPad-P17-Gen-1
There was a discussion about allocating memory inside RCU read critical section with GFP_KERNEL during LSFMM. Paul is summing up his points about it in this mail.
[PATCH] mm,doc: Add new documentation structure (Matthew Wilcox) https://lkml.kernel.org/r/20220503063032.3680308-1-willy@infradead.org
There was a session for MM documentation in the LSFMM. Matthew is restructuring the Documentation files to be more similar to Mel Gorman&amp;rsquo;s &amp;ldquo;Understanding the Linux Virtual Memory Manager&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc5/</link>
      <pubDate>Tue, 26 Apr 2022 06:38:29 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc5/</guid>
      <description>[PATCH v5 0/4] memcg: introduce per-memcg proactive reclaim (Yosry Ahmed) https://lkml.kernel.org/r/20220425190040.2475377-1-yosryahmed@google.com
The fifth version of the patchset for adding per-memch proactive reclamation trigger interface.
mmotm 2022-04-25-17-59 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220426005932.848CBC385A4@smtp.kernel.org
The mmotm has updated. It has rebased on 5.18-rc4, added 62 new patches, modified 8 patches, and dropped 19 patches. In total, 334 patches in the queue.
[PATCH -V2 0/3] memory tiering: hot page selection (Huang Ying) https://lkml.kernel.org/r/20220426085105.60822-1-ying.huang@intel.com
This patchset adds hot pages selection to the tiered memory promotion mechanism for better performance.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc4/</link>
      <pubDate>Wed, 20 Apr 2022 08:40:25 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc4/</guid>
      <description>LSF/MM/BPF 2022: Running BOF (Matthew Wilcox) https://lkml.kernel.org/r/Yl7TUDtLcrhXcp1g@casper.infradead.org
Matthew is proposing a running BOF, which would do discussions while running after a breakfast.
mmotm 2022-04-20-17-12 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220421001235.5F4E0C385A0@smtp.kernel.org
-mm tree has updated. It&amp;rsquo;s rebased on 5.18-rc3, added 69 patches modified 126 patches, and dropped 35 patches. In total, 291 patches in the queue.
[PATCH v2] mm: make minimum slab alignment a runtime property (Peter Collingbourne) https://lkml.kernel.org/r/20220421211549.3884453-1-pcc@google.com
This makes slab alignment a runtime property and only align to 16 if KASAN is enabled at runtime.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc3/</link>
      <pubDate>Tue, 12 Apr 2022 06:42:16 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc3/</guid>
      <description>Re: [PATCH v10 00/14] Multi-Gen LRU Framework (Andrew Morton) https://lore.kernel.org/linux-mm/20220411191559.a844c7140faeba2e68d842b7@linux-foundation.org/
Andrew Morton&amp;rsquo;s overall answer to MGLRU patchset. He would merge the latest MGLRU in -mm and -next, but would request broader update to the code.
mmotm 2022-04-12-21-05 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220413040610.06AAAC385A4@smtp.kernel.org
A snapshot of -mm has updated. It added 79 new patches, modified 24 patches, and dropped 10 patches. In total, 257 patches in the queue.
[PATCH v2 0/5] mm: demotion: Introduce new node state N_DEMOTION_TARGETS (Jagdish Gediya) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc2/</link>
      <pubDate>Tue, 05 Apr 2022 07:45:57 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc2/</guid>
      <description>[PATCH v7 00/70] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20220404143501.2016403-1-Liam.Howlett@oracle.com
The seventh version of the Maple tree patchset has posted. Liam is explicitly asking Andrew to merge it in -mm.
LSF/MM/BPF: 2022: Call for Proposals VIRTUAL OPTION (Josef Bacik) https://lore.kernel.org/linux-mm/YksmQSfuIx%2FOiNA8@localhost.localdomain/
CFP for virtual attendee of LSF/MM/BPF has posted. The virtual instance of LSF/MM/BPF will be hosted on Zoom.
mmotm 2022-04-04-17-10 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220405001100.410E3C2BBE4@smtp.kernel.org
The mmotm snapshot has updated. It&amp;rsquo;s rebased on v5.</description>
    </item>
    <item>
      <title>LKML News v5.18-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc1/</link>
      <pubDate>Tue, 22 Mar 2022 06:59:56 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.18-rc1/</guid>
      <description>[LSF/MM TOPIC] Improving OOM debugging (Ken Overstreet) https://lkml.kernel.org/r/20220322005101.actefn6nttzeo2qr@moria.home.lan
Ken proposes an LSF/MM slot for discussing OOM debugging situation improvement with two ideas from his side.
incoming (Andrew Morton) https://lkml.kernel.org/r/20220322143803.04a5e59a07e48284f196a2f9@linux-foundation.org
Andrew Morton has sent 227 patches to Linus Torvalds, as the first batch of the pull requests for v5.18. It includes DAMON patches including pid hiding and its sysfs interface, and merged.
[PATCH 0/2] mm: madvise: return exact bytes advised with process_madvise under error (Charan Teja Kalla) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.17</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17/</link>
      <pubDate>Tue, 15 Mar 2022 07:02:08 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17/</guid>
      <description>mmotm 2022-03-14-22-42 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220315054352.5B187C340E8@smtp.kernel.org
The -mm tree is updated. It is rebased on 5.17-rc8, added 20 new patches, modified 10 patches, and dropped 2 patches. In total, 475 patches in the queue.
[LSF/MM TOPIC] Better handling of negative dentries (Mattew Wilcox) https://lkml.kernel.org/r/YjDvRPuxPN0GsxLB@casper.infradead.org
There could be millions of negative dentries on a system having large memory and no memory pressure, because the number of negative dentries is constrained only by memory size.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc8/</link>
      <pubDate>Mon, 07 Mar 2022 08:27:55 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc8/</guid>
      <description>mmotm 2022-03-06-20-33 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220307043435.251DBC340E9@smtp.kernel.org
The -mm tree has updated. It&amp;rsquo;s based on v5.17-rc6, added 19 patches, modified 6 patches, and dropped 19 patches. In totla, 428 patches in the queue.
[PATCH v3] mm: add ztree - new allocator for use via zpool API (Ananda) https://lkml.kernel.org/r/20220307142724.14519-1-a.badmaev@clicknet.pro
Third version of ztree, which is intended to be used for storing compressed objects per ztree block. Comparing to the previous version, compiler warnings have fixed.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc7/</link>
      <pubDate>Tue, 01 Mar 2022 07:11:16 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc7/</guid>
      <description>[PATCH/RESEND] mm: add ztree - new allocator for use via zpool API (Ananda) https://lkml.kernel.org/r/20220228110546.151513-1-a.badmaev@clicknet.pro
Ztree is another zpool backend that superior with regard to the worst execution time.
mmotm 2022-02-28-14-45 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220228224600.44415C340EE@smtp.kernel.org
mmotm has updated. It&amp;rsquo;s rebased on 5.17-rc6, added 56 new patches, modified 85 patches, and dropped 55 patches. In total, 378 patches are in the queue.
[PATCH -V14 0/3] NUMA balancing: optimize memory placement for memory tiering system (Huang Ying) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc6/</link>
      <pubDate>Tue, 22 Feb 2022 07:25:14 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc6/</guid>
      <description>[PATCH -V13 0/3] NUMA balancing: optimize memory placement for memory tiering system (Huang Ying) https://lkml.kernel.org/r/20220221084529.1052339-1-ying.huang@intel.com
The AutoNUMA patchset for tiered memory system has revised again.
[LSF/MM/BPF TOPIC] page table reclaim (David Hildenbrand) https://lkml.kernel.org/r/7b908208-02f8-6fde-4dfc-13d5e00310a6@redhat.com
Some workloads allocates a lot of page tables. As page tables are unmovable and unreclaimable, this can contribute to memory pressure. David is proposing making it reclaimable and suggesting discussion in LSF/MM/BPF summit for the idea.
[RFC PATCH 00/47] Address Space Isolation for KVM (Junaid Shahid) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc5/</link>
      <pubDate>Tue, 15 Feb 2022 07:06:23 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc5/</guid>
      <description>[PATCH v3 0/3] Add hugetlb MADV_DONTNEED support (Mike Kravetz) https://lkml.kernel.org/r/20220215002348.128823-1-mike.kravetz@oracle.com
MADV_DONTNEED can be used for hugetlb but currently prohibits it with a simple check. This commit removes the check to enable MADV_DONENEED for hugetlb.
mmotm 2022-02-14-17-46 uploaded (Andrew Morton) https://lkml.kernel.org/r/20220215014633.9CD9CC340E9@smtp.kernel.org
mmotm has updated. It&amp;rsquo;s rebased on 5.17-rc4, added 20 new patches, modified 295 patches, and dropped 10 patches. In total, 316 patches in the queue.
[PATCH v6 00/71] Introducing the Maple Tree (Liam Howlett) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc4/</link>
      <pubDate>Tue, 08 Feb 2022 07:23:14 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc4/</guid>
      <description>[PATCH v2 1/2] arm64: avoid flushing icache multiple times on contiguous HugeTLB (Muchun Song) https://lkml.kernel.org/r/20220208054632.66534-1-songmuchun@bytedance.com
When a contiguous HugeTLB page is mapped, set_pte_at() is called CONT_PTES / CONT_PMDS times. Because the first flushing covers subsequent flushes, this is unnecessary overhead, so this patchset avoids it.
[PATCH v7 00/12] Multigenerational LRU Framework (Yu Zhao) https://lkml.kernel.org/r/20220208081902.3550911-1-yuzhao@google.com
Seventh version of the MGLRU patchset, which aims to reduce performance overhead and improve eviction target pages selection of reclamation logic is posted.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc3/</link>
      <pubDate>Tue, 01 Feb 2022 07:26:46 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc3/</guid>
      <description>[PATCH] selftests: kselftest framework: Provide &amp;ldquo;finished&amp;rdquo; helper (Kees Cook) https://lkml.kernel.org/r/20220201013717.2464392-1-keescook@chromium.org
Users who want to use ksft_exit() need to figure out the internals of kselftest. This commit adds a helper function for that purpose, namely, ksft_finished().
[LSF/MM/BPF TOPIC] Handling of VMAs (Liam Howlett) https://lkml.kernel.org/r/20220201150521.owa5axfsmpdvc7uo@revolver
Liam is pointing out the VMAs are quite complicately managed with their cache, tree, linked list, and even reverse mapping. As it now shows its limit with the lock contention and complexity of the handling code, he wants to propose a simpler new way for their management.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc2/</link>
      <pubDate>Tue, 25 Jan 2022 07:32:08 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc2/</guid>
      <description>[PATCH 0/7] Allocate module text and data separately (Christophe Leroy) https://lkml.kernel.org/r/cover.1643015752.git.christophe.leroy@csgroup.eu
Powerpc book3s/32 can set execute permission in 256 MiB segments granularity instead of page granularity. This patchset therefore allow module data be allocated in vmalloc rea instead of module area.
[PATCH 0/4] mm/memcg: Address PREEMPT_RT problems instead of disabling it. (Sebastian Adrzej Siewior) https://lkml.kernel.org/r/20220125164337.2071854-1-bigeasy@linutronix.de
This patchset enables MEMCG for PREEMPT_RT instead of disabling it.
[LSF/MM/BPF TOPIC] Folios (Matthew Wilcox) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.17-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc1/</link>
      <pubDate>Tue, 11 Jan 2022 07:08:23 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.17-rc1/</guid>
      <description>[PATCH 0/3] usable memory range fixes (arm64/fdt/efi) (Frank van der Linden) https://lkml.kernel.org/r/20220110210809.3528-1-fllinden@amazon.com
This patchset fixes the usable memory range behavior when both DT and EFI are given.
[PATCHv2 0/7] Implement support for unaccepted memory (Kirill A. Shutemov) https://lkml.kernel.org/r/20220111113314.27173-1-kirill.shutemov@linux.intel.com
UEFI spec 2.9 introduces a concept of memory acceptance. It requires virtual machine platforms such as Intel TDX or AMD SEV-SNP to accept memory before use it. This patchset makes Linux kernel to support it, and therefore be able to reduce VM booting time by optimizing the acceptance.</description>
    </item>
    <item>
      <title>LKML News v5.16</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16/</link>
      <pubDate>Tue, 04 Jan 2022 07:09:18 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16/</guid>
      <description>[PATCH v4 00/32] Separate struct slab from struct page (Vlastimil Babka) https://lkml.kernel.org/r/20220104001046.12263-1-vbabka@suse.cz
The work for seperating struct slab from struct page for making the struct page simpler is updated to fourth version. As the patchset was in -next tree for a while, Vlastimil would sent a pull request of this to Linus.
[PATCH 0000/2297] [ANNOUNCE, RFC] &amp;ldquo;Fast Kernel Headers&amp;rdquo; Tree -v1: Eliminate the Linux kernel&amp;rsquo;s &amp;ldquo;Dependency Hell&amp;rdquo; (Ingo Molnar) https://lkml.kernel.org/r/YdIfz+LMewetSaEB@gmail.com</description>
    </item>
    <item>
      <title>Linux Memory Management Subsystem Development Statistics in 2021 (Short)</title>
      <link>https://sjp38.github.io/posts/en/linux-mm-dev-stat-2021-short/</link>
      <pubDate>Fri, 31 Dec 2021 07:52:00 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/linux-mm-dev-stat-2021-short/</guid>
      <description>Whenever reading the kernel development statistics report for each release from LWN, I wanted to scope it down to specific subsystems. For that, I wrote a script.
Belows are the top 10 kernel hackers who contributed to the memory management subsystem of Linux kernel, sorted by number of commits and changed (added, deleted, or modified) lines, respectively.
$ ./authors.py ~/linux --file mm/ --since 2021-01-01 --author_identity name --sortby lines --max_nr_authors 10 1.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc8/</link>
      <pubDate>Wed, 29 Dec 2021 07:36:53 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc8/</guid>
      <description>[RFC v2] mm: introduce page pin owner (Minchan Kim) https://lkml.kernel.org/r/20211228175904.3739751-1-minchan@kernel.org
Second version of the RFC for page pinning owner feature, which can be useful for tracking down who pins which page and therefore why contiguous pages allocation or migration fails.
mmotm 2021-12-29-20-07 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211230040740.SbquJAFf5%akpm@linux-foundation.org
MM of the moment has updated. It&amp;rsquo;s rebased on v5.16-rc7, adds 32 new patches to the queue, drops 11 patches from the queue, and modifies 100 existing patches.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc7/</link>
      <pubDate>Tue, 21 Dec 2021 09:01:07 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc7/</guid>
      <description>[PATCH v5 00/16] Optimize list lru memory consumption (Muchun Song) https://lkml.kernel.org/r/20211220085649.8196-1-songmuchun@bytedance.com
Fifth version of the patchset for reducing lru memory consumption. This version fixes a sleep-in-atomic-context bug which is reported by the kernel test robot, applies some requests from Johannes, and collect Acked-by from Johannes.
[PATCH 0/2] Add a new scheme to support demotion on tiered memory system (Baolin Wang) https://lkml.kernel.org/r/cover.1640077468.git.baolin.wang@linux.alibaba.com
This patchset makes DAMOS supports demotion of memory regions.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc6/</link>
      <pubDate>Tue, 14 Dec 2021 07:30:38 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc6/</guid>
      <description>[PATCH v4 00/17] Optimize list lru memory consumption (Muchun Song) https://lkml.kernel.org/r/20211213165342.74704-1-songmuchun@bytedance.com
Muchun found 6GB of memory was consumed by kmalloc-32 slab cache on a machine having 952 super blocks. That was due to list_lru_one allocation from memcg_nr_cache_ids. This patchset aims to fix the issue. According to a simple test, this reduces memory consumption under a situation from 24GiB to 4GiB.
mmotm 2021-12-13-21-28 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211214052904.VfRYfitp0%akpm@linux-foundation.org
Andrew Morton uploaded new mmotm.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc5/</link>
      <pubDate>Tue, 07 Dec 2021 07:25:52 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc5/</guid>
      <description>[RFC] mm: introduce page pinner (Minchan Kim) https://lkml.kernel.org/r/20211206184730.858850-1-minchan@kernel.org
Page migrations commonly fails from temporal referenc count elevation. Worse yet, it&amp;rsquo;s hard to know which kernel subsystem has made the temporal reference count increase. To tracking it available, Minchan is proposing a new feature called page pinner. It tracks page put operations for pages that migration failed.
mmotm 2021-12-06-22-21 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211207062141.pMgbjXQXy%akpm@linux-foundation.org
mmotm based on v5.16-rc4 has uploaded. 14 new patches are added, 3 existign patches modified, and 1 existing patch has dropped from the queue.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc4/</link>
      <pubDate>Tue, 30 Nov 2021 07:20:32 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc4/</guid>
      <description>mmotm 2021-11-29-18-58 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211130025839.ZhVoO1W_7%akpm@linux-foundation.org
mmotm has updated. It&amp;rsquo;s based on v5.16-rc3, adds 52 new patches, modifies 18 existing patches, and drops 2 patches. In total, 224 patches in the queue.
[QUESTION] “place pages to tail” regress memory read bandwidth about 10% under our test cases (liupeng) https://lkml.kernel.org/r/3c6349ddd9a34732a251467b7fa4fe93@huawei.com
Liu Peng found David&amp;rsquo;s patch 7fef431be9c9(mm/page_alloc: place pages to tail in __free_pages_core()) incurring performance regression, and asking some suggestions.
[RFC PATCH] mm: count zram read/write into PSI_IO_WAIT (Huangzhaoyang) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc3/</link>
      <pubDate>Wed, 24 Nov 2021 07:20:51 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc3/</guid>
      <description>[PATCH 0/3] page table check (Pasha Tatashin) https://lkml.kernel.org/r/20211123214814.3756047-1-pasha.tatashin@soleen.com
Due to reference count of struct page handling issue, some memory were leak from a process and moved in another process. This commit avoids such type of bugs by checking page table at the time of entrieds insertion.
[PATCH 0/5] *** Transparent Page Placement for Tiered-Memory *** (Hasan Al Maruf) https://lkml.kernel.org/r/20211124163608.33015-1-hasanalmaruf@fb.com
This patchset augment AutoNUMA mechanism to promote pages from slow tier nodes to toptier nodes.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc2/</link>
      <pubDate>Tue, 16 Nov 2021 07:09:53 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc2/</guid>
      <description>[PATCH -V10 0/6] NUMA balancing: optimize memory placement for memory tiering system (Huang Ying) https://lkml.kernel.org/r/20211116013522.140575-1-ying.huang@intel.com
This patchset optimizes the pages placement on tiered memory systems using DRAM and PMEM.
[RFC 0/3] page table check (Pasha Tatashin) https://lkml.kernel.org/r/20211116220038.116484-1-pasha.tatashin@soleen.com
Pasha found broken page ref issue in 4.14 kernel. The page was leaked into another process, so they were able to find the issue by examining the page tables. This patchset tries to prevent this kind of memory corruption issues by checking the page tables in time of inserting entries into user page tables.</description>
    </item>
    <item>
      <title>LKML News v5.16-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc1/</link>
      <pubDate>Tue, 02 Nov 2021 07:10:11 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.16-rc1/</guid>
      <description>[PATCH v4 0/3] mm: add new syscall set_mempolicy_home_node (Aneesh Kumar K.V) https://lkml.kernel.org/r/20211101050206.549050-1-aneesh.kumar@linux.ibm.com
This patchset introduces a new syscall that can be used to set a home node for the MPOL_BIND and MPOL_PREFERRED_MANY.
[RFC PATCH 0/3] Improve the migration stats (Baolin Wang) https://lkml.kernel.org/r/cover.1635936218.git.baolin.wang@linux.alibaba.com
This RFC patchset fixes the migration stats that broken here and there.
incoming (Andrew Morton) https://lkml.kernel.org/r/20211105133408.cccbb98b71a77d5e8430aba1@linux-foundation.org
The first pull request for v5.16 from Andrew Morton. Patches for DAMON subsystem including DAMOS, physical address space support, and DAMON-based proactive reclamation are also included here.</description>
    </item>
    <item>
      <title>Papers I read in 2021 Q4</title>
      <link>https://sjp38.github.io/posts/en/paper_reading_2021_q4/</link>
      <pubDate>Sat, 30 Oct 2021 09:16:33 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/paper_reading_2021_q4/</guid>
      <description>record interesting papers that I (partially) read</description>
    </item>
    <item>
      <title>LKML News v5.15</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15/</link>
      <pubDate>Wed, 27 Oct 2021 07:09:11 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15/</guid>
      <description>Dynamically allocated memory descriptors (Matthew Wilcox) https://lkml.kernel.org/r/YXcLqcFhDq3uUwIj@casper.infradead.org
In this mail, Matthew explains his idea on making struct page only two words and how it could work with buddy allocator freelists.
[RFC] mm: Disable NUMA_BALANCING_DEFAULT_ENABLED and TRANSPARENT_HUGEPAGE on PREEMPT_RT (Sebastian Andrzej Siewior) https://lkml.kernel.org/r/20211026165100.ahz5bkx44lrrw5pt@linutronix.de
Mel told RT patchset could incur spikes on NUMA machines when NUMA_BALANCING and THP are turned on. Sebastian request comments on disabling those on RT enabled kernel by default, but still trying to find a good test for that.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc7/</link>
      <pubDate>Tue, 19 Oct 2021 07:39:33 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc7/</guid>
      <description>incoming (Andrew Morton) https://lkml.kernel.org/r/20211018151438.f2246e2656c041b6753a8bdd@linux-foundation.org
19 mm subsystem fix patches have sent to Linus Torvalds.
[PATCH v11 1/3] mm: rearrange madvise code to allow for reuse (Suren Baghdasaryan) https://lkml.kernel.org/r/20211019215511.3771969-1-surenb@google.com
This commit refactor some madvise code for vma updates so that those can be reused by prctl.
mmotm 2021-10-20-20-40 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211021034104.F6VxKBQcG%akpm@linux-foundation.org
Andrew updated mmotm. It&amp;rsquo;s based on 5.15-rc6, adds 74 new patches modifies 29 existing patches, and drops 22 patches. In total, 366 patches in the queue.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc6/</link>
      <pubDate>Mon, 11 Oct 2021 10:21:51 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc6/</guid>
      <description>mmotm 2021-10-10-18-19 uploaded (Andrew Morton) https://lkml.kernel.org/r/20211011012001.mSbkDke0y%akpm@linux-foundation.org
Update of mmotm. 33 new patches added and 7 old patches dropped. 285 patches in total.
[PATCH v2 0/2] Introduce simple pidfd to task helper (Christian Brauner) https://lkml.kernel.org/r/20211011133245.1703103-1-brauner@kernel.org
This patchset adds a simple helper to make code clean without duplications.
[PATCH v0.7 0/5] sched,mm,x86/uaccess: implement User Managed Concurrency Groups (Peter Oskolkov) https://lkml.kernel.org/r/20211012232522.714898-1-posk@google.com
This patchset implements the kernel parts for user-space m:n threading. If this is finalized and merged, user-space applications will be able to do the scheduling of their threads on their own.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc5/</link>
      <pubDate>Tue, 05 Oct 2021 07:39:10 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc5/</guid>
      <description>[PATCH 0/2] Introduce simple pidfd to task helper (Christian Brauner) https://lkml.kernel.org/r/20211004125050.1153693-1-christian.brauner@ubuntu.com
This patchset adds a pidfd handling wrapper for removing duplications.
[PATCH 00/62] Separate struct slab from struct page (Matthew Wilcox) https://lkml.kernel.org/r/20211004134650.4031813-1-willy@infradead.org
This huge patchset separates struct slab from struct page to make struct page simple and therefore easier to handle.
[PATCH v3 00/66] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20211005012959.1110504-1-Liam.Howlett@oracle.com
This patchset introduces Maple tree, which is intended to replace the rb tree for vmas, to improve the scalability.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc4/</link>
      <pubDate>Tue, 28 Sep 2021 07:31:38 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc4/</guid>
      <description>[RFC PATCH 0/8] mm/madvise: support process_madvise(MADV_DONTNEED) (Nadav Amit) https://lkml.kernel.org/r/20210926161259.238054-1-namit@vmware.com
This patchset makes process_madvise() to support MADV_DONTNEED hint.
mmotm 2021-09-28-19-05 uploaded (Andrew Morton) https://lkml.kernel.org/r/20210929020604.DyNimbxao%akpm@linux-foundation.org
The mm-of-the-moment snapshot has been updated. 13 drop, 45 add, 37 modified. 184 patches in the broken/ in total.
[PATCH 1/2] memcg: flush stats only if updated (Shakeel Butt) https://lkml.kernel.org/r/20210930044711.2892660-1-shakeelb@google.com
This patchset makes memcg stats updated only when needed, as it is currently flushed on every refault and reclaim iteration.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc3/</link>
      <pubDate>Mon, 20 Sep 2021 07:48:48 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc3/</guid>
      <description>[RFC PATCH] Introducing lockless cache built on top of slab allocator (Hyeonggon Yoo) https://lkml.kernel.org/r/20210919164239.49905-1-42.hyeyoo@gmail.com
The block layer now has a lockless cache, which increased its IOPS. This RFC generalizes it so that it can be used in some other area, such as NAPI.
[PATCH v5 0/3] virtio-mem: disallow mapping virtio-mem memory via /dev/mem (David Hildenbrand) https://lkml.kernel.org/r/20210920142856.17758-1-david@redhat.com
This patchset makes a basic infrastructure to exclude some physical memory regions that marked as IORESOURCE_SYSTEM_RAM from /dev/mem access, even though they are not marked as IORESOURCE_BUSY.</description>
    </item>
    <item>
      <title>LKML News v5.15-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc2/</link>
      <pubDate>Tue, 14 Sep 2021 07:07:26 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc2/</guid>
      <description>[PATCH v1] vmpressure: wake up work only when there is registration event (wangyong) https://lkml.kernel.org/r/1631548441-2784-1-git-send-email-wang.yong12@zte.com.cn
Currently, vmpressure works are awaken even though there are no vmpressure callbacks. This commit avoids such unnecessary wakeup by counting the number of registered events and skip waking up works if the number is zero.
[PATCH v3 00/76] Optimize list lru memory consumption (Muchun Song) https://lkml.kernel.org/r/20210914072938.6440-1-songmuchun@bytedance.com
Muchun found kmalloc-32 for list_lru_one allocation consuming 6 GiB of memory on their server.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2021</title>
      <link>https://sjp38.github.io/posts/en/kernelsummit2021_talk/</link>
      <pubDate>Wed, 08 Sep 2021 07:12:32 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernelsummit2021_talk/</guid>
      <description>I will present DAMON/DAMOS in KernelSummit&#39;21. The title of the talk is &amp;ldquo;Writing a fine-grained access pattern-oriented lightweight kernel module using DAMON/DAMOS in 10 minutes&amp;rdquo;.
https://linuxplumbersconf.org/event/11/contributions/984/</description>
    </item>
    <item>
      <title>LKML News v5.15-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc1/</link>
      <pubDate>Wed, 01 Sep 2021 07:28:13 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.15-rc1/</guid>
      <description>[RFC PATCH] mm/oom: detect and kill task which has allocation forbidden by cpuset limit (Feng Tang) https://lkml.kernel.org/r/1630399085-70431-1-git-send-email-feng.tang@intel.com
Docker needs to allocate memory in non-movable zones for creation of an OS (e.g., GFP_HIGHUSER). However, if it is binded to a cpuset which has only movable zone, the allocation fails and OOM storm attacks other innocent processes. This patch detects the case and kill only the allocation failing process.
Folios: Can we resolve this please?</description>
    </item>
    <item>
      <title>LKML News v5.14</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14/</link>
      <pubDate>Tue, 24 Aug 2021 07:29:50 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14/</guid>
      <description>[GIT PULL] Memory folios for v5.15 (Matthew Wilcox) https://lkml.kernel.org/r/YSPwmNNuuQhXNToQ@casper.infradead.org
Matthew Wilcox sent a pull request for his page folio works to Linus Torvalds. Linus Torvalds replied he wants this to work in reverse. That is, calling head pages as normal pages but calling tail pages something other, as the term, page, is more common and de-facto standard in the industry.
mmotm 2021-08-23-16-42 uploaded (Andrew Morton) https://lkml.kernel.org/r/20210823234329.H9WD-du1K%akpm@linux-foundation.org
MMOTM is rebased on v5.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc7/</link>
      <pubDate>Tue, 17 Aug 2021 07:07:40 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc7/</guid>
      <description>[PATCH v2 0/3] virtio-mem: disallow mapping virtio-mem memory via /dev/mem (David Hildenbrand) https://lkml.kernel.org/r/20210816142505.28359-1-david@redhat.com
Once the virtio-mem driver is plugging/unplugging memory of virtual machines, accessing the memory region via /dev/mem from the user space makes no sense. To avoid such insane use case, this patchset adds a basic infrastructure to exclude some physical memory regions completely from /dev/mem.
[PATCH v2 00/61] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20210817154651.1570984-1-Liam.Howlett@oracle.com
This patchset introduces a new data structure called maple tree, which intended to replace the rbtree for vm_area_struct.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc6/</link>
      <pubDate>Tue, 10 Aug 2021 07:23:37 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc6/</guid>
      <description>[PATCH v9 1/2] mm: introduce process_mrelease system call (Suren Baghdasaryan) https://lkml.kernel.org/r/20210809185259.405936-1-surenb@google.com
9th version of the patchset which introducing a new system call for releasing memory of a process in a speedy manner.
mmotm 2021-08-09-19-18 uploaded (Andrew Morton) https://lkml.kernel.org/r/20210810021934.XcpwGUEMn%akpm@linux-foundation.org
-mm tree updated.
[PATCH 0/5] x86: Impplement support for unaccepted memory (Kirill A. Shutemov) https://lkml.kernel.org/r/20210810062626.1012-1-kirill.shutemov@linux.intel.com
Some platforms like Intel TDX or AMD SEV-SNP require memory to be accepted before it can be used by the guest.</description>
    </item>
    <item>
      <title>OSDI 2021 papers summary</title>
      <link>https://sjp38.github.io/posts/en/osdi2021_papers_review/</link>
      <pubDate>Sat, 07 Aug 2021 09:27:55 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/osdi2021_papers_review/</guid>
      <description>This post is for recording some notes from a few OSDI&#39;21 papers that I got fun.
DMon: Efficient Detection and Correction of Data Locality Problems Using Selective Profiling https://www.usenix.org/system/files/osdi21-khan.pdf
DMon is a compiler-based data locality optimization system. The approach is quite similar to that of daphicx or similar things. It injects data access profiling code in the target program, build and run it with some workload, collect the profiling code-generated results, analyze the profile results to figure out what kind of optimization can provide some benefit to the program, injects the optimization code in the program, built it again, and deploy the version to the production.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc5/</link>
      <pubDate>Tue, 03 Aug 2021 07:09:02 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc5/</guid>
      <description>[PATCH 0/3] mm: optimize thp for reclaim and migration (Yu Zhao) https://lkml.kernel.org/r/20210731063938.1391602-1-yuzhao@google.com
This patchset drops subpages of THPs which contain only zero contents when splitting those, to reduce memory pressure overheads due to THP internal fragmentations.
[PATCH v4 1/2] mm: introduce process_mrelease system call (Suren Baghdasaryan) https://lkml.kernel.org/r/20210802221431.2251210-1-surenb@google.com
This patchset introduces a new system call, namely process_mrelease(). It can be used to quickly release memory of a process.
[PATCH v7 0/5] Introduce multi-preference mempolicy (Feng Tang) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc4/</link>
      <pubDate>Thu, 29 Jul 2021 17:48:11 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc4/</guid>
      <description>mmotm 2021-07-28-18-24 uploaded (Andrew Morton) https://lkml.kernel.org/r/20210729012524.S8-WP%akpm@linux-foundation.org
Andrew Morton is updating the -mm tree.
incoming (Andrew Morton) https://lkml.kernel.org/r/20210729145259.24681c326dc3ed18194cf9e5@linux-foundation.org
Seven fixup patches from Andrew Morton.
[PATCH 0/3] mm: optimize thp for reclaim and migration (Yu Zhao) https://lkml.kernel.org/r/20210731063938.1391602-1-yuzhao@google.com
This patch optimizes THP split for reclaim or migration by dropping subpages that contain only zeroes.
Linux 5.14-rc4 (Linus Torvalds) https://lkml.kernel.org/r/CAHk-=whv0g5YqoRXc8oxqJX3r+GP1dN3ia_Qg_V6UTjhi8vg8w@mail.gmail.com
After one week, entirely normal rc4 is released. 5.14 is not so far now.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc3/</link>
      <pubDate>Tue, 20 Jul 2021 07:24:31 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc3/</guid>
      <description>[PATCH 0/7] Free user PTE page table pages (Qi Zheng) https://lkml.kernel.org/r/20210718043034.76431-1-zhengqi.arch@bytedance.com
This patchset frees user PTE page table pages when all PTE entries are empty, to reduce the memory overhead due to page tables.
[PATCH v15 00/17] Folio support in block + iomap layers (Matthew Wilcox) https://lkml.kernel.org/r/20210719184001.1750630-1-willy@infradead.org
Seems memory folios patchset is now merged in -mm tree and -next tree. This patchset further updates iomap to use folios.
Runtime Memory Validation in Intel-TDX and AMD-SNP (Joerg Roedel) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc2/</link>
      <pubDate>Tue, 13 Jul 2021 07:17:44 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc2/</guid>
      <description>[PATCH v6 0/6] Introduce multi-preference mempolicy (Feng Tang) https://lkml.kernel.org/r/1626077374-81682-1-git-send-email-feng.tang@intel.com
Six version of the patchset that allows applications to set multiple preferred memory policy.
[PATCH v1] madvise.2: Document MADV_POPULATE_READ and MADV_POPULATE_WRITE (David Hildenbrand) https://lkml.kernel.org/r/20210712083917.16361-1-david@redhat.com
This patch documents the new madvise() options, MADV_POPULATE_(READ|WRITE).
Request for folios (David Howells) https://lkml.kernel.org/r/3398985.1626104609@warthog.procyon.org.uk
David is working for improving local filesystem&amp;rsquo;s caching and network filesystem support library. He thinks the folio work would make his work easier, though it also makes some of his work challenging.</description>
    </item>
    <item>
      <title>LKML News v5.14-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc1/</link>
      <pubDate>Tue, 29 Jun 2021 07:11:39 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.14-rc1/</guid>
      <description>incoming (Andrew Morton) https://lkml.kernel.org/r/20210628193256.008961950a714730751c1423@linux-foundation.org
The first pull request from Andrew Morton for the v5.14 merge window.
[PATCH v3 00/18] Folio conversion of memcg (Matthew Wilcox) https://lkml.kernel.org/r/20210630040034.1155892-1-willy@infradead.org
This patchset was a part of the memory folio patchset, but has split out to individual patchset.
incoming (Andrew Morton) https://lkml.kernel.org/r/20210630184624.9ca1937310b0dd5ce66b30e7@linux-foundation.org
Rest of the -mm tree, which dependent on things in -next. Andrew will trickle that over next week, before the merge window is closed.</description>
    </item>
    <item>
      <title>LKML News v5.13</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13/</link>
      <pubDate>Tue, 22 Jun 2021 07:02:23 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13/</guid>
      <description>[PATCH v4] mm: introduce reference pages (Peter Collingbourne) https://lkml.kernel.org/r/20210619092002.1791322-1-pcc@google.com
This patch introduces a new syscall, refpage_create(). This system creates a file descriptor which can be mmap-ed using mmap(), which will be similar to anonymous mapping but the memory will be backed by a reference page instead of the zero page.
[PATCH 0/3] mm/page_reporting: Make page reporting work on arm64 with 64KB page size (Gavin Shan) https://lkml.kernel.org/r/20210621051152.305224-1-gshan@redhat.com
This patchset makes the page reporting to work on ARM with more realistic threshold, which is 2MB instead of 512MB, when the system&amp;rsquo;s page size is 64KB.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc7/</link>
      <pubDate>Tue, 15 Jun 2021 06:58:49 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc7/</guid>
      <description>[PATCH v11 00/33] Memory folios (&amp;ldquo;Matthew Wilcox (Oracle)&amp;rdquo;) (33+ msgs) (Matthew Wilcox) https://lkml.kernel.org/r/20210614201435.1379188-1-willy@infradead.org
Eleventh version of the memory folios patchset. It helps easier handling of head and tails of compounded pages.
[LSF/MM TOPIC] Tiered memory accounting and management (Tim Chen) https://lkml.kernel.org/r/475cbc62-a430-2c60-34cc-72ea8baebf2c@linux.intel.com
Another LSF/MM topic for discussion of tiered memory accounting and management, including the DRAM to PMEM demotion and PMEM to DRAM promotion.
[REMINDER] LSF/MM/BPF: 2021: Call for Proposals (Josef Bacik) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc6/</link>
      <pubDate>Tue, 08 Jun 2021 06:53:48 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc6/</guid>
      <description>[RFC PATCH V3] zram:calculate available memory when zram is used (wangyong) https://lkml.kernel.org/r/1623080354-21453-1-git-send-email-yongw.pur@gmail.com
This patchset adds a new entry called SwapAvailable in /proc/meminfo. It shows the memory savings when swap devices are used. If zram is used, it considers the compression ratio.
[PATCH v3 0/9] Remove DISCONTIGMEM memory model (Mike Rapoport) https://lkml.kernel.org/r/20210608091316.3622-1-rppt@kernel.org
This patchset removes DISCONTIGMEM memory model, finally. There are no more architectures requiring it.
[LSF/MM/BPF TOPIC] Consolidating representations of the physical memory (Mike Rapoport) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc5/</link>
      <pubDate>Tue, 01 Jun 2021 07:05:24 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc5/</guid>
      <description>[PATCH V3 0/2] mm: compaction: proactive compaction trigger by user (Charan Teja Reddy) https://lkml.kernel.org/r/cover.1622454385.git.charante@codeaurora.org
This patchset introduces /proc/sys/vm/compaction_proactiveness file, which can trigger proactive compaction by writing it.
[RFC PATCH] mm/page_reporting: Adjust threshold according to MAX_ORDER (Gavin Shan) https://lkml.kernel.org/r/20210601033319.100737-1-gshan@redhat.com
The free pages reporting feature doesn&amp;rsquo;t allow discontiguous pages that smaller than PAGE_REPORTING_MIN_ORDER. Current setting of it makes the feature to never work on specific environment, because it is set to be equal to pageblock_order.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc4/</link>
      <pubDate>Tue, 25 May 2021 07:24:13 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc4/</guid>
      <description>[PATCH 0/2] arm64: remove page granularity limitation from KFENCE (Jisheng Zhang) https://lkml.kernel.org/r/20210524172433.015b3b6b@xhacker.debian
This patchset removes the page granularity mapping requirement for the KFENCE&amp;rsquo;s linear map, to achieve both arm64&amp;rsquo;s block level and contiguous mapping for non-KFENCE pool pages, by allocating the KFENCE pool before paging_init().
[PATCH v2 00/21] Optimize list lru memory consumption (Muchun Song) https://lkml.kernel.org/r/20210527062148.9361-1-songmuchun@bytedance.com
Muchun found kmalloc-32 slab cache consuming huge memory due to cgroups initialization, and posting this patchset which expected to fix the problem fundamentally.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc3/</link>
      <pubDate>Tue, 18 May 2021 07:11:13 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc3/</guid>
      <description>RCU tests for Maple Tree (Paul E. McKenney) https://lkml.kernel.org/r/20210517154048.GA2013926@paulmck-ThinkPad-P17-Gen-1
Paul is asking if there are rcu-related tests for Maple Tree other than rcu_loop() and rcu_val() that Paul needs to looking for.
[PATCH v20 0/7] mm: introduce memfd_secret system call to create &amp;ldquo;secret&amp;rdquo; memory areas (Mike Rapoport) https://lkml.kernel.org/r/20210518072034.31572-1-rppt@kernel.org
The 20th version of the patchset that implements &amp;lsquo;secret&amp;rsquo; mappings backed by a file descriptor.
[PATCH v3 00/14] Multigenerational LRU Framework (Yu Zhao) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc2/</link>
      <pubDate>Tue, 11 May 2021 21:11:05 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc2/</guid>
      <description>[RESEND] LSF/MM/BPF: 2021: Call for Proposals (Josef Bacik) https://lkml.kernel.org/r/60997079.1c69fb81.77f3f.a045@mx.google.com/
CFG for LSF/MM/BPF 2021 posted. It will be held from 2021-12-06 to 2021-12-08 in Palm Springs, California. As of now, it is supposed to be an in-person conference!
[LSF/MM/BPF TOPIC] Memory folios (Matthew Wilcox) https://lkml.kernel.org/r/YJlzwcADaxO/JHRE@casper.infradead.org
Matthew expects the memory folios patchset will be merged soon, but he wants to discuss about it in the LSFMM, if there are something to discuss more.</description>
    </item>
    <item>
      <title>LKML News v5.13-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc1/</link>
      <pubDate>Tue, 27 Apr 2021 07:01:06 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.13-rc1/</guid>
      <description>[PATCH v3] mm/compaction:let proactive compaction order configurable (chukaiping) https://lkml.kernel.org/r/1619313662-30356-1-git-send-email-chukaiping@baidu.com
Third version of the patchset making compaction order lower than 9. Machines using 1GB hugetlbfs huge pages could be an example user of this feature.
[PATCH v4] mm/compaction: let proactive compaction order configurable (chukaiping) https://lkml.kernel.org/r/1619576901-9531-1-git-send-email-chukaiping@baidu.com
Fourth version of the patchset posted quite quickly.
[PATCH 00/94] Introducing the Maple Tree (Liam Howlett) https://lkml.kernel.org/r/20210428153542.2814175-1-Liam.Howlett@Oracle.com
This huge patchset introduces an RCU-safe range based B-tree called maple tree.</description>
    </item>
    <item>
      <title>LKML News v5.12</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12/</link>
      <pubDate>Tue, 20 Apr 2021 07:19:28 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12/</guid>
      <description>[PATCH -next v3 1/2] mm/debug_vm_pgtable: Move {pmd/pud}_huge_tests out of CONFIG_TRANSPARENT_HUGEPAGE (Liu Shixin) The functions are not THP dependent in real, but made dependent. This patch moves it out.
[PATCH v10 0/7] Make alloc_contig_range handle Hugetlb pages (Oscar Salvador) https://lkml.kernel.org/r/20210419075413.1064-1-osalvador@suse.de
The 10th version of the patchset which allows Hugetlb pages allocated via alloc_contig_range(), dynamically.
[PATCH v2 0/5] mm/madvise: introduce MADV_POPULATE_(READ|WRITE) to prefault page tables (David Hildenbrand) https://lkml.kernel.org/r/20210419135443.12822-1-david@redhat.com
This is the second version of the patchset implementing MADV_POPULATE_(READ|WRITE) for madvise() system call.</description>
    </item>
    <item>
      <title>LKML NEws v5.12-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc8/</link>
      <pubDate>Tue, 13 Apr 2021 07:37:08 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc8/</guid>
      <description>[PATCH v2 0/5] mm/memcg: Reduce kmemcache memory accounting overhead (Waiman Long) https://lkml.kernel.org/r/20210412225503.15119-1-longman@redhat.com
Recently introduced new slab memory controller eliminates the need for separate kmemcaches for each memory cgroup and therefore reduce kernel memory usage. However, it also increases memory accouning overhead in kmem cache alloc and free functions. This patchset reduces unnecessary local_irq_save() and local_irq_restore() sequences in the code path as much as possible for minimal overhead.
[PATCH v7 0/7] Make alloc_contig_range handle Hugetlb pages (Oscar Salvador) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.12-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc7/</link>
      <pubDate>Tue, 06 Apr 2021 07:17:14 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc7/</guid>
      <description>[RFC PATCH v1 00/11] Manage the top tier memory in a tiered memory (Tim Chen) https://lkml.kernel.org/r/cover.1617642417.git.tim.c.chen@linux.intel.com
There are two patchsets for better handling of tiered-memory. [PATCH 00/10] [v7] Migrate Pages in lieu of discard (https://lore.kernel.org/linux-mm/20210401183216.443C4443@viggo.jf.intel.com/) makes cold pages to be placed in PMEM instead of DRAM, and [PATCH 0/6] [RFC v6] NUMA balancing: optimize memory placement for memory tiering system (https://lore.kernel.org/linux-mm/20210311081821.138467-1-ying.huang@intel.com/) allows hot pages to be placed in DRAM instead of PMEM.</description>
    </item>
    <item>
      <title>LKML News v5.12-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc6/</link>
      <pubDate>Tue, 30 Mar 2021 07:35:52 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc6/</guid>
      <description>[RFC] NUMA balancing: reduce TLB flush via delaying mapping on hint page fault (Huang Ying) https://lkml.kernel.org/r/20210329062651.2487905-1-ying.huang@intel.com
NUMA balancing shots down TLBs on all CPUs that recently run hint-faulted process during the migration of the hint-faulted page to appropriate node. This commit delays the TLB shootdown to reduce the overhead. With pmbench, it reduced TLB shooting IPI up to 99%, though it didn&amp;rsquo;t makde visible benchmark score changes.
[RFC v2 00/43] PKRAM: Preserved-over-Kexec RAM (Anthony Yznaga) https://lkml.</description>
    </item>
    <item>
      <title>Starting perfbook translation again</title>
      <link>https://sjp38.github.io/posts/en/perfbook_translate_restart/</link>
      <pubDate>Sat, 27 Mar 2021 13:01:07 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/perfbook_translate_restart/</guid>
      <description>I stopped translation of perfbook since 2019-09-27. Because the 2nd edition of perfbook is released[0], I&amp;rsquo;m starting the translation again[1], from the scratch. The old versions are still available, of course[2].
[0] https://mirrors.edge.kernel.org/.../perfbook/perfbook.html
[1] https://github.com/sjp38/perfbook-ko_KR/commit/1c44ef30179b
[2] https://github.com/sjp38/perfbook-ko_KR-pdf</description>
    </item>
    <item>
      <title>LKML News v5.12-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc5/</link>
      <pubDate>Tue, 23 Mar 2021 07:11:57 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc5/</guid>
      <description>[PATCH 0/3 v5] Introduce a bulk order-0 page allocator (Mel Gorman) https://lkml.kernel.org/r/20210322091845.16437-1-mgorman@techsingularity.net
Fifth version of the order-0 pages bulk allocator. In this version, the API users are dropped from the patchset, because the callers are not confirmed if they prefer an array or list interface.
[PATCH] mm: cma: add trace events for CMA alloc perf testing (Georgi Djakov) https://lkml.kernel.org/r/20210324160740.15901-1-georgi.djakov@linaro.org
This patch adds tracepoints for CMA and page migrations. Those aims to be used for performance debugging of CMA.</description>
    </item>
    <item>
      <title>LKML News v5.12-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc4/</link>
      <pubDate>Wed, 17 Mar 2021 07:11:15 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc4/</guid>
      <description>File THP and HWPoison (Matthew Wilcox) https://lkml.kernel.org/r/20210316140947.GA3420@casper.infradead.org
THP is not splitted for file-backed pages when it got memory failure. This mail describes the problem in detail and propose some change to mitigate it.
Issue with kfence and kmemleak (Luis Henriques) https://lkml.kernel.org/r/YFDf6iKH1p/jGnM0@suse.de
Luis found a problem when kmemleak and kfence is used together. A fix is made by Marco.
[PATCH v4 00/13] Introduced multi-preference mempolicy (Feng Tang) https://lkml.kernel.org/r/1615952410-36895-1-git-send-email-feng.tang@intel.com
This is the fourth version of the patchset.</description>
    </item>
    <item>
      <title>LKML News v5.12-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc3/</link>
      <pubDate>Sun, 07 Mar 2021 11:19:27 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc3/</guid>
      <description>[PATCH 00/10] [v6] Migrate Pages in lieu of discard (Dave Hansen) https://lkml.kernel.org/r/20210304235949.7922C1C3@viggo.jf.intel.com
When the system configured with both DRAM and persistent memory, current kernel starts reclamation when DRAM fulls even though there are some space in persistent memory. And from some point, all page allocation is done on the persistent memory only, even though DRAM has some free slots now.
This patchset mitigates the problem by migrating pages that about to be reclaimed to persistent memory.</description>
    </item>
    <item>
      <title>LKML News v5.12-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc2/</link>
      <pubDate>Tue, 02 Mar 2021 07:07:51 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc2/</guid>
      <description>[PATCH] mm: introduce clear all vm events counters (Pintu Kumar) https://lkml.kernel.org/r/1614595766-7640-1-git-send-email-pintu@codeaurora.org
Because the vmstat data is only cumulated, users should calculate the diff manually or just reboot. This commit adds a procfs file that can be used to clear all vmstat counters.
[PATCH 0/5] Introduce a bulk order-0 page allocator with two in-tree users (Mel Gorman) https://lkml.kernel.org/r/20210301161200.18852-1-mgorman@techsingularity.net
This patchset introduces a bulk order-0 page allocator. It also makes the sunrpc and the network page pool to use that.</description>
    </item>
    <item>
      <title>An example of DAMON usage for profiling</title>
      <link>https://sjp38.github.io/posts/en/damon_profile_callstack_example/</link>
      <pubDate>Thu, 25 Feb 2021 07:20:30 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_profile_callstack_example/</guid>
      <description>I realized I didn&amp;rsquo;t introduce a good, intuitive example use case of DAMON[0] for profiling so far, though DAMON is not for only profiling. One straightforward and realistic usage of DAMON as a profiling tool would be recording the monitoring results with callstack and visualize those by timeline together.
For example, below shows that visualization for a realistic workload, namely &amp;lsquo;fft&amp;rsquo; in SPLASH-2X benchmark suite. The upper-most graph shows how DAMON-detected working set size of the workload (y-axis) changes by time (x-axis).</description>
    </item>
    <item>
      <title>LKML News v5.12-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc1/</link>
      <pubDate>Tue, 16 Feb 2021 07:17:38 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.12-rc1/</guid>
      <description>[PATCH v11 00/14] prohibit pinning pages in ZONE_MOVABLE (Pavel Tatashin) https://lkml.kernel.org/r/20210215161349.246722-1-pasha.tatashin@soleen.com
The 11th version of the patchset making ZONE_MOVABLE really movable. In this version, a build error on i386 is fixed.
[RFC PATCH] mm, oom: introduce vm.sacrifice_hugepage_on_oom https://lkml.kernel.org/r/20210216030713.79101-1-eiichi.tsukata@nutanix.com
This RFC patch introduces yet another sysctl knob called vm.sacrifice_hugepage_on_oom. When it is turned on, it tries to free available hugepages before waking oom-killer up.
[RFC] Hugepage collapse in process context (David Rientjes) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.11</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11/</link>
      <pubDate>Tue, 09 Feb 2021 07:18:37 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11/</guid>
      <description>[PATCH v2] mm: cma: support sysfs (Minchan Kim) https://lkml.kernel.org/r/20210208180142.2765456-1-minchan@kernel.org
This patch introduces sysfs interface for CMA that shows stats including number of CMA allocation attempts and failures.
[PATCH v10 00/14] prohibit pinning pages in ZONE_MOVABLE (Pavel Tatashin) https://lkml.kernel.org/r/20210211162427.618913-1-pasha.tatashin@soleen.com
The 10th version of the patchset making ZONE_MOVABLE really movable.
Linux 5.11 (Linus Torvalds) https://lkml.kernel.org/r/CAHk-=wg8LpRi9+P2_V+ehJ2_EoJifNh2QmVf47aLXfkCd-1UAQ@mail.gmail.com
Nothing strange happened last week, so Linus released v5.11 as expected. The number of changes from the rc7 to this release is actually even smaller than average.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc7/</link>
      <pubDate>Tue, 02 Feb 2021 07:19:21 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc7/</guid>
      <description>[RFC 00/20] TLB batching consolidation and enhancements (Nadav Amit) https://lkml.kernel.org/r/20210131001132.3368247-1-namit@vmware.com
This patchset prepares more aggressive TLB flushing batching by consolidating a few TLB batching methods.
[PATCH v9 00/14] prohibit pinning pages in ZONE_MOVABLE (Pavel Tatashin) https://lkml.kernel.org/r/20210201153827.444374-1-pasha.tatashin@soleen.com
This patchset makes ZONE_MOVABLE really movable by prohibiting pinning of pages in the zone.
Augmented Page Reclaim (Yu Zhao) https://lkml.kernel.org/r/YBkT6175GmMWBvw3@google.com
This mail shares a part of decade researh/experimentation in memory overcommit at Google. The author wants to start submitting patch based on responses.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc6/</link>
      <pubDate>Tue, 26 Jan 2021 07:14:55 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc6/</guid>
      <description>[RFC][PATCH 00/13] [v5] Migrate Pages in lieu of discard (Dave Hansen) https://lkml.kernel.org/r/20210126003411.2AC51464@viggo.jf.intel.com
If a system has a small DRAM and a large persistent memory (PMEM), reclamation starts when DRAM fills up, and newer allocations will done on PMEM. This patchset makes the reclaim logic to migrate pages to PMEM instead of just discarding it.
[PATCH v3 00/25] Page folios (Matthew Wilcox) https://lkml.kernel.org/r/20210128070404.1922318-1-willy@infradead.org
This patchset introduces a new data structure called page folio.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc5/</link>
      <pubDate>Tue, 19 Jan 2021 07:46:00 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc5/</guid>
      <description>[PATCH v2 00/27] Page folios (Matthew Wilcox) https://lkml.kernel.org/r/20210118170148.3126186-1-willy@infradead.org
This is the second version of the page folios patchset. This introduces a new struct named folio. Functions that receive folio as an argument always receives head page, so the function don&amp;rsquo;t need to do compound_head().
[PATCH -V9 0/3] numa balancing: Migrate on fault among multiple bound nodes (Huang Ying) https://lkml.kernek.org/r/20210120061235.148637-1-ying.huang@intel.com
This patch make optimization of cross-socket memory accesses for AutoNUMA in case of application is bound to multiple NUMA nodes possible.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc4/</link>
      <pubDate>Tue, 12 Jan 2021 07:18:48 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc4/</guid>
      <description>[PATCH] mm: thp: introduce NR_PARTIAL_THPS (Bin Wang) https://lkml.kernel.org/r/20210112021208.1875-1-wangbin224@huawei.com
Because partially unmapped THP is not split, the memory stat becomes confusing. This patch add another counter called NR_PARTIAL_THPS in node_stat_item to reduce such confusions.
[PATCH v2 00/70] RFC mm: Introducing the Maple Tree (Liam R. Howlett) https://lkml.kernel.org/r/20210112161240.2024684-1-Liam.Howlett@Oracle.com
Second RFC of the Maple tree. It is an RCU-safe B-tree that aims to be used as the vma tree with better scalability.
[PATCH] mm/debug: Improve memcg debugging (Matthew Wilcox) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc3/</link>
      <pubDate>Wed, 06 Jan 2021 07:20:18 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc3/</guid>
      <description>[PATCH] mm: vmscan: support complete shrinker reclaim (Sudarshan Rajagopalan) https://lkml.kernel.org/r/2d1f1dbb7e018ad02a9e7af36a8c86397a1598a7.1609892546.git.sudaraja@codeaurora.org
This patch makes caches can dropped even when those are smaller than the batch size.
[PATCH 0/6] hugetlbfs: support free page reporting (Liang Li) https://lkml.kernel.org/r/20210106034623.GA1128@open-light-1.localdomain
Because hugetlbfs is using reserved memory, it&amp;rsquo;s not reported by the free page reporting feature. This patch makes it able to be reported.
Linux 5.11-rc3 (Linus Torvalds) https://lkml.kernel.org/r/CAHk-=wizR7--Ub-rasYx2S5XURkooCQ63Sat23BpvTAuN0scQA@mail.gmail.com
The prediction of Linus for this release was wrong.</description>
    </item>
    <item>
      <title>LKML News v5.11-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc2/</link>
      <pubDate>Mon, 04 Jan 2021 07:20:40 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc2/</guid>
      <description>Linux 5.11-rc2 (Linus Torvalds) https://lkml.kernel.org/r/CAHk-=whS+rzNMSsU6vRoLMzrm0JPN-OVg+BxhybMet3NpqpR-Q@mail.gmail.com
Due to the holiday season, rc2 ends up fairly small. Maybe we will see rc8 for v5.11, but Torvalds just saying let&amp;rsquo;s watch more.
Below is the diffstat of the releases in the last two years.
Note that the y-axis is in logarithm. I draw it using https://github.com/sjp38/relstat and https://github.com/sjp38/lazybox using below command:
$ relstat.py --since 2019-01-04 | ~/lazybox/gnuplot/plot.py \ --data_fmt table --type labeled-lines --xtics_rotate -90 \ --font &amp;quot;Times New Roman, 5pt&amp;quot; --ylog --pointsize 0.</description>
    </item>
    <item>
      <title>Watching OSDI 2020 presentation videos</title>
      <link>https://sjp38.github.io/posts/en/osdi2020_videos_review/</link>
      <pubDate>Sat, 19 Dec 2020 22:35:27 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/osdi2020_videos_review/</guid>
      <description>I set watching at least one OSDI&#39;20 presentation video per day during the long vacation as one of my plans.
A large scale analysis of hundreds of in-memory cache clusters at Twitter https://www.youtube.com/watch?v=OQtMM5vdhlI&amp;amp;feature=emb_title
The authors traced and analyzed the workloads on the Twitter&amp;rsquo;s in-memory cache systems. To me, below findings were interesting.
There are many write requests. Size of each object is not so big (median 200 bytes), so metadata, which sizes 64 bytes per each object, is a burden Size of each key is not small compared to the size of each value.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc1/</link>
      <pubDate>Tue, 15 Dec 2020 07:32:20 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.11-rc1/</guid>
      <description>incoming (Andrew Morton) https://lkml.kernel.org/r/20201214190237.a17b70ae14f129e2dca3d204@linux-foundation.org
The pull request for v5.11 from Andrew Morton. The mmap_lock tracepoint patchset series is included in here.
incoming (Andrew Morton) https://lkml.kernel.org/r/20201215123253.954eca9a5ef4c0d52fd381fa@linux-foundation.org
Another pull request from Andrew Morton for memcg scalability improvement. This makes per-memcg lru lock.
[PATCH 00/25] Page folios (Matthew Wilcox) https://lkml.kernel.org/r/20201216182335.27227-1-willy@infradead.org
This is the patchset for the page folios, which Matthew proposed a few days ago and discussed via zoom.
Do we still need skip swapcache logic in do_swap_page() for SWP_SYNCHRONOUS_IO?</description>
    </item>
    <item>
      <title>LKML News v5.10</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10/</link>
      <pubDate>Tue, 08 Dec 2020 07:10:59 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10/</guid>
      <description>[RFC V2 00/37] Enhance memory utilization with DMEMFS (Yuley Zhang) https://lkml.kernel.org/r/cover.1607332046.git.yuleixzhang@tencent.com
This patchset aims to remove the &amp;lsquo;struct page&amp;rsquo; from user-sepcified region of memory and use a file system called &amp;lsquo;dmemfs&amp;rsquo; to minimize the memory region dedicated for &amp;lsquo;struct page&amp;rsquo;s.
[PATCH] mm: don&amp;rsquo;t SetPageWorkingset unconditionally during swapin (Yu Zhao) https://lkml.kernel.org/r/20201209012400.1771150-1-yuzhao@google.com
Unconditional &amp;lsquo;SetPageWorkingset&amp;rsquo; miscategorizes read-ahead pages or pages that never belong to the working set as working set because it&amp;rsquo;s called unconditionally.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc7/</link>
      <pubDate>Wed, 02 Dec 2020 07:16:10 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc7/</guid>
      <description>[PATCH] mm: mmap_lock: fix use-after-free race and css ref leak in tracepoints (Axel Rasmussen) https://lkml.kernel.org/r/20201130233504.3725241-1-axelrasmussen@google.com
This patch fixes a use-after-free bug that reported by syzbot.
[PATCH 0/6] prohibit pinning pages in ZONE_MOVABLE (Pavel Tatashin) https://lkml.kernel.org/r/20201202052330.474592-1-pasha.tatashin@soleen.com
Pinned pages in ZONE_MOVABLE is a wellknown problem. This patchset fixes the issue by forcing pinning new page to allocated from a zone other than ZONE_MOVABLE and migrating out existing pages from the zone during pinning.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc6/</link>
      <pubDate>Tue, 24 Nov 2020 07:41:40 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc6/</guid>
      <description>[PATCH v2] mm: memcontrol: account pagetables per node (Shakeel Butt) https://lkml.kernel.org/r/20201123161425.341314-1-shakeelb@google.com
This commit allows user to account memory size used for page tables per node.
[PATCH 0/2] userspace memory reaping using process_madvise (Suren Baghdasaryan) https://lkml.kernel.org/r/20201124053943.1684874-1-surenb@google.com
This commit allows user-space driven OOM reaping using process_madvise(MADV_DONTNEED).
[PATCH -V6 0/3] autonuma: Migrate on fault among multiple bound nodes (Huang Ying) https://lkml.kernel.org/r/20201126053219.234793-1-ying.huang@intel.com
The 6th version for autonuma migration among multiple bound nodes. In this version, more benchmark data and example is added.</description>
    </item>
    <item>
      <title>Lkml_news_v5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc5/</link>
      <pubDate>Wed, 18 Nov 2020 08:46:06 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc5/</guid>
      <description>[PATCH v9 0/9] mm: introduce memfd_secret system call to create &amp;ldquo;secret&amp;rdquo; memory areas (Mike Rapoport) https://lkml.kernel.org/r/20201117162932.13649-1-rppt@kernel.org
The 9th version of the memfd_secret patchset.
[patch V4 0/8] mm/highmem: Preemptible variant of kmap_atomic &amp;amp; friends (Thomas Gleixner) https://lkml.kernel.org/r/20201118194838.753436396@linutronix.de
As the name suggests, this patchset allow the code using kmap_atomic and similar things to be preemptible. This incur some overhead to highmem, but Thomas claims highmem was always slow.
[PATCH 0/7] Split huge pages to any lower order pages and selftests.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc4/</link>
      <pubDate>Tue, 10 Nov 2020 07:16:10 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc4/</guid>
      <description>[PATCH -V3 0/2] autonuma: Migrate on fault among multiple bound nodes (Huang Ying) https://lkml.kernel.org/r/20201110055951.85085-1-ying.huang@intel.com
This patchset makes AutoNUMA&amp;rsquo;s cross-socket memory access optimization possible even if the application&amp;rsquo;s memory is bound to multiple NUMA nodes.
[PATCH] kfence: Avoid stalling work queue task without allocations (Marco Elver) https://lkml.kernel.org/r/20201110135320.3309507-1-elver@google.com
This commit makes the toggle allocation gate of kfence to have 1 second timeout, to be prepared for allocation stallings.
[RFC PATCH 0/6] Split huge pages to any lower order pages.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc3/</link>
      <pubDate>Wed, 04 Nov 2020 07:08:08 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc3/</guid>
      <description>[PATCH v7 0/9] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20201103175841.3495947-1-elver@google.com
The 7th version of KFENCE. Now the authors say they believe this is ready to be included in the mm tree. And, it has now merged in the -mm tree.
[PATCH] page_frag: Recover from memory pressure (Matthew Wilcox) https://lkml.kernel.org/r/20201105042140.5253-1-willy@infradead.org
After an extreme memory pressure, some non-essential packets can be dropped because the &amp;lsquo;page_frag&amp;rsquo; allocator do the drops to recover from the memory pressure but it doesn&amp;rsquo;t change back the behavior even after the recovery.</description>
    </item>
    <item>
      <title>LKML News v5.10-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc2/</link>
      <pubDate>Tue, 27 Oct 2020 07:10:48 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc2/</guid>
      <description>[PATCH 0/9] More THP fixes (Matthew Wilcox) https://lkml.kernel.org/r/20201026183136.10404-1-willy@infradead.org
Several THP fixes.
[PATCH v5 0/9] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20201027141606.426816-1-elver@google.com
The fifth version of the KFENCE.
[PATCH -V2 0/2] autonuma: Migrate on fault among multiple bound nodes (Huang Ying) https://lkml.kernel.org/r/20201028023411.15045-1-ying.huang@intel.com
This patch is for multiple NUMA nodes bounded application&amp;rsquo;s AutoNUMA balancing.
[PATCH v6 0/9] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20201029131649.182037-1-elver@google.com</description>
    </item>
    <item>
      <title>LKML News v5.10-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc1/</link>
      <pubDate>Tue, 13 Oct 2020 07:34:10 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.10-rc1/</guid>
      <description>[PATCH] mm: Make allocator take care of memoryless numa node (Xianting Tian) https://lkml.kernel.org/r/20201012082739.15661-1-tian.xianting@h3c.com
CPUs in powerpc like architecture could have no local memory. As the kernel code doesn&amp;rsquo;t care about it, this commit makes it to handle the case.
incoming (Andrew Morton) https://lkml.kernel.org/r/20201013164658.3bfd96cc224d8923e66a9f4e@linux-foundation.org
This is the pull request from Andrew Morton, the mm maintainer, for v5.10.
[PATCH v4 0/5] Speed up mremap on large regions (Kalesh Singh) https://lkml.kernel.org/r/20201014005320.2233162-1-kaleshsingh@google.com)
Repost fo the patch series.</description>
    </item>
    <item>
      <title>LKML News v5.9</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9/</link>
      <pubDate>Tue, 06 Oct 2020 07:12:49 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9/</guid>
      <description>[PATCH RFC v2] Opportunistic memory reclaim (Andrea Righi) https://lkml.kernel.org/r/20201005081313.732745-1-andrea.righi@canonical.com
This patch introduces new file under memcg, &amp;lsquo;memory.swap.reclaim&amp;rsquo; that allow users to incur Reclaim even before the memory pressure happens, to help reducing system memory footprint and speed up hibernation/VM migration time, etc.
[PATCH v2 0/2] Add tracepoints around mmap_lock acquisition (Axel Rasmussen) https://lkml.kernel.org/r/20201007184403.1902111-1-axelrasmussen@google.com
This patchset adds tracepoints for mmap_lock to use that for analysis of the contention.
[RFC][PATCH 0/9] [v4][RESEND] Migrate Pages in lieu of discard (Dave Hansen) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc8/</link>
      <pubDate>Tue, 29 Sep 2020 07:22:30 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc8/</guid>
      <description>[RFC PATCH v2 00/30] 1GB PUD THP support on x86_64 (Zi Yan) https://lkml.kernel.org/r/20200928175428.4110504-1-zi.yan@sent.com
This patch adds support of 1GB THP using PUD.
[PATCH v4 00/11] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20200929133814.2834621-1-elver@google.com
The 4th version of the KFENCE patchset.
[PATCH 0/5] Speed up mremap on large regions (Kalesh Singh) https://lkml.kernel.org/r/20200930222130.4175584-1-kaleshsingh@google.com
This patchset optimizes mremap() by allowing memory regions to be able to mapped at PMD/PUD.
[PATCH] selftests/vm: 10x speedup for hmm-tests https://lkml.</description>
    </item>
    <item>
      <title>Tests package for DAMON is released under GPL v2</title>
      <link>https://sjp38.github.io/posts/en/damon-tests_open_sourced/</link>
      <pubDate>Sat, 26 Sep 2020 08:47:12 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon-tests_open_sourced/</guid>
      <description>DAMON contains a number of tests based on the kselftest and kunit in its patchset itself. As it is preferred to contain only tests having short runtime in kernel tree, I organized time consuming tests in a package and used it in my company only. Tests could be used as a good document and essential for contributors. For the reason, I promised I will make it open source in the last kernel summit talk (https://linuxplumbersconf.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc7/</link>
      <pubDate>Tue, 22 Sep 2020 07:07:32 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc7/</guid>
      <description>[PATCH v3 00/10] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20200921132611.1700350-1-elver@google.com
The third version of KFENCE patchset is uploaded.
Machine lockups on extreme memory pressure (Shakeel Butt) https://lkml.kernel.org/r/CALvZod4FWLsV9byrKQojeus7tMDhHjQHFF5J_JpNsyB0HkaERA@mail.gmail.com
Shakeel reports a machine lockup due to extreme memory pressure. It&amp;rsquo;s locked up on memcg&amp;rsquo;s vmpressure sr_lock, which is irq-unsafe. And the lockup made in IRQ. He proposes a solution simply changing the lock with irq-safe one, but he also admits it&amp;rsquo;s not a maintainable solution.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc6/</link>
      <pubDate>Tue, 15 Sep 2020 07:03:40 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc6/</guid>
      <description>[PATCH v14 0/5] KASAN-KUnit Integration (David Gow) https://lkml.kernel.org/r/20200915035828.570483-1-davidgow@google.com
The 14th patchset for the KASAN and KUnit integration. From the v13, compile warnings in test_kasan_module fixed.
[PATCH v2 00/10] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20200915132046.3332537-1-elver@google.com
The second version of the KFENCE posted.
[PATCH 1/2] fs: Add a filesystem flag for THPs (Matthew Wilcox) https://lkml.kernel.org/r/20200916032717.22917-1-willy@infradead.org
This patchset caches whether the backing filesystem support THP or not in an address space flags, so that the page cache can determine if it can send THP to the backing filesystem or not.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc5/</link>
      <pubDate>Tue, 08 Sep 2020 07:12:49 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc5/</guid>
      <description>[PATCH RFC 00/10] KFENCE: A low-overhead sampling-based memory safety error detector (Marco Elver) https://lkml.kernel.org/r/20200907134055.2878499-1-elver@google.com
This patchset introduces another kernel use-after-free detection infrastructure, called Kernel Electric-Fence (KFENCE). Unlike KASAN, this trades the performance for precision and as a result it incurs near zero performance overhead so that it can be enabled in the production.
[PATCH 00/11] Remove assumptions of THP size (Matthew Wilcox) https://lkml.kernel.org/r/20200908195539.25896-1-willy@infradead.org
Matthew is working for variable sized THP. For start of the work, this patchset changes the assumption that THP will be PMD size by introducing thp_nr_pages() and let the other VM code to use it.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc4/</link>
      <pubDate>Tue, 01 Sep 2020 07:20:35 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc4/</guid>
      <description>[PATCH v9 0/3] introduce memory hinting API for external process (Minchan Kim) https://lkml.kernel.org/r/20200901000633.1920247-1-minchan@kernel.org
After the rejection, this patchset posted again. Linus&amp;rsquo;s opinion about dropping the task_struct to do_madvise and Christian&amp;rsquo;s comment regarding compat syscall entry has resolved.
And, this patchset merged in the &amp;lsquo;-mm&amp;rsquo; tree again. Hopefully it will be merged in mainline by 5.10!
[PATCH v6 0/3] Anonymous VMA naming patches (Sumit Semwal) https://lkml.kernel.org/r/20200901091901.19779-1-sumit.semwal@linaro.org
This is reposting of old patchset which Colin Cross sent before.</description>
    </item>
    <item>
      <title>LkML New v5.9-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc3/</link>
      <pubDate>Tue, 25 Aug 2020 07:52:02 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc3/</guid>
      <description>[RFC -V3 0/5] autonuma: Optimize memory placement for memory tiering system (Huang Ying) https://lkml.kernel.org/r/20200825002354.17038-1-ying.huang@intel.com
The third RFC of autonuma for help placing of data items on systems utilizing both DRAM and PMEM as different NUMA nodes.
Linux 5.9-rc3 https://lkml.kernel.org/r/CAHk-=wiD1yujm_WvWLYL7gZsWMvZyWMg1rfU7dWmnYYc3a7Gsg@mail.gmail.com
This week rc release is also quite normal. The &amp;lsquo;fallthought&amp;rsquo; comment conversion made fairly evenly distributed changes. Torvalds says it was quite calm. Indeed, only one patchset got my interest this week.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc2/</link>
      <pubDate>Tue, 18 Aug 2020 07:15:40 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc2/</guid>
      <description>PROBLEM: Long Workqueue delays. (Jim Baxter) https://lkml.kernel.org/r/71aafe68-7fe0-6b77-ea8e-83edd3f16c8d@mentor.com
Jim Baxter encountered 6.5 seconds delay due to long workqueue delay. He want to ask if this is normal or real problem.
[RFC PATCH 0/8] memcg: Enable fine-grained per process memory control (Waiman Long) https://lkml.kernel.org/r/20200817140831.30260-1-longman@redhat.com
The memory cgroup v2 start reclamation if the amount of the memory of the cgroup exceeds &amp;lsquo;memory.high&amp;rsquo; and start OOM killing if if exceeds &amp;lsquo;memory.max&amp;rsquo;. Problem is, the OOM killer can kill any process.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2020</title>
      <link>https://sjp38.github.io/posts/en/kernelsummit2020_talk/</link>
      <pubDate>Sat, 08 Aug 2020 07:10:32 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernelsummit2020_talk/</guid>
      <description>My talk proposal to the Linux Kernel Summit of this year which is co-located with the Linux Plumbers Conference has accepted! Hope to (virtually) see you there. The title of the talk is, &amp;ldquo;DAMON: Data Access Monitoring Framework for Fun and Memory Management Optimizations&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v5.9-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc1/</link>
      <pubDate>Tue, 04 Aug 2020 07:08:27 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.9-rc1/</guid>
      <description>mm: sort freelist by rank number (Cho KyongHo) https://lkml.kernel.org/r/1596435031-41837-1-git-send-email-pullip.cho@samsung.com
LPDDR5 has severan ranks and there are ranks switching delay. Therefore, it would be better to do accesses in same ranks if possible. This patch sorts freelist by the rank number so that near future allocation can be done in same rank.
[RFC-PROTOTYPE 1/1] mm: Add __GFP_FAST_TRY flag (Uladzislau Rezki) https://lkml.kernel.org/r/20200803163029.1997-1-urezki@gmail.com
This is the rfc of the patch for the Paul&amp;rsquo;s last ask.</description>
    </item>
    <item>
      <title>LKML News v5.8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8/</link>
      <pubDate>Tue, 28 Jul 2020 07:07:40 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8/</guid>
      <description>[PATCH v2 0/7] mm: introduce memfd_secret system call to create &amp;ldquo;secret&amp;rdquo; memory areas (Mike Rapoport) https://lkml.kernel.org/r/20200727162935.31714-1-rppt@kernel.org
This is the second version of the secretmemfd. In this version, the system call has renamed to &amp;lsquo;memfd_secret&amp;rsquo;.
[RFC PATCH 0/5] madvise MADV_DOEXEC (Anthony Yznaga) https://lkml.kernel.org/r/1595869887-23307-1-git-send-email-anthony.yznaga@oracle.com
This patch introduces another madvise hint, MADV_DOEXEC. It preserves an anonymous memory range across exec.
[RFC PATCH 0/6] decrease unnecessary gap due to pmem kmem alignment (Jia He) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc7/</link>
      <pubDate>Wed, 22 Jul 2020 06:48:06 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc7/</guid>
      <description>[PATCH 0/6] mm: introduce secretmemfd system call to create &amp;ldquo;secret&amp;rdquo; memory areas (Mike Rapoport) https://lkml.kernel.org/r/20200720092435.17469-1-rppt@kernel.org
This patchset make another special kind of file for secret memory areas. The file can be opened using secretmemfd(). mmap() of the file creates the secret memory mapping. The mapped pages are marked as not present in the direct map and will have desired protection bits (e..g, uncached).
[PATCH v7 0/6] workingset protection/detection on the anonymous LRU list (js1304@gmail.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc6/</link>
      <pubDate>Wed, 15 Jul 2020 06:50:00 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc6/</guid>
      <description>[PATCH v3] x86/mm: use max memory block size on bare metal (Daniel Jordan) https://lkml.kernel.org/r/20200714205450.945834-1-daniel.m.jordan@oracle.com
On x86, smallest supported block size is 128MiB. This means it needs to create 16,288 sysfs directories for 2TiB memory system. This sysfs creation takes significant amount of the boot time. As the memory hotplug is frequenlty used for the virtualized systems, this commit makes the kernels that aren&amp;rsquo;t running on a hypervisor to use largest block size (2GiB) on big machines.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc5/</link>
      <pubDate>Tue, 07 Jul 2020 07:01:31 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc5/</guid>
      <description>[PATCH 0/2] KUnit-Kmemleak Integration (Uriel Guajardo) https://lkml.kernel.org/r/20200706210327.3313498-1-urielguajardojr@gmail.com
This patchset makes kunit to use kmemleak to catch memory leak in the test code.
[PATCH] CodingStyle: Inclusive Terminology (Dan Williams) https://lkml.kernel.org/r/159389297140.2210796.13590142254668787525.stgit@dwillia2-desk3.amr.corp.intel.com
This patch adds a new document for inclusive term usage in the kernel tree. It suggests to stop using the terms, &amp;lsquo;slave&amp;rsquo; and &amp;lsquo;blacklist&amp;rsquo; anymore. This patch was revised two times and the third revision is merged in Torvalds&amp;rsquo; tree by the Friday.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc4/</link>
      <pubDate>Tue, 30 Jun 2020 06:57:48 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc4/</guid>
      <description>[Ksummit-discuss] [TECH TOPIC] Inline Encryption Support and new related features (Satya Tangirala) https://lkml.kernel.org/r/20200629092551.GA673684@google.com
Maybe the last kernel summit proposal. The inline encryption work was presented in the last year LPC and a part of it has merged in the v5.8, being tested in Android. The talk will discuss the todo list of the work.
[PATCH] mm: define pte_add_end for consistency (Wei Yang) https://lkml.kernel.org/r/20200630031852.45383-1-richard.weiyang@linux.alibaba.com
This patch adds a helper to get the address of the next boundary for pte level.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc3/</link>
      <pubDate>Wed, 24 Jun 2020 06:48:53 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc3/</guid>
      <description>[TECH TOPIC] restricted kernel address spaces (Mike Rapoport) https://lkml.kernel.org/r/20200621090539.GM6493@linux.ibm.com
A new kernel summit talk proposal is made. This topic is recycled from the LSF/MM/BPF, which scheduled but canceled due to the COVID19.
[PATCH] mm: filemap: clear idle flag for writes (Yang Shi) https://lkml.kernel.org/r/1593020612-13051-1-git-send-email-yang.shi@linux.alibaba.com
This patch adds missed idle flag clearing in filemap writing.
+ mm-madvise-introduce-process_madvise-syscall-an-external-memory-hinting-api-fix-2.patch added to -mm tree https://marc.info/?l=linux-mm-commits&amp;amp;m=159303823314812&amp;amp;w=2
The process_madvise() patch has merged in the -mm tree again.</description>
    </item>
    <item>
      <title>LKML News v5.8-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc2/</link>
      <pubDate>Tue, 16 Jun 2020 07:14:05 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc2/</guid>
      <description>[PATCH v7] mm: Proactive compaction (Nitin Gupta) https://lkml.kernel.org/r/20200615143614.15267-1-nigupta@nvidia.com
7th version of the proactive compaction patchset. This version fixes compile error while THP is disabled.
Maintainers / Kernel Summit 2020 submissions (Theodore Y. Ts&amp;rsquo;o) https://lkml.kernel.org/r/20200615155839.GF2863913@mit.edu
There were only 5 submissions for the kernel summit talk, and no submission for the maintainers summit. Ted asks people to submit until this week.
[PATCH v6 0/6] workingset protection/detection on the anonymous LRU list https://lkml.kernel.org/r/1592371583-30672-1-git-send-email-iamjoonsoo.kim@lge.com</description>
    </item>
    <item>
      <title>LKML News v5.8-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc1/</link>
      <pubDate>Wed, 03 Jun 2020 06:45:01 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.8-rc1/</guid>
      <description>[PATCH v6] mm: Proactive compaction (Nitin Gupta) https://lkml.kernel.org/r/20200601194822.30252-1-nigupta@nvidia.com
This is the sixth version of the proactive compaction patchset. It makes compaction to be able to triggered earlier than final memory pressure using knobs. The goal is better THP allocation success.
[PATCH] vmalloc: Convert to XArray (Matthew Wilcox) https://lkml.kernel.org/r/20200603171448.5894-1-willy@infradead.org
This patchset converts the radix tree for vmap blocks into XArray.
incoming (Andrew Morton) https://lkml.kernel.org/r/20200608212922.5b7fa74ca3f4e2444441b7f9@linux-foundation.org
MM-side pull request. It contains the &amp;ldquo;mmap locking API: initial implementation as rwsem wrappers&amp;rdquo; patchset.</description>
    </item>
    <item>
      <title>LKML News v5.7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7/</link>
      <pubDate>Tue, 26 May 2020 07:04:14 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7/</guid>
      <description>[PATCH v2 00/16] Introduce kvfree_rcu(1 or 2 arguments) (Uladzislau Rezki) https://lkml.kernel.org/r/20200525214800.93072-1-urezki@gmail.com
This is the second version of the rcu-protected kvfree().
[PATCH v2 0/7] Add histogram measuring mmap_lock contention latency (Axel Rasmussen) https://lkml.kernel.org/r/20200528235238.74233-1-axelrasmussen@google.com
For further analysis of the mmap_sem overhead from both kernel space and user space, this commit adds the latency historgram for mmap_sem acquisition time. Actually, mmap_sem is now renamed into mmap_lock, thanks to Michel&amp;rsquo;s patch.
[PATCH -V4] swap: Reduce lock contention on swap cache from swap slots allocation (Huang, Ying) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.7-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc7/</link>
      <pubDate>Wed, 20 May 2020 05:52:27 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc7/</guid>
      <description>[PATCH v5] mm: Proactive compaction (Nitin Gupta) https://lkml.kernel.org/r/20200518181446.25759-1-nigupta@nvidia.com
The 5th version of the proactive compaction. This patchset make the compaction more proactive to make THP allocation easily success.
[PATCH -V2] swap: Reduce lock contention on swap cache from swap slots allocation (Huang Ying) https://lkml.kernel.org/r/20200520031502.175659-1-ying.huang@intel.com
After swap device is fragmented, there&amp;rsquo;s no free swap cluster. Therefore, each swap logic of each CPU will linearly scan each swap cluster to find a free slot.</description>
    </item>
    <item>
      <title>Opening a Showcase Website for DAMON</title>
      <link>https://sjp38.github.io/posts/en/damon_github_page/</link>
      <pubDate>Tue, 19 May 2020 06:27:47 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon_github_page/</guid>
      <description>A DAMON showcase website[1] is open. There are
the official documentation of DAMON[2], the heatmap format dynamic access pattern of various realistic workloads for heap area[3], mmap()-ed area[4], and stack[5] area, the dynamic working set size distribution[6] and chronological working set size changes[7], and the latest performance test results[8]. [1] https://damonitor.github.io
[2] https://damonitor.github.io/doc/html/latest
[3] https://damonitor.github.io/test/result/visual/latest/heatmap.0.html
[4] https://damonitor.github.io/test/result/visual/latest/heatmap.1.html
[5] https://damonitor.github.io/test/result/visual/latest/heatmap.2.html
[6] https://damonitor.github.io/test/result/visual/latest/wss_sz.html
[7] https://damonitor.github.io/test/result/visual/latest/wss_time.html
[8] https://damonitor.github.io/test/result/perf/latest/html/index.html</description>
    </item>
    <item>
      <title>LKML News v5.7-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc6/</link>
      <pubDate>Sat, 16 May 2020 09:55:20 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc6/</guid>
      <description>[PATCH v4 00/36] Large pages in the page cache (Matthew Wilcox) https://lkml.kernel.org/r/20200515131656.12890-1-willy@infradead.org
This is the fourth version of the patchset for the huge pages in the page cache. Still it fails xfstests.
Maintainers / Kernel Summit 2020 planning kick-off (Theodore Y. Ts&amp;rsquo;o) https://lkml.kernel.org/r/20200515163956.GA2158595@mit.edu
Ted annouced that the Maintainers / Kernel Summit will be held in virtual this year, of course due to the COVID19. With this announcement, the CFP for the kernel summit is also opened.</description>
    </item>
    <item>
      <title>Sphynx document on Github pages Needs `.nojekyll` File</title>
      <link>https://sjp38.github.io/posts/en/sphynx_doc_on_github_pages_needs_nojekyll/</link>
      <pubDate>Wed, 13 May 2020 06:40:03 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/sphynx_doc_on_github_pages_needs_nojekyll/</guid>
      <description>I recently tried to upload the Linux kernel document which is generated in html form using the Sphynx build system[1] on a Github page[2] so that people can read DAMON[3] document from everywhere. The upload was very easy. I simply created the repo, put the generated html doc at Documentation/output/ into the repo and pushed. However, the theme was not applied.
Github assumes every Github pages to be based on Jekyll[4], and because every files and directories starting with underscores are handled special in Jekyll, some directories Sphynx created were ignored.</description>
    </item>
    <item>
      <title>LKML News v5.7-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc5/</link>
      <pubDate>Thu, 07 May 2020 06:56:23 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc5/</guid>
      <description>[RFC 00/43] PKRAM: Preserved-over-Kexec RAM (Anthony Yznaga) https://lkml.kernel.org/r/1588812129-8596-1-git-send-email-anthony.yznaga@oracle.com
This patchset introduces special memory called PKRAM. It can be used to preserve VM guest memory across kexec boot for fast restart (VMM Fast Restart). Compared to DRAM based PMEM simulation, PKRAM is more flexible as the memory size is not need to be previously fixed.
[PATCH] mm: Replace zero-length array with flexible-array (Gustavo A. R. Silva) https://lkml.kernel.org/r/20200507185942.GA15193@embeddedor
The zero-length array of C90 are widely used in the kernel code base, but the flexible array member of C99 would be better choice.</description>
    </item>
    <item>
      <title>LKML News v5.7-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc4/</link>
      <pubDate>Thu, 30 Apr 2020 06:57:24 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc4/</guid>
      <description>[PATCH 0/7] Record the mm_struct in the page table pages (Matthew Wilcox) https://lkml.kernel.org/r/20200428194449.22615-1-willy@infradead.org
Literally, this patchset adds the mm_struct pointer to struct page if it is used for page tables. This will be useful for several cases usch as uncorrectable errors handling and task-page table relation checking, etc.
[PATCH v4] mm: Proactive compaction (Nitin Gupta) https://lkml.kernel.org/r/20200428221055.598-1-nigupta@nvidia.com
This patchset makes the compaction to be more proactively done for better THP allocation success and makes user to be able to control the proactiveness using a sysfs file, /sys/kernel/mm/compaction/proactiveness.</description>
    </item>
    <item>
      <title>ACM DL is allowing open access to every article until June</title>
      <link>https://sjp38.github.io/posts/en/acmdl_is_open_until_june/</link>
      <pubDate>Wed, 22 Apr 2020 06:45:20 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/acmdl_is_open_until_june/</guid>
      <description>ACM has decided to allow open access to every article in ACM DL until June 30, to help people doing remote works due to COVID-19. I found this by checking my papers in ACM DL. I believe this is a great decision of ACM.</description>
    </item>
    <item>
      <title>LKML News v5.7-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc3/</link>
      <pubDate>Wed, 22 Apr 2020 06:44:31 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc3/</guid>
      <description>LSFMMBPF 2020 Cancellation announcement (Josef Bacik) https://lkml.kernel.org/r/0b6d3d6f-99de-3603-4b42-c3db5113633d@toxicpanda.com
Due to the COVID-19, LSFMM, which was supposed to be help April, has delayed before, and now it has just canceled. What a shame, but this might be the right thing to do. This mail also announce the schedule of next year LSFMM. It will be held in Palm Springs, on May 12-14, 2021 at the Riviera Palm Springs.
[PATCH 2/2] mm: support vector address ranges for process_madvise (Minchan Kim) https://lkml.</description>
    </item>
    <item>
      <title>LKML News after v5.7-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc2/</link>
      <pubDate>Fri, 17 Apr 2020 06:46:40 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc2/</guid>
      <description>[RFC] autonuma: Support to scan page table asynchronously (Huang Ying) https://lkml.kernel.org/r/20200414081951.297676-1-ying.huang@intel.com
AutoNUMA is currently scanning page tables of the processes in the process context and therefore this can increase the latency of the process. This RFC thus makes the page table scanning asynchronous if there are idle CPUs.
[PATCH v4 00/10] Add a new mmap locking API wrapping mmap_sem calls https://lkml.kernel.org/r/20200415004353.130248-1-walken@google.com
This is just a repost of the patch series rebased on v5.</description>
    </item>
    <item>
      <title>Eurosys&#39;20 will be held online</title>
      <link>https://sjp38.github.io/posts/en/eurosys20_will_be_held_online/</link>
      <pubDate>Sun, 05 Apr 2020 09:05:11 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/eurosys20_will_be_held_online/</guid>
      <description>With the upload of the accepted papers list, EuroSys homepage also updated its notice about COVID-19 related notification. It previously tried to reschedule the offline meeting, however seems they changed mind and decided to do virtual (online) conference. It&amp;rsquo;s a bad news for authors and people who planned to participate the offline meetings, but a good new for other people, because they would be allowed to participate in the conference without fee.</description>
    </item>
    <item>
      <title>LKML News v5.7-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc1/</link>
      <pubDate>Sun, 05 Apr 2020 08:41:57 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.7-rc1/</guid>
      <description>[GIT PULL] XArray for 5.7-rc1 https://lkml.kernel.org/r/20200331141749.GB21484@bombadil.infradead.org
Matthew&amp;rsquo;s XArray pull request for 5.7 merge window. Quickly merged by Torvald.
[PATCH v5 00/10] workingset protection/detection on the anonymous LRU list https://lkml.kernel.org/r/1585892447-32059-1-git-send-email-iamjoonsoo.kim@lge.com
The fifth version of the workingset protection.
[PATCH v4 0/2] mm: using CMA for 1 GB hugepages allocation https://lkml.kernel.org/r/20200407010431.1286488-1-guro@fb.com
This patchset make hugetlb to use CMA for 1GB hugepage allocations.
[PATCH RFC] mm: compaction: avoid migrating non-cma pages to a cma area The compaction algorithm doesn&amp;rsquo;t distinguish CMA from other movable pageblocks.</description>
    </item>
    <item>
      <title>LKML News v5.6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6/</link>
      <pubDate>Sat, 28 Mar 2020 09:22:44 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6/</guid>
      <description>[PATCH v5 00/38] Add KernelMemorySanitizer infrastructure (glider) https://lkml.kernel.org/r/20200325161249.55095-1-glider@google.com
This is the fifth official patchset for kernel uninitialized memory related error detector, KMSAN.
[PATCH 1/2] mm: cma: NUMA node interface (Aslan Barikov) https://lkml.kernel.org/r/20200326212718.3798742-1-aslan@fb.com
CMA provides no way to specify what NUMA node the memory area to be allocated. This commit adds the interface to specify the NUMA node to use for the allocation.
[PATCH v3 00/10] Add a new mmap locking API wrapping mmap_sem calls (Michel Lespinasse) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc7/</link>
      <pubDate>Fri, 20 Mar 2020 07:04:51 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc7/</guid>
      <description>Linux 5.6-rc7 https://lkml.kernel.org/r/CAHk-=wipv1y2Z7=CDQ5ajb2OvSyq-0BL9yLRPm1YqW+sjcSDzQ@mail.gmail.com
The world is struggling due to the COVID-19, but kernel development seems quite normal. Torvalds released the 7th rc for the Linux 5.6. There is nothing strange or worrysome here. We will get the v5.6 next week, unless something bad happens.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc6/</link>
      <pubDate>Mon, 16 Mar 2020 07:24:24 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc6/</guid>
      <description>LSF/MM/BPF 2020: Postponement announcement (Josef Bacik) https://lkml.kernel.org/r/e4f390c7-3b25-67c8-5d6d-d7e87ba1c072@toxicpanda.com
COVID-19 outbreak has finally delayed the LSF/MM/BPF of this year.
Linux 5.6-rc6 https://lkml.kernel.org/r/CAHk-=whcVTGVPtvdb9SdCcjLawG6tLvbNWfWB_Y6=QhovFy2rg@mail.gmail.com
Sixth rc release, Torvalds says things looks quite normal. I&amp;rsquo;m looking forward for 5.6 official release.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc5/</link>
      <pubDate>Tue, 03 Mar 2020 06:16:51 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc5/</guid>
      <description>[PATCH v1 00/11] virtio-mem: paravirtualized memory https://lkml.kernel.org/r/20200302134941.315212-1-david@redhat.com
At KVM Forum 2018, virtio-mem&amp;rsquo;s basic idea has presented and now this patchset introduces it. This provides a flexible, cross-architecture memory hot(un)plug solution.
[PATCH v7 0/7] introduce memory hinting API for external process https://lkml.kernel.org/r/20200302193630.68771-1-minchan@kernel.org
Finally, this patchset has accepted by Andrew Morton.
[PATCH v2] mm: Proactive compaction https://lkml.kernel.org/r/20200302213343.2712-1-nigupta@nvidia.com
This patchset makes kernel to do compaction proactively instead of THP allocation failures, to minimize the latency spike which comes from the compaction.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc4/</link>
      <pubDate>Mon, 02 Mar 2020 06:45:18 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc4/</guid>
      <description>[LSF/MM ATTEND]: page fault and mmap_sem scalabity https://lkml.kernel.org/r/e67a9e90-5a64-b3cc-5014-2fd1e5bf3895@linux.ibm.com
A short mail from Laurent saying he is interested in attending the discussions about the page fault and mmap_sem scalability issue.
Linux 5.6-rc4 https://lkml.kernel.org/r/CAHk-=wgD3=ryAapzdpcZumMK2RQWBvWVE70qp_ft_cjdRX9htQ@mail.gmail.com
Fourthe rc release. 5.6 official release is not so far. Torvalds says this is fairly reasonsable sized release.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc3/</link>
      <pubDate>Mon, 24 Feb 2020 06:40:26 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc3/</guid>
      <description>[PATCH 0/2] slabinfo: parse all NUMA attributes https://lkml.kernel.org/r/20200217084828.9092-1-tobin@kernel.org
The author of this patchset found some information regarding NUMA is missed in slabinfo. This patchset adds the info.
[PATCH v6 0/7] introduce memory hinting API for external process https://lkml.kernel.org/r/20200219014433.88424-1-minchan@kernel.org
Sixth version of the patchset for new system call, &amp;lsquo;madvise_process()&amp;rsquo;. Changes are not so big. Support null task argument and requestor&amp;rsquo;s mm for &amp;lsquo;io_madvise()&amp;rsquo;.
[PATCH] mm: Stop kswapd early when nothing&amp;rsquo;s waiting for it to free pages https://lkml.</description>
    </item>
    <item>
      <title>RCX: Read-Copy Transact</title>
      <link>https://sjp38.github.io/posts/en/rcx/</link>
      <pubDate>Sat, 15 Feb 2020 09:11:55 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/rcx/</guid>
      <description>Read-copy update (RCU) can provide ideal scalability for read-mostly workloads, but some believe that it provides only poor performance for updates. This belief is due to the lack of RCU-centric update synchronization mechanisms. RCU instead works with a range of update-side mechanisms, such as locking. In fact, many developers embrace simplicity by using global locking. Logging, hardware transactional memory, or fine-grained locking can provide better scalability, but each of these approaches has limitations, such as imposing overhead on readers or poor scalability on non-uniform memory access (NUMA) systems, mainly due to their lack of NUMA-aware design principles.</description>
    </item>
    <item>
      <title>My paper has accepted to appear in the EuroSys2020</title>
      <link>https://sjp38.github.io/posts/en/eurosys2020_talk/</link>
      <pubDate>Fri, 14 Feb 2020 19:44:36 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/eurosys2020_talk/</guid>
      <description>The last research paper I wrote before joining my current team, has been accepted to be presented by the EuroSys&#39;20. The title of the paper is “An HTM-Based Update-side Synchronization for RCU on NUMA systems”.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc2/</link>
      <pubDate>Tue, 11 Feb 2020 07:37:21 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc2/</guid>
      <description>[RFC PATCH 0/3] DAMON: Implement The Data Access Pattern Awared Memory Management Rules https://lkml.kernel.org/r/20200210150921.32482-1-sjpark@amazon.com
This is an RFC patch from me that implementing simple way to run data access pattern awared memory system using DAMON. Proactive reclamation or access awared THP promotion/demotion will be easily available using this change.
[PATCH 0/9] workingset protection/detection on the anonymous LRU list https://lkml.kernel.org/r/1581401993-20041-1-git-send-email-iamjoonsoo.kim@lge.com
This patchset is for improving kernel&amp;rsquo;s reclamation scheme in a corner case where pages which used only once evicting hot pages.</description>
    </item>
    <item>
      <title>LKML News v5.6-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc1/</link>
      <pubDate>Wed, 29 Jan 2020 07:11:00 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.6-rc1/</guid>
      <description>[LSF/MM/BPF TOPIC] Memory Tiering discussion https://lkml.kernel.org/r/CAHbLzkqOKtM684SGnCaa9ObHj082KenoPmRXvxMJ1UjcdvrhMQ@mail.gmail.com
The author, Yang Shi has posted a patchset for tiered memory management last year, but received no many comments. Meanwhile, Dave posted another similar patch. He wants to discuss about this in LSF/MM this year.
Linux 5.6-rc1 https://lkml.kernel.org/r/CAHk-=wjVopuAm5Vwa1kK5O1tTzQAGFtCHm8_Hzy3Us1OC=PgUw@mail.gmail.com
After the two weeks, the merge window for 5.6 has finished and therefore the 5.6-rc1 has released.
This merge window was slightly smaller than usual. Torvalds think this is the slow effect from the year end holiday season.</description>
    </item>
    <item>
      <title>LKML News v5.5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5/</link>
      <pubDate>Sun, 26 Jan 2020 03:52:17 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5/</guid>
      <description>[PATCH 0/8] Introduce Data Access MONitor (DAMON) https://lkml.kernel.org/r/20200120162757.32375-1-sjpark@amazon.com
This is the patchset for the DAMON.
Paging out when free memory is low but not exhausted (and available memory remains high) https://lkml.kernel.org/r/e994b0a76099437b8edbae925e9ccac8@its-mail-p04.registry.otago.ac.nz
This mail introduces an issue on 5.3 and 5.4 kernel that page out is occurred needlessly. The author uses stress and dd to stress memory but still leave some memory in the system. However, the system does swap excessively.</description>
    </item>
    <item>
      <title>LKML News v5.5-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc7/</link>
      <pubDate>Sat, 18 Jan 2020 10:11:47 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc7/</guid>
      <description>REMINDER: LSF/MM/BPF: 2020: Call for Proposals https://lkml.kernel.org/r/20200115215409.5pd4fnoawqzs7rvw@jbacik-mbp
This is reminder of the LSF/MM/BPF of this year. It underscores the submitters to also send the mail to the appropriate mailing list as before. Maybe a few of people are missing sending mail but only wite up their proposal to the google form.
[LSF/MM TOPIC] Free Page Reporting https://lkml.kernel.org/r/4b8671d16573307da09afc56030c2a5f5a9c45bf.camel@linux.intel.com
In case of KVM case, as each VM guest receives virtual memory from the host, only when host gets memory pressure the memory being used by guests will be reclaimed.</description>
    </item>
    <item>
      <title>LKML News v5.5-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc6/</link>
      <pubDate>Sat, 11 Jan 2020 07:35:47 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc6/</guid>
      <description>OOM killer not nearly agressive enough? https://lkml.kernel.org/r/20200107204412.GA29562@amd
The author if this mail, Pavel updated his userspace to x86-64 and encountered chromium&amp;rsquo;s memory hogging. He was required to kill the chromium himself, because OOM killer didn&amp;rsquo;t kill it. He asks whether this means OOM killer is not aggressive enough.
[PATCH 0/4] introduce memory hinting API for external process https://lkml.kernel.org/r/20200110213433.94739-1-minchan@kernel.org
Minchan has previously posted the patchset introducing the MADV_COLD, MADV_PAGEOUT and external madvise() able code change.</description>
    </item>
    <item>
      <title>A thing you should know if you are using multiple email accounts with `git send-email`</title>
      <link>https://sjp38.github.io/posts/en/git_send_email_multiple_email_caution/</link>
      <pubDate>Mon, 06 Jan 2020 21:10:05 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/git_send_email_multiple_email_caution/</guid>
      <description>In some case, we need to send patches that made by other people instead. git send-email command can know this situation by itself by comparing the commit author information and mail sender&amp;rsquo;s information. In that case, git send-email automatically add From: line pointing the real author of the patch in the body of the mail so that maintainers applying the patches can set the author information correctly.
For example, if &amp;ldquo;Alice alice@abc.</description>
    </item>
    <item>
      <title>LKML News v5.5-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc5/</link>
      <pubDate>Mon, 30 Dec 2019 17:54:23 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc5/</guid>
      <description>[PATCH v16 QEMU 4/3 RFC] memory: Add support for MADV_FREE as mechanism to lazy discard pages https://lkml.kernel.org/r/20200103212339.29849.99817.stgit@localhost.localdomain
This RFC patch modifies QEMU to able to use MADV_FREE for discard of pages to avoid the page zeroing cost.
Linux 5.5-rc5 https://lkml/kernel.org/r/CAHk-=whwmJQwwMD06VfPapDmc52LFQhG3HP6VyVLXVA=nYi_ow@mail.gmail.com
Time files, rc5 released. Last week was also another calm week due to the new year holidays, and thus this release is small. Linus expects it will be changed in this upcoming weeks, or 5.</description>
    </item>
    <item>
      <title>Setting Git for email send</title>
      <link>https://sjp38.github.io/posts/en/git_email_setup/</link>
      <pubDate>Sat, 28 Dec 2019 09:58:49 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/git_email_setup/</guid>
      <description>Many communities are using Github nowadays, but some communities still use mailing list based development style. The Linux kernel community would be a good example. In the style, all major communications are made by email only. Patches are submitted to the maintainers and one more open mailing lists as a mail. Reviews are also made as replies to the mail.
Because some email clients can distort the original content for so-called ``rich user experience&amp;rsquo;&amp;rsquo; (e.</description>
    </item>
    <item>
      <title>DAMON: Data Access Monitor</title>
      <link>https://sjp38.github.io/posts/en/damon/</link>
      <pubDate>Fri, 27 Dec 2019 18:21:07 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/damon/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon. This out-dated post will be removed soon.
With increasingly data-intensive workloads and limited DRAM capacity, optimal memory management based on dynamic access patterns is becoming increasingly important. Such mechanisms are only possible if accurate and efficient dynamic access pattern monitoring is available.
DAMON is a Data Access MONitoring framework subsystem for the Linux kernel developed for such memory management. It is designed with some key mechanism (refer to Design for the detail) that make it</description>
    </item>
    <item>
      <title>LKML News v5.5-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc4/</link>
      <pubDate>Wed, 25 Dec 2019 10:01:47 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc4/</guid>
      <description>[PATCH V11 RESEND] mm/debug: Add tests validating architecture page table helpers https://lkml.kernel.org/r/1577162322-30303-1-git-send-email-anshuman.khandual@arm.com
This patchset adds tests for the page table helpers. Those tests covers basic page table entry transformations including old, young, dirty, clean, write, write protect etc. The tests are not using the kselftest or kunit, but implemented as a kernel module with new file, mm/debug_vm_pgtable.c.
Linux 5.5-rc4 https://lkml.kernel.org/r/CAHk-=wjq2b9GkLzpaDE-Xryu5c0zMM72BqkJKeZVsX+4ymH6aA@mail.gmail.com
Due to the holidays, last week was unsurprisingly quiet. Torvalds says it was hardly even worth making an rc release.</description>
    </item>
    <item>
      <title>LKML News v5.5-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc3/</link>
      <pubDate>Wed, 18 Dec 2019 20:33:01 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc3/</guid>
      <description>PROBLEM: Large (256MB) CMA allocation fails from time to time when using Intel VT-d https://lkml.kernel.org/r/5e75d900cb50457784ee1d2050b511ec@MAILER13.tech.ceia
The author reports a CMA allocation failure that occurs time to time if the system is using Intel VT-d.
[PATCHv2 0/3] Allow ZRAM to use any zpool-compatible backend https://lkml.kernel.org/r/20191219151928.ad4ccf732b64b7f8a26116db@gmail.com
ZRAM is an in-memory block device that compresses the content. Currently, ZRAM is used only with zsmalloc. However, the zsmalloc is not an optimal selection in some environment.</description>
    </item>
    <item>
      <title>Build, Install, and Use QEMU on Ubuntu</title>
      <link>https://sjp38.github.io/posts/en/qemu_setup_on_ubuntu/</link>
      <pubDate>Thu, 12 Dec 2019 00:46:05 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/qemu_setup_on_ubuntu/</guid>
      <description>This post describes how you can build, install, and use QEMU on an Ubuntu machine. I basically refererenced http://wiki.qemu.org/Hosts/Linux. The test has proceeded on an Ubuntu 18.04 server machine.
QEMU Build sudo apt install libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev \ libgtk-3-dev git clone git://git.qemu-project.org/qemu.git cd qemu git checkout v4.2.0 mkdir -p $HOME/qemu.sandbox/bin cd $HOME/qemu.sandbox/bin ../../qemu/configure --enable-debug --enable-gtk time make -j143 ./x86_64-softmmu/qemu-system-x86_64 -L pc-bios Guest OS Install Get an Ubuntu server install image:</description>
    </item>
    <item>
      <title>LKML News v5.5-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc2/</link>
      <pubDate>Mon, 09 Dec 2019 18:54:28 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc2/</guid>
      <description>[PATCHSET 0/5] Support for RWF_UNCACHED https://lkml.kernel.org/r/20191210162454.8608-1-axboe@kernel.dk
As the buffered IO uses the page cache, an intensive buffered IO workload using very huge file can cause memory pressure by inflating the page cache. Changing the workload to do direct IO can solve this problem, but the modification is not so simple. Jens Axboe thus implemented RWF_UNCACHED flag, which skips use of the page cache if the given IO target is not in the page cache already.</description>
    </item>
    <item>
      <title>My recent research will be presented at the MIDDLEWARE&#39;19</title>
      <link>https://sjp38.github.io/posts/en/middleware19_paper/</link>
      <pubDate>Wed, 04 Dec 2019 18:00:27 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/middleware19_paper/</guid>
      <description>A research paper, which I wrote before joining Amazon, will be presented at the Industry session of the ACM/IFIP MIDDLEWARE&#39;19. The title of the paper is &amp;ldquo;Profiling Dynamic Data Access Patterns with Controlled Overhead and Quality&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v5.5-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc1/</link>
      <pubDate>Mon, 02 Dec 2019 00:28:42 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.5-rc1/</guid>
      <description>Splitting the mmap_sem https://lkml.kernel.org/r/20191203222147.GV20752@bombadil.infradead.org
The mmap_sem is a big scalability bottleneck and there are several projects for solving it. In this mail, Matthew Wilcox suggests his plan for his solution and asks whether a exceptional case in his solution is acceptable to other people.
Linux 5.5-rc1 https://lkml.kernel.org/r/CAHk-=wiEJK=yo9vEhX_4b4ROvCqUA_rjK7g996h-5MbfOMeDrw@mail.gmail.com
Linux 5.5 merge window closed and the -rc1 has released. It was a tiny bit larger release compared to recent several releases, but fairly regular overall.</description>
    </item>
    <item>
      <title>LKML News v5.4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4/</link>
      <pubDate>Tue, 19 Nov 2019 23:13:19 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4/</guid>
      <description>[PATCH RFC v3 00/36] Add KernelMemorySanitizer infrastructure https://lkml.kernel.org/r/20191122112621.204798-1-glider@google.com
Google&amp;rsquo;s third KMSAN RFC patchset that detects errors caused by accessing uninitialized memory areas. Like other SAN series, it has been used in Google syzkaller and found over 200 bugs in the last two years.
LSF/MM/BPF: 2020: Call for Proposals https://lkml.kernel.org/r/20191122172502.vffyfxlqejthjib6@macbook-pro-91.dhcp.thefacebook.com
LSF/MM&amp;rsquo;s CFP for the next year was released. From next year, BPF sessions will be added to LSF/MM, so the name has changed to LSF/MM/BPF.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc8/</link>
      <pubDate>Tue, 12 Nov 2019 20:08:10 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc8/</guid>
      <description>[PATCH 00/13] Finish off [smp_]read_barrier_depends() https://lkml.kernel.org/r/20191108170120.22331-1-will@kernel.org
The memory model element which is depends only on Alpha, smp_read_barrier_depends() is built into READ_ONCE(), so that you don&amp;rsquo;t have to worry about Alpha in non-alpha-specific kernel code. Nevertheless, the author of this patchset concerned about the continuing uploads of the code that cares it. This patchset removes the description of the feature from all documentation and comments in the kernel code.
[PATCH v4 00/10] Add Kernel Concurrency Sanitizer (KCSAN) https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc7/</link>
      <pubDate>Mon, 11 Nov 2019 07:17:00 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc7/</guid>
      <description>Linux 5.4-rc7 https://lkml.kernel.org/r/CAHk-=wivmGEOTha5XkRHgH6VwfiroiN+PFVMNK3B0r-d0eFLPQ@mail.gmail.com
일곱번째 rc 버전이 릴리즈 되었습니다. 지난 rc6 때도 변경량이 생각보다 많아 토발즈가 고민했는데, 이번주도 토발즈가 원했던 것보단 변경량이 많았다고 하는군요. 다음주에 rc8 을 낼지 5.4 정식 버전을 낼지는 좀 더 고민해 봐야겠다고 합니다.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc6/</link>
      <pubDate>Sat, 02 Nov 2019 09:24:21 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc6/</guid>
      <description>[PATCH V8] mm/debug: Add tests validating architecture page table helpers https://lkml.kernel.org/r/1572240562-23630-1-git-send-email-anshuman.khandual@arm.com
아키텍쳐별 페이지 테이블 헬퍼 등을 테스트 하는 코드를 추가하는 패치입니다. CONFIG_DEBUG_VM_PGTABLE 컨피규레이션이 켜져 있으면 동작합니다.
[PATCH RFC v2 00/25] Add KernelMemorySanitizer infrastructure https://lkml.kernel.org/r/20191030142237.249532-1-glider@google.com
초기화 되지 않은 메모리 영역에 액세스 하는 에러를 찾아주는 KMSAN 을 커널에 추가하는 패치입니다. KCSAN 과 비슷하게 syzkaller 를 통해 돌아가게끔 되어 있군요.
False positive 문제가 존재할 수는 있는 모양입니다만, 구글 내부에서 syzbot 을 통해 테스트 한 환경에서는 중요한 false positive 는 나오지 않은 모양입니다.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc5/</link>
      <pubDate>Sun, 27 Oct 2019 12:48:30 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc5/</guid>
      <description>[PATCH 00/12] mm: remove __ARCH_HAS_4LEVEL_HACK https://lkml.kernel.org/r/1571822941-29776-1-git-send-email-rppt@kernel.org
서로 다른 아키텍쳐 간의 페이지 테이블 구조로 인해 사용해야 했던 __ARCH_HAS_4LEVEL_HACK 을 제거하는 패치입니다. Alpha, arm, c6x 등의 아키텍쳐가 변경되는군요. UML, qemu 등에서 부팅 테스트를 거쳤군요.
Linux 5.4-rc5 https://lkml.kernel.org/r/CAHk-=wgpewLxHxnO71tFHh=M4C4iUofJykMqq3r=eRyxUyVsiw@mail.gmail.com
다섯번째 rc 버전 릴리즈입니다. 하지만 안타깝게도 이번 릴리즈는 마냥 조용하진 않았다는군요. 최근의 다른 rc5 들에 비하면 조금 큰 크기의 릴리즈가 되었습니다. 그렇다곤 해도 아주 특이할 만한 정도는 아니라 토발즈도 큰 걱정은 없다는군요.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc4/</link>
      <pubDate>Wed, 16 Oct 2019 20:29:00 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc4/</guid>
      <description>[PATCH 0/8] Add Kernel Concurrency Sanitizer (KCSAN) https://lkml.kernel.org/r/20191016083959.186860-1-elver@google.com
구글에서 만든 동시성 버그 탐색기능, KCSAN 을 추가하는 패치셋입니다. 처음 세상에 모습을 드러낸건 9월이었고, 최근 컨퍼런스들에서도 발표가 있었죠. 메커니즘은 간단하다면 간단한, 샘플링 기반입니다. 구글 내부 fuzzing tester 인 syzkaller 는 이미 이 기능을 켠채 돌아간다는군요.
[PATCH 2/2] mm, zswap: Support THP https://lkml.kernel.org/r/1571111349-5041-2-git-send-email-teawater@gmail.com
Zswap 이THP 를 지원하도록 수정하는 패치입니다. 그냥 zswap_frontswap_store() 함수가 THP 페이지를 연속적인 4 KiB 페이지로 인식하고 처리하게끔 했군요.
[PATCH RFC v1 00/26] Add KernelMemorySanitizer infrastructure https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc3/</link>
      <pubDate>Sun, 13 Oct 2019 12:22:50 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc3/</guid>
      <description>Linux 5.4-rc3 https://lkml.kernel.org/r/CAHk-=wjOhveT=qrq8HHyL7gpA5fmBtDa2ue7sO5ZSEBrrcY6Vg@mail.gmail.com
세번째 rc 릴리즈입니다. 실제 문제가 발견되고 그에 대한 수정이 본격적으로 시작되는 시즌이라 rc2보단 당연히 크지만 역대 rc3 들과 비교하면 작은 편의 릴리즈라는군요. staging driver 일부가 사라진 게 조금 릴리즈 크기를 크게 보이게 만들 수 있다는게 그나마 유의할 점일까요.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc2/</link>
      <pubDate>Sat, 05 Oct 2019 11:46:07 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc2/</guid>
      <description>[PATCH v18 00/19] kunit: introduce KUnit, the Linux kernel unit testing framework https://lkml.kernel.org/r/20190923090249.127984-1-brendanhiggins@google.com
어떻게 보면 별거 아닌 이유로 5.4 머지윈도우에서 튕겨나가고 만 kunit. 요청받은대로 파일 위치를 하위 디렉토리로 변경한 kunit 새 버전의 패치셋이 올라왔습니다. &amp;lsquo;kunit/&amp;rsquo; 디렉토리와 kunit 을 위한 &amp;lsquo;Kconfig&amp;rsquo; 파일을 &amp;rsquo;lib/&amp;rsquo; 아래로 옮겼군요.
이후 벌어진 대화가 재미있는데요, 토발즈는 이걸 5.5에 넣을 예정인데, 가능하면 그동안 실제 테스트 코드도 추가되면 좋겠다고 했습니다. 근데 테스트 프레임웍이 머지안되었는데 테스트 코드를? 메인테이너 간에 일이 복잡해지고 컨플릭 날 확률이 높아지니 이걸로 꽤 많은 이야기가 있었습니다.</description>
    </item>
    <item>
      <title>LKML News v5.4-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc1/</link>
      <pubDate>Sat, 21 Sep 2019 10:00:48 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.4-rc1/</guid>
      <description>[PATCH 0/2] introduce new perf-script page-reclaim https://lkml.kernel.org/r/1568817522-8754-1-git-send-email-laoar.shao@gmail.com
Page reclaim 관련 성능 메트릭을 분석하기 위한 perf script 커맨드를 추가하는 패치입니다. Direct reclaim 으로 인한 응답시간 폭증, page reclaim 이 왜 일어났는지, page reclaim 의 효과는 어땠는지 등을 알 수 있다는군요.
구체적으로는 direct reclaim 이 몇번 일어났는지, 그 latency 분포는 어땠는지, file / anon page 별로 reclaim, scan, sync write, async write 이 몇번 일어났는지, kswapd 는 몇번 일어났는지, kswapd latency 는 어땠는지 등등을 보입니다.</description>
    </item>
    <item>
      <title>Richard Stallman Resigns</title>
      <link>https://sjp38.github.io/posts/en/rms_resigns/</link>
      <pubDate>Thu, 19 Sep 2019 21:57:01 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/rms_resigns/</guid>
      <description>몇일 전, 리차드 스톨만이 FSF 회장은 물론이고 의장직에서도 사임한다는 소식이 전해졌습니다. 무슨 일이 있었는지 아래의 reddit 코멘트가 가장 잘 설명하고 있다는 LWN 코멘트[1] 를 참고해, 해당 reddit 코멘트를 번역해 봅니다.
[1] https://lwn.net/Articles/799391/
최근 공개된 한 여성의 증언에 따르면 그녀가 17세 때, Epstein 이 그녀에게 Marvin Minsky 와 성관계를 가지라고 했습니다. Minsky 는 MIT Media Lab 창시자이자 A.I 선도자였으며, 2016년에 사망했습니다. 스톨만은 한 메일링 리스트에서 (Minsky 를 성폭행으로 비난하는 어느 시위 주도자의 주장에 대한 답변으로) 이렇게 주장했습니다, 자신도 Epstein 은 비난하지만, Minsky 는 그녀가 강요당한 걸 몰랐을 가능성이 있다구요:</description>
    </item>
    <item>
      <title>LKML News v5.3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3/</link>
      <pubDate>Thu, 12 Sep 2019 17:59:25 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3/</guid>
      <description>[PATCH] x86/mm: Enable 5-level paging support by default https://lkml.kernel.org/r/20190913095452.40592-1-kirill.shutemov@linux.intel.com
5 레벨 페이지 테이블 기능이 들어간지도 어느덧 시간이 지났죠. 인텔 내부적 테스트 상으론 이 기능을 켰을 때 4 레벨 페이지 테이블 기계에서도 딱히 리그레션 등은 나타나지 않았고, 주요 배포판들은 5 레벨 페이지 테이블 서포트를 기본으로 켤것으로 보인다고 합니다. 따라서 이 기능을 아예 디폴트로 켜져있게 하는 패치입니다.
v5.4 에 들어가기엔 좀 늦은 관계로, v5.5 에 들어갈 것 같다는군요.
Linux 5.3 https://lkml.kernel.org/r/CAHk-=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com
LPC 와 커널 서밋 등으로 인해 한주 늦춰진 5.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc8/</link>
      <pubDate>Wed, 04 Sep 2019 23:56:59 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc8/</guid>
      <description>[PATCH RFC 00/14] The new slab memory controller https://lkml.kernel.org/r/20190905214553.1643060-1-guro@fb.com
슬랩 할당자의 실제 메모리 활용률이 대부분 45-65 퍼센트에 불과했다고 합니다. 이는 슬랩 페이지가 각 메모리 cgroup 마다 배타적으로 사용되기 때문입니다. 적은 메모리만 사용하는 cgroup 여러개가 존재하면 슬랩에서 크게 받아놓은 메모리에서 조금씩만 실제 사용되니까 전체 활용률은 낮게 되는거죠. 이 RFC 패치셋은 서로 다른 cgroup 들이 슬랩 페이지를 공유할 수 있게 함으로써 이 문제를 해결합니다.
Linux 5.3-rc8 https://lkml.kernel.org/r/CAHk-=whBQ+6c-h+htiv6pp8ndtv97+45AH9WvdZougDRM6M4VQ@mail.gmail.com
평소대로라면 5.3 정식 릴리즈가 되었을테고 별다른 문제는 없었지만, rc7 릴리즈에서 이야기된대로 LPC 와 커널 서밋도 있고 한 이유로, -rc8 이 릴리즈 되었습니다.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc7/</link>
      <pubDate>Mon, 02 Sep 2019 10:57:44 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc7/</guid>
      <description>평소보다 늦은 월요일 아침 릴리즈가 이뤄졌습니다. 일요일에 토발즈가 컴퓨터로부터 떨어져 있었다는군요.
늦어진 릴리즈 덕분에 뒤늦게 들어온 풀리퀘스트를 더 받을 수 있었고, 이로 인해 이번 rc 릴리즈는 평소보다 좀 사이즈가 큽니다. 따라서 이번 릴리즈의 크기가 불안정성을 의미하는 게 아니라 5.3 정식 릴리즈를 늦출 필요는 없습니다만, 공교롭게도 또한 다음주는 LPC 와 커널 서밋이 있죠. 토발즈도 그렇고 많은 다른 개발자들도 이때 LPC 와 커널 서밋에 참가할 거라, rc7 을 마지막으로 5.3 릴리즈를 하면 5.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc6/</link>
      <pubDate>Thu, 22 Aug 2019 15:30:54 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc6/</guid>
      <description>Linux 5.3-rc6 https://lkml.kernel.org/r/CAHk-=wgAKCTq+t5YnG6HzrF62=rr9H=q3LqokEP0_bQRHLwYNw@mail.gmail.com
오늘은 리눅스의 28번째 생일입니다. 따라서 오늘 rc6 릴리즈는 28년만의 릴리즈이기도 하군요. 토발즈도 감회가 깊었는지 오늘의 릴리즈 메일엔 최초 릴리즈 메일에 적었던 내용과 비슷하게 시작 부분을 꾸몄네요. 감회 깊은 날, 감회 깊은 릴리즈입니다.
리눅스를 사용하는 여러분들 안녕하세요, 저는 486 AT 클론과 그외의 많은 다른 하드웨어를 위한 (자유) 운영체제를 (취미보단 더 진지하게) 만들고 있습니다. 이 일은 28년째 지속되고 있고, 아직도 끝나지 않았습니다. 이 릴리즈에 의해 만들어진 (또는 그보다 오래된) 모든 버그에 대한 피드백을 부탁드립니다.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc5/</link>
      <pubDate>Mon, 19 Aug 2019 14:19:58 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc5/</guid>
      <description>[RFC PATCH 0/2] Add predictive memory reclamation and compaction https://lkml.kernel.org/r/20190813014012.30232-1-khalid.aziz@oracle.com
커널의 page reclamation 과 compaction 등은 기본적으로 시스템 메모리 잔여량이 부족할 때 시작됩니다. 하지만 이땐 이미 때가 늦었습니다. reclamation 과 compaction 을 열심히 하긴 하지만 어플리케이션은 이미 메모리 부족으로 인한 응답시간 폭증 등을 겪게 됩니다.
이 패치셋은 시스템의 메모리 부족을 미리 예측하고 reclamation 과 compaction 을 시작하기 위한 패치셋입니다. 시간축에 따라 메모리 사용량 변화 추세를 보면 이걸 예측할 수 있지 않겠냐는 것이죠.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc4/</link>
      <pubDate>Mon, 12 Aug 2019 01:40:13 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc4/</guid>
      <description>[RFC PATCH v6 00/92] VM introspection https://lkml.kernel.org/r/20190809160047.8319-1-alazar@bitdefender.com
호스트 또는 별도 VM 에서 돌아가는 어플리케이션이 다른 VM들을 제어하거나 상태를 알아보거나 shadow 페이지 테이블을 조정하거나 특정 이벤트 발생시 알림을 받거나 할 수 있게 해주는 KVM introspection 서브시스템을 제안하는 패치입니다. 무려 92개짜리의 거대한 패치군요.
[PATCH v4 1/5] mm/page_idle: Add per-pid idle page tracking using virtual indexing https://lkml.kernel.org/r/20190805170451.26009-1-joel@joelfernandes.org
페이지 액세스 여부를 알아볼 수 있는 page_idle 기능을 프로세스별로 트래킹 하기 편하게 만들어 주는 패치의 네번째 버전입니다.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc3/</link>
      <pubDate>Wed, 31 Jul 2019 08:40:48 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc3/</guid>
      <description>[PATCH v5 00/14] Provide generic top-down mmap layout functions https://lkml.kernel.org/r/20190730055113.23635-1-alex@ghiti.fr
아키텍쳐별로 다르게 구현되어 있던 mmap 레이아웃 함수들을 범용화 시키는 패치셋, 다섯번째 버전입니다.
[PATCH v10 00/22] Generic page walk and ptdump https://lkml.kernel.org/r/20190731154603.41797-1-steven.price@arm.com
역시 아키텍쳐별로 다르게 구현되어 있던 page table walk 과 page table dump 기능을 범용화 시키는 패치입니다. 벌써 10번째 버전이군요.
[PATCH 0/3] address hugetlb page allocation stalls https://lkml.kernel.org/r/20190802223930.30971-1-mike.kravetz@oracle.com
sysctl 이나 procfs 를 통한 hugetlb 페이지 할당은 수분이나 수시간까지도 오래 걸릴 수 있습니다.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc2/</link>
      <pubDate>Fri, 26 Jul 2019 08:41:19 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc2/</guid>
      <description>[PATCH v6 0/5] Introduce MADV_COLD and MADV_PAGEOUT https://lkml.kernel.org/r/20190723062539.198697-1-minchan@kernel.org
어플리케이션의 메모리를 좀 더 적극적으로 reclaim 시킴으로써 반응성을 높이기 위한 패치셋의 일부를 따로 떼어낸, MADV_COLD 와 MADV_PAGEOUT 힌트를 madvise() 에 추가하는 패치의 여섯번째 버전입니다.
일곱번째 버전도 빠르게 올라왔군요: https://lkml.kernel.org/r/20190726023435.214162-1-minchan@kernel.org 단순히 mmotm 최신 버전 위로 리베이스 한 것 같네요.
[PATCH v9 00/21] Generic page walk and ptdump https://lkml.kernel.org/r/20190722154210.42799-1-steven.price@arm.com
x86 과 arm64 가 범용적 페이지 테이블 워킹을 하도록 했던 해치셋을 조금 더 확장한 버전입니다. 기존 대비 페이지 테이블 덤프 기능도 일반화 시킨게 차이군요.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2019</title>
      <link>https://sjp38.github.io/posts/en/kernelsummit2019_talk/</link>
      <pubDate>Sat, 20 Jul 2019 02:41:46 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernelsummit2019_talk/</guid>
      <description>My talk proposal to the Linux Kernel Summit of this year which is co-located with the Linux Plumbers has accepted! Hope to see you in Lisbon. The title of the talk is, &amp;ldquo;Tracing Data Access Pattern with Bounded Overhead and Best-effort Accuracy&amp;rdquo;.</description>
    </item>
    <item>
      <title>LKML News v5.3-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc1/</link>
      <pubDate>Thu, 11 Jul 2019 02:42:22 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.3-rc1/</guid>
      <description>[PATCH v5 0/5] Introduce MADV_COLD and MADV_PAGEOUT https://lkml.kernel.org/r/20190714233401.36909-1-minchan@kernel.org
MADV_COLD 와 MADV_PAGEOUT 을 구현하는 패치, 어느새 다섯번째 버전입니다. 큰 변경은 없는 것 같군요.
[PATCH v2 0/3] Make working with compound pages easier https://lkml.kernel.org/r/20190721104612.19120-1-willy@infradead.org
Huge page 를 다루기 쉽게끔 page_size(), page_shift(), 그리고 compound_nr() 이라는 세개의 helper 함수를 추가하고 이 함수들을 사용하게끔 기존 코드를 다듬는 패치셋입니다.
PAGE_SIZE &amp;lt;&amp;lt; compound_order(page) 는 page_size(page) 가, PAGE_SHIFT + compound_order(page) 는 page_shift(page) 가, 그리고 1 &amp;lt;&amp;lt; compound_order(page) 는 compound_nr(page) 가 되는 것이죠.</description>
    </item>
    <item>
      <title>LKML News v5.2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2/</link>
      <pubDate>Mon, 01 Jul 2019 15:48:04 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2/</guid>
      <description>[PATCH v5 00/12] S.A.R.A. a new stacked LSM https://lkml.kernel.org/r/1562410493-8661-1-git-send-email-s.mesoraca16@gmail.com
다양한 보안 측정을 위한 공용 인터페이스를 제공하는 스택 기반의 리눅스 보안 모듈입니다. 이름이 재밌네요. S.A.R.A 는 S.A.R.A is Another Recursive Acronym 의 약자라고 합니다.
Linux 5.2 https://lkml.kernel.org/r/CAHk-=whtW3FdruS-q2zehJPSan1SKtHoFHKX28A3J_1gfTFUMw@mail.gmail.com
이번 릴리즈 중간엔 토발즈의 여행이 있었죠. 초반엔 예상 외로 큰 rc 릴리즈도 있었구요. 해서 이번주는 rc8 이 릴리즈 될지 5.2가 릴리즈 될지 저도 좀 궁금했는데, 최종적으로 5.2 릴리즈가 되었습니다. 토발즈도 rc8 을 릴리즈 할까 망설였다고 하네요.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc7/</link>
      <pubDate>Thu, 27 Jun 2019 15:35:12 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc7/</guid>
      <description>[PATCH v7 0/4] THP aware uprobe https://lkml.kernel.org/r/20190625235325.2096441-1-songliubraving@fb.com
uprobe 가 THP 로 받쳐지고 있는 코드에 적용되면 이 THP 는 regular page 로 쪼개집니다. 이 패치셋은 이 문제를 해결합니다.
[PATCH v9 0/6] Enable THP for text section of non-shmem files https://lkml.kernel.org/r/20190625001246.685563-1-songliubraving@fb.com
어플리케이션의 텍스트 섹션을 THP 로 지원해 줌으로써 iTLB 미스를 줄이고 성능을 높이고자 하는 패치셋입니다.
Linux 5.2-rc7 https://lkml.kernel.org/r/CAHk-=wgL5GyQ93o=VyiymFPfw=Z0TGHEPBJrCtGSqFSW2Mhx8g@mail.gmail.com
여전히 토발즈의 여행 탓에 릴리즈가 평소와 조금 다른 시간대에 이뤄졌습니다, 토발즈 자신의 시점으로는 평소와 같은 일요일 오후지만요.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc6/</link>
      <pubDate>Mon, 17 Jun 2019 19:22:48 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc6/</guid>
      <description>[PATCH NOTFORMERGE 0/5] Extend remote madvise API to KSM hints https://lkml.kernel.org/r/20190616085835.953-1-oleksandr@redhat.com
이 블로그에서도 여러번 소개한 remote madvise() 에 대한 관심이 많이 있는 것 같네요. 이 패치셋은 MADV_MERGEABLE, MADV_UNMERGEABLE 을 추가해서 KSM 힌트도 madvise() 를 통해 줄 수 있게 합니다.
논의를 위한 패치라 이대로 머지되진 않겠지만, 사용처가 많이 늘어날 것 같네요.
Linux 5.2-rc6 https://lkml.kernel.org/r/CAHk-=wg+nPKhdn=vKSgJQkfOSGhauTO4jyt=0FH9cnM_QChDLw@mail.gmail.com
안타깝게도 기대와 달리 이번 릴리즈는 조용하지 않았습니다. 이번 5.2 개발을 위한 릴리즈 중 머지 윈도우와 rc1 을 제외하면 rc6 가 오히려 가장 많은 변화를 담고 있다는군요.</description>
    </item>
    <item>
      <title>My Job Interview Record (2019 summer)</title>
      <link>https://sjp38.github.io/posts/en/my_job_interview/</link>
      <pubDate>Mon, 17 Jun 2019 18:16:05 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/my_job_interview/</guid>
      <description>이번 여름 졸업을 앞두고 구직 활동을 한 결과, 얼마전 운좋게도 미국에 본사를 두고 있는 한 글로벌 IT 기업의 커널/하이퍼바이저 팀으로부터 잡 오퍼를 받았습니다. 취업을 향한 한걸음 한걸음이 어둠 속을 더듬더듬, 때로는 막무가내로 헤쳐나가는 느낌이었는데, 이런 저의 경험을 공유하는게 어떤 분들께는 도움이 되지 않을까 싶어 공유해 봅니다.
목표설정 취업을 할까 포닥을 할까 모호한 고민만 하다가 어느새 4월 중순이 되어서야 해외 IT 회사로 직장을 구하겠다는 목표가 설정되었습니다. 그제서야 든 생각은 너무 늦었다, 준비가 부족하다, 하는 것이었습니다.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc5/</link>
      <pubDate>Mon, 10 Jun 2019 10:17:29 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc5/</guid>
      <description>[PATCH v3 0/5] THP aware uprobe https://lkml.kernel.org/r/20190612220320.2223898-1-songliubraving@fb.com
uprobe 는 THP 로 되어있는 페이지를 쪼갭니다. 이로 인해 성능 향상 효과가 사라지죠. 이 패치셋은 uprobe 가 THP 를 인식하게 해서 이런 문제를 제거합니다.
[PATCH v2 0/5] Introduce MADV_COLD and MADV_PAGEOUT https://lkml.kernel.org/r/20190610111252.239156-1-minchan@kernel.org
기존에도 소개한 MADV_COLD 와 MADV_PAGEOUT 을 madvise() 에 추가하는 패치셋의 두번째 버전입니다. 이 패치셋을 ChromeOS 팀의 Brian Geffon 은 가져다가 탭이 백그라운드로 들어가고 45초 이상 그 상태를 유지하면 이 기능을 사용해서 페이지를 proactively swap out 시켰는데, 그 결과 tab 전환 속도가 25% 나 빨라졌다고 합니다.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc4/</link>
      <pubDate>Tue, 04 Jun 2019 10:49:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc4/</guid>
      <description>[PATCH 00/15] Slab Movable Objects (SMO) https://lkml.kernel.org/r/20190603042637.2018-1-tobin@kernel.org
전에도 RFC 패치셋은 여기서도 소개했었죠. Slab 할당자에 할당받은 객체들의 이동이 가능하게끔 하는 패치셋의 정식 패치 버전이 나왔습니다. 변경된 인터페이스는 XArray 와 dcache 에 적용되는군요.
[PATCH v1 0/4] Introduce MADV_COLD and MADV_PAGEOUT https://lkml.kernel.org/r/20190603053655.127730-1-minchan@kernel.org
바로 지난주에도 소개한 external madvise 패치셋이 쪼개졌네요. MADV_COLD 와 MADV_PAGEOUT 두개의 새로운 advice 기능 추가 버전만 담은 패치셋입니다. 이게 더 일찍 머지될 가능성이 생겼군요.
Linux 5.2-rc4 https://lkml.kernel.org/r/CAHk-=wjm7FQxdF=RKa8Xe23CLNNpbGDOACewgo8e-hwDJ8TyQg@mail.gmail.com
메일을 받고 깜짝 놀랐습니다, 평소보다 빨랐기 때문이죠.</description>
    </item>
    <item>
      <title>Linux Development History Visualization Youtube Channel</title>
      <link>https://sjp38.github.io/posts/en/linux_develop_visualization_youtube/</link>
      <pubDate>Tue, 04 Jun 2019 10:44:33 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/linux_develop_visualization_youtube/</guid>
      <description>I created a Youtube channel[1]. I will upload videos for the git history between each release of the Linux kernel, just for jun. I use gource[2] for the visualization for now. The scripts I use for these videos are available[3] under GPL v3. If you want, you may use the scripts for your own video generation.
[1] https://www.youtube.com/channel/UCI7qoGt1hOfCsI8hFqriYCg
[2] https://gource.io/
[3] https://github.com/sjp38/linux_development_visualization</description>
    </item>
    <item>
      <title>DAPHICX: Data Access Pattern Hint Injecting Compiler Extension</title>
      <link>https://sjp38.github.io/posts/en/daphicx/</link>
      <pubDate>Thu, 30 May 2019 18:59:53 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/daphicx/</guid>
      <description>Memory pressure is inevitable as the size of working sets is rapidly growing while the capacity of dynamic random access memory (DRAM) is not. Meanwhile, storage devices have evolved so that their speed is comparable to the speed of DRAM while their capacity scales are comparable to that of hard disk drives (HDD). Thus, hierarchial memory systems configuring DRAM as the main memory and high-end storages as swap devices will be common.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc3/</link>
      <pubDate>Tue, 28 May 2019 23:28:37 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc3/</guid>
      <description>[PATCH tip/core/rcu 0/12] https://lkml.kernel.org/r/20190530145204.GA28526@linux.ibm.com
Paul E. McKenney 로부터의 RCU flavor consolidation 관련 추가 작업과 코드 정리를 위한 패치셋입니다.
[PATCH tip/core/rcu 0/2] Documentation updates for v5.3 https://lkml.kernel.org/r/20190530145504.GA29820@linux.ibm.com
RCU 문서 업데이트를 담고 있는 패치셋입니다. rcuref 의 실제 예제와 rcu_task_stall_timeout 의 정의에 대한 내용이 추가되었군요!
[PATCH tip/core/rcu 0/21] Torture-test updates for v5.3 https://lkml.kernel.org/r/20190530151650.GA422@linux.ibm.com
RCU 와 spinlock 등을 위해 사용되는 torture 테스트 업데이트를 담은 패치셋입니다. 무려 21개 패치네요!
[RFCv2 0/6] introduce memory hinting API for external process https://lkml.</description>
    </item>
    <item>
      <title>Biscuit (OS Written in Go) Install</title>
      <link>https://sjp38.github.io/posts/en/biscuit_os_install/</link>
      <pubDate>Sun, 26 May 2019 23:27:44 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/biscuit_os_install/</guid>
      <description>$ git clone https://go.googlesource.com/go go1.4; cd go1.4 $ git checkout release-branch.go1.4; cd src $ ./make.bash $ cd ../../ $ git clone https://github.com/mit-pdos/biscuit.git; cd biscuit/src $ ./make.bash $ cd ../biscuit/ $ make qemu CPUS=2 </description>
    </item>
    <item>
      <title>LKML News v5.2-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc2/</link>
      <pubDate>Tue, 21 May 2019 01:27:47 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc2/</guid>
      <description>[RFC PATCH v5 00/16] Slab Movable Objects (SMO) https://lkml.kernel.org/r/20190520054017.32299-1-tobin@kernel.org
이 블로그에서도 소개한 Slab movable objects 패치셋의 다섯번째 버전입니다. RFC 로는 아마도 마지막 버전이 될거라는군요.
[RFC PATCH 00/14] mmap_sem range locking https://lkml.kernel.org/r/20190521045242.24378-1-dave@stgolabs.net
이번 LSFMM 에서 개인적으로 가장 기대했던 세션이 mmap_sem 해결에 대한 세션이었습니다. 해당 세션에서는 예전부터 이야기가 나온 range locking 에 대해서도 이야기가 있었는데요, 이 패치셋은 이 range locking 을 사용한 mmap_sem 문제 해결 시도를 다시 정리해 RFC 의 형태로 올린 것입니다.</description>
    </item>
    <item>
      <title>LKML News v5.2-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc1/</link>
      <pubDate>Wed, 08 May 2019 10:22:05 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.2-rc1/</guid>
      <description>[PATCH] mm: Introduce page_size() https://lkml.kernel.org/r/20190510181242.24580-1-willy@infradead.org
Huge page 등의 경우를 위해 페이지의 실제 크기를 구하려면 PAGE_SIZE &amp;lt;&amp;lt; compound_order(page) 를 해야 하는게 짜증난 Matthew Wilcox 가 별도의 함수를 만들고 기존 코드들을 이 함수를 사용하도록 변경한 패치입니다.
[PATCH v2 00/15] Remove &amp;lsquo;order&amp;rsquo; argument from many mm functions https://lkml.kernel.org/r/20190510135038.17129-1-willy@infradead.org
mm 쪽 함수들은 order 를 인자로 많이 받죠. 어차피 gfp_t 는 무조건 받으니까 이 타입의 상위 bit 을 order 목적으로 사용하자는 패치입니다. 이 패치의 장점은? 커널 텍스트 사이즈를 줄인다는 것입니다 :)</description>
    </item>
    <item>
      <title>LKML News v5.1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1/</link>
      <pubDate>Tue, 30 Apr 2019 14:16:49 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1/</guid>
      <description>[RFC PATCH v4 00/15] Slab Movable Objects (SMO) https://lkml.kernel.org/r/20190430030746.26102-1-tobin@kernel.org
앞서 이 블로그에서도 공유한 SMO 패치의 새 버전입니다. 이번 버전은 dcache 쪽 코드를 많이 수정했군요.
Linux 5.1 https://lkml.kernel.org/r/CAHk-=whsbDxdapMJGvy9OkVSrKMsKRJBTrH-Qj-qTbkMUGnWUw@mail.gmail.com
5.1 릴리즈입니다. 일요일 오후 릴리즈란 점은 평소와 같지만 평소보다 조금 늦은 시간이긴 했는데요, 오늘 갑자기 받은 풀 리퀘스트도 있었고, 이번 머지윈도우 기간에 졸업식에 참석해야 해서 조금 망설였다는군요.
하지만 풀리퀘스트도 그렇게 크진 않고, 몇일 머지윈도우에 자리 비우는 정도는 어떻게든 할 수 있을거라 생각해서 5.1 릴리즈가 이뤄졌습니다!</description>
    </item>
    <item>
      <title>Fedora28 ibus-hangul input problem</title>
      <link>https://sjp38.github.io/posts/en/fedora28_hangul_problem/</link>
      <pubDate>Fri, 26 Apr 2019 11:05:59 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/fedora28_hangul_problem/</guid>
      <description>어느날부터 Fedora 터미널에서 한글 입력이 매우 불편해졌습니다. 한글 모드에서는 backspace, enter, esc 등의 특수키가 하나도 안먹힙니다. Vim 을 쓰는 입장에선 매우 불편하죠. 알고보니 ibus-hangul 버그인 것 같습니다[1]. 아래 커맨드로 ibus-hangul 을 문제 없던 버전으로 다운그레이드 시키고 세션을 재시작 하면 문제가 사라집니다.
sudo dnf downgrade ibus-hangul-1.5.0-12.fc28.x86_64 [1] http://www.fedoralinux.or.kr/board-read.do?boardId=bbs3&amp;amp;boardNo=153170459823549&amp;amp;command=READ&amp;amp;page=1&amp;amp;categoryId=-1</description>
    </item>
    <item>
      <title>LKML News v5.1-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc7/</link>
      <pubDate>Fri, 26 Apr 2019 11:02:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc7/</guid>
      <description>Re: [LSF/MM] Preliminary agenda ? Anyone &amp;hellip; anyone ? Bueller ? https://lkml.kernel.org/r/83fda245-849a-70cc-dde0-5c451938ee97@kernel.dk
올해의 LSFMM 스케쥴이 구글 문서로 공유되고 있었군요: https://docs.google.com/spreadsheets/d/1Z1pDL-XeUT1ZwMWrBL8T8q3vtSqZpLPgF3Bzu_jejfk/edit#gid=0
[LSF/MM TOPIC] Proactive Memory Reclaim https://lkml.kernel.org/r/CALvZod4V+56pZbPkFDYO3+60Xr0_ZjiSgrfJKs_=Bd4AjdvFzA@mail.gmail.com
이제 LSFMM 이 얼마 안남았습니다만, 또하나의 주제 제안이 올라왔습니다.
메모리 오버커밋으로 인해 direct reclaim 이 발생하고, 이는 latency sensitive 어플리케이션의 latency 를 크게 저하시키니, 시스템이 좀 더 적극적으로 memory reclaim 을 해서 direct reclaim 을 최소화 시켜보자는 건데요. 잘 접근되지 않는 cold memory 를 추적해서 미리미리 reclaim 시키자는 겁니다.</description>
    </item>
    <item>
      <title>I will have a talk at the Hotstorage&#39;19</title>
      <link>https://sjp38.github.io/posts/en/hotstorage2019_talk/</link>
      <pubDate>Thu, 18 Apr 2019 09:37:04 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/hotstorage2019_talk/</guid>
      <description>HotStorage&#39;19 에 제출한 제 최근 연구에 대한 논문이 accept 되어 7월에 해당 워크샵에서 이에 대한 내용을 발표하게 되었습니다. 논문 제목은 &amp;ldquo;Automating Context Based Access Pattern Hint Injection for System Performance and Swap Storage Durability&amp;rdquo; 입니다.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc6/</link>
      <pubDate>Tue, 16 Apr 2019 23:02:17 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc6/</guid>
      <description>[PATCH v12 00/31] Speculative page faults https://lkml.kernl.org/r/20190416134522.17540-1-ldufour@linux.ibm.com
오랫만에 업데이트 된 SPF 패치셋으로, 이번 패치셋은 v5.1 위로 리베이스 되었습니다. RCU 에서 Fine-grained reader-writer locking 으로 옮겼던 vma 보호를 다시 RCU 로 되돌린 게 눈에 띄는군요. 기존엔 패치셋만 공개했는데, 이젠 패치셋이 적용된 코드 트리를 github 으로도 제공합니다: https://github.com/ldu4/linux/tree/spf-v12
[PATCH v3 00/11] Provide generic top-down mmap layout functions https://lkml.kernel.org/r/20190417052247.17809-1-alex@ghiti.fr
아키텍쳐별로 별도 구현을 하지 않고도 전체 mmap 레이아웃을 접근할 수 있게 해주는 범용 함수들을 구현하는 패치셋입니다.</description>
    </item>
    <item>
      <title>Backtrace on C language program</title>
      <link>https://sjp38.github.io/posts/en/backtrace_c_language/</link>
      <pubDate>Tue, 09 Apr 2019 17:33:50 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/backtrace_c_language/</guid>
      <description>디버깅 과정에선 현재 어떤 코드가 어떤 함수를 거쳐 수행됐는지를 통한 컨텍스트 파악이 중요합니다. Java, Python, Go 등 대부분의 언어가 이를 위해 콜스택을 뽑을 수 있는 기능을 제공하죠. C 언어의 경우 gdb 등을 사용하면 쉽게 이를 볼 수 있지만 경우에 따라선 gdb 를 포기하고 printf() 등에만 의존해야 하기도 합니다. 이를 위한 기능이 c 라이브러리에도 있습니다, backtrace() 함수입니다. man 에도 이에 대한 설명이 있습니다만, 여기서도 간단히 소개해 봅니다.
Example Source Code 예제로 설명하는게 가장 쉽죠.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc5/</link>
      <pubDate>Tue, 09 Apr 2019 17:33:01 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc5/</guid>
      <description>[v2 RFC PATCH 0/9] Another Approach to Use PMEM as NUMA Node https://lkml.kernel.org/r/1554955019-29472-1-git-send-email-yang.shi@linux.alibaba.com
본 블로그를 통해 지속적으로 소개하고 있는, PMEM as NUMA node 를 위한, 보다 나은 hotness 기반 page location 을 위한 패치셋입니다. 기존 코멘트에 기반해서 두번째 버전을 내놓았군요.
[RFC PATCH v3 00/15] Slab Movable Objects (SMO) https://lkml.kernel.org/r/20190411013441.5415-1-tobin@kernel.org
최근 LWN 에서도 소개된 (https://lwn.net/Articles/784964/) 패치입니다. Slab allocator 에서 할당된 object 가 free page 가운데에 박혀 있어 page 를 회수할 수 없는 fragmentation 이 발생합니다.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc4/</link>
      <pubDate>Sun, 07 Apr 2019 23:17:55 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc4/</guid>
      <description>Linux v5.1-rc3 릴리즈 후 Linux v.5.1-rc4 릴리즈 사이 기간에 LKML 에 올라온 흥미로운 메일들을 소개합니다.
[PATCH v8 00/20] Convert x86 &amp;amp; arm64 to use generic page walk https://lkml.kernel.org/r/20190403141627.11664-1-steven.price@arm.com
전에 이 블로그에도 공유했던, walk_page_range() 함수가 커널에서 사용하는 페이지 테이블은 지원하지 않아서 아키텍쳐별로 page table walk 기능을 구현한 걸 walk_page_range() 의 개선을 통해 가능하게 하고자 하는 패치의 여덟번째 버전입니다.
[PATCH] mm: add vm event for page cache miss https://lkml.kernel.org/r/1554185720-26404-1-git-send-email-laoar.shao@gmail.com
Page cache miss 로 인해 사용중인 데이터베이스에 레이턴시가 증가하는 문제가 있는데, 기존 커널에는 페이지 캐시 미스 카운트를 세는 기능이 없기 때문에 만들어 봤다고 합니다.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc3/</link>
      <pubDate>Tue, 26 Mar 2019 08:53:41 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc3/</guid>
      <description>[PATCH tip/core/rcu 0/4] Documentation updates for v5.2 https://lkml.kernel.org/r/20190326230408.GA17069@linux.ibm.com
v5.2 에 머지될 목적의 RCU 문서화 업데이트 패치셋입니다.
[PATCH tip/core/rcu 0/18] Miscellaneous fixes for v5.2 https://lkml.kernel.org/r/20190326231253.GA18343@linux.ibm.com
v5.2 를 위한 RCU 의 다양한 업데이트 패치셋입니다. rcu 를 위한 메일링 리스트도 추가되었군요. rcu@vger.kernel.org 입니다.
[PATCH tip/core/rcu 0/9] Torture-test updates for v5.2 https://lkml.kernel.org/r/20190326233054.GA21523@linux.ibm.com
v5.2 를 위한 torture test 의 업데이트 패치셋입니다. LKMM 이라던지 formal verification 도 많은 발전이 있었지만, torture test 도 없어질 순 없겠죠.</description>
    </item>
    <item>
      <title>Unit test for the Linux kernel using Kunit</title>
      <link>https://sjp38.github.io/posts/en/kunit_intro/</link>
      <pubDate>Wed, 20 Mar 2019 15:32:29 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/kunit_intro/</guid>
      <description>Update (2020-01-01): KUnit has merged in v5.5 merge window. From the writing of this post, it had some changes, so below content, especially the test setup and running will not work. Recommend you to refer to the official document in the kernel for detailed tutorial. It also has a python version dependency now, so you would encounter a problem with Ubuntu 16.04. Recommend you to use later Python or Ubuntu 18.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc2/</link>
      <pubDate>Tue, 19 Mar 2019 12:11:11 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc2/</guid>
      <description>[PATCH v5 00/19] Convert x86 &amp;amp; arm64 to use generic page walk https://lkml.kernel.org/r/20190321141953.31960-1-steven.price@arm.com
커널이 walk_page_range() 함수를 제공하긴 하지만 이 함수는 커널에 의해 사용되는 페이지 테이블은 볼수가 없기 때문에 각 아키텍쳐별로 페이지 테이블 순회를 위한 기능을 별도로 만들어 사용하고 있습니다.
이 패치셋은 walk_page_range() 가 커널의 페이지 테이블을 만질 수 있도록 확장함으로써 그런 불필요한 아키텍쳐별 파편화를 줄이려 합니다.
[PATCH v6 0/7] psi: pressure stall monitors v6 https://lkml.kernel.org/r/20190319235619.260832-1-surenb@google.com
시스템이 어떤 부분의 pressure 를 받는지 쉽게 확인하기 위한 pressure stall monitor 구현 패치의 여섯 번째 버전입니다.</description>
    </item>
    <item>
      <title>LKML News v5.1-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc1/</link>
      <pubDate>Mon, 04 Mar 2019 13:07:30 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.1-rc1/</guid>
      <description>Linux v5.0 릴리즈 (2019-03-03) 부터 v5.1-rc1 릴리즈 (2019-03-17) 사이의 머지 윈도우 기간 LKML 에 올라온 흥미로운 메일들을 소개합니다.
CMA allocation failure https://lkml.kernel.org/r/57e0bc63-0be9-498b-8ffc-3b073e01e299@email.android.com
제게도 GCMA 레이턴시 관련 문의를 보냈던 분인데, LKML 에도 관련 도움을 요청하는 메일을 보냈군요.
왜 CMA 가 할당에 실패하는지 이유를 묻는 메일인데요, 답은 없습니다.
[LSF/MM TOPIC] Using XArray to manage the VMA https://lkml.kernel.org/r/7da20892-f92a-68d8-4804-c72c1cb0d090@linux.ibm.com
MM 의 오랜 숙원 중 하나는 mmap_sem 으로 인한 확장성 문제 해결이죠. 기존의 RB tree 대신 XArray 를 사용하는 것으로 새로운 시도를 시작해 보는건 어떨지 LSFMM 에서 토의해보자는, speculative page fault 의 최근 메인테이너인 Laurent 의 메일입니다.</description>
    </item>
    <item>
      <title>LKML News v5.0</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0/</link>
      <pubDate>Mon, 25 Feb 2019 13:16:39 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0/</guid>
      <description>Linux v5.0-rc8 릴리즈 (2019-02-24) 부터 Linux v5.0 릴리즈 (2019-03-03) 사이 기간에 LKML 에 올라온 흥미로운 메일들을 소개합니다.
[PATCH 0/5] [v5] Allow persistent memory to be used like normal RAM https://lkml.kernel.org/r/20190225185727.BCBD768C@viggo.jf.intel.com
앞서 몇번 소개했던, persistent memory 를 좀 많이 느린 numa node 인 것처럼 해서 시스템이 사용할 수 있게 하는 접근법의 패치 다섯번째 버전입니다. 이제 개선은 어느정도 된 것 같으니 슬슬 머지되야하지 않겠냐고 주장하는군요.
Linux v5.0 https://lkml.kernel.org/r/CAHk-=wjuG6HiGbD7DCGfvDvhr_1WZUR-eYF2qWGbYyn9k6unvg@mail.gmail.com
마침내 5.0 릴리즈입니다! 제 랩톱에도 바로 받아다가 설치했습니다!</description>
    </item>
    <item>
      <title>LKML News v5.0-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc8/</link>
      <pubDate>Tue, 19 Feb 2019 08:33:37 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc8/</guid>
      <description>Linux v5.0-rc7 릴리즈 (2019년 2월 17일) 부터 v5.0-rc8 릴리즈 (2019년 2월 24일) 사이의 기간에 LKML 에 올라온 흥미로운 메일들을 소개합니다.
[LSF/MM ATTEND] MM track: NUMA, THP locality, reclaim https://lkml.kernel.org/r/20190218143203.GW9565@techsingularity.net
Mel Gorman 의 LSF/MM 참여 메일입니다. NUMA remote THP vs NUMA local non-THP, NUMA, 메모리 계층 그리고 디바이스 메모리, NUMA rebalancing 과 메모리 reclaim 에 참여하고 싶다고 이야기 하는군요.
[LSF/MM TOPIC ][LSF/MM ATTEND] Read-only Mapping of Program Text https://lkml.kernel.org/r/379F21DD-006F-4E33-9BD5-F81F9BA75C10@oracle.com
THP 를 활용해 read-only text 를 매핑함으로써 성능을 높이려는 시도를 해오고 있는데, 하나의 base page 를 먼저 읽고 이어서 추가적인 page 를 읽는게 진짜로 사용될지 모르는 readahead 때문에 의논을 해보고 싶다고 하네요.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc7/</link>
      <pubDate>Mon, 18 Feb 2019 12:30:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc7/</guid>
      <description>[PATCH V15 00/18] block: support multi-page bvec https://lkml.kernel.org/r/20190215111324.30129-1-ming.lei@redhat.com
시스템의 RAM 이 커지고 huge page 가 널리 사용되면서 물리적으로 연속된 페이지들의 I/O 가 흔해지고 있습니다. 이를 위해 struct bio_bvec 이 물리적으로 연속된 여러 페이지를 다룰 수 있게 해주는 패치의 15번째 버전입니다.
Memory management facing a 400Gpbs network link https://lkml.kernel.org/r/01000168e2f54113-485312aa-7e08-4963-af92-803f8c7d21e6-000000@email.amazonses.com
올해 내로 400Gbps 인피니밴드가 가능해질 거라고 합니다! 이건 프로세서-메모리 사이의 밴드위쓰를 넘길 수 있는 스피드죠! 단일 하드웨어 쓰레드는 20GB/s 이기 때문입니다. 이 재미있는 트렌드를 커널은 어떻게 대처해야 할 것인가 하는 메일입니다.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc6/</link>
      <pubDate>Mon, 11 Feb 2019 12:40:20 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc6/</guid>
      <description>[PATCH v4 1/1] psi: introduce psi monitor https://lkml.kernel.org/r/20190206023446.177362-1-surenb@google.com
시스템의 메모리 부족 등의 현상이 어떻게 일어나고 있는지 쉽게 파악할 수 있는 장치를 추가하는 패치입니다.
[LSF/MM TOPIC] Address space isolation inside the kernel https://lkml.kernel.org/r/20190207072421.GA9120@rapoport-lnx
리눅스의 어드레스 스페이스 기능은 유저스페이스 프로그램들이 서로에게 영향을 끼치지 못하게 해줘서 컨테이너 등에 쓰이고 있죠. 하지만 커널은 공유하기 때문에 커널 버그는 여전히 영향을 끼칠 수 있습니다. 커널 코드도 어드레스 스페이스를 어느정도 인식하고 코드 분류를 시킴으로써 그 문제를 줄여보자는 LSF/MM 토론 주제 제안입니다.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc5/</link>
      <pubDate>Mon, 04 Feb 2019 09:18:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc5/</guid>
      <description>[LSF/MM TOPIC] Page flags, can we free up space ? https://lkml.kernel.org/r/20190122201744.GA3939@redhat.com
리눅스 커널의 page 정보는 PG_ 로 시작하는 플래그를 사용해 현재 상태를 알리는데요, 이걸 저장하는데 사용되는 공간을 더 줄일 수 있을지에 대한 논의를 해보고 싶다는 LSF/MM 제안입니다.
[LSF/MM TOPIC] Use NVDIMM as NUMA node and NUMA API https://lkml.kernel.org/r/f0d66b0c-c9b6-a040-c485-1606041a70a2@linux.alibaba.com
알리바바에서는 NVDIMM 을 클라우드 고객들에게 싼 비용의 메모리로 제공하려 한다는군요. 이를 위해 여러 필요성이 있고, 현재 NUMA API 로는 모든 경우를 커퍼하기가 어렵다고 합니다.</description>
    </item>
    <item>
      <title>I will have a talk at the FAST&#39;19</title>
      <link>https://sjp38.github.io/posts/en/fast2019_talk/</link>
      <pubDate>Sat, 02 Feb 2019 11:13:29 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/fast2019_talk/</guid>
      <description>FAST&#39;19 Work-in-progress 세션 에서 현재 진행중인 연구에 대해 발표하게 되었습니다. 발표 제목은 &amp;ldquo;Automated Data Access Pattern Hint Instrumentation for System Performance and Durability of Swap Storage&amp;rdquo; 입니다.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc4/</link>
      <pubDate>Mon, 28 Jan 2019 09:21:25 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc4/</guid>
      <description>[PATCH 0/5] [v4] Allow persistent memory to be used like normal RAM https://lkml.kernel.org/r/20190124231441.37A4A305@viggo.jf.intel.com
PMEM 을 평범한 RAM 처럼 접근할 수 있게 해주는 드라이버를 소개하는 패치셋의 네번째 버전입니다. 인터페이스적 측면에서 개선이 많이 됐고, 패치에 대한 소개도 많이 좋아졌네요.
이 패치셋이 의도하는 PMEM 은 Intel Optane DC persistent memory 와 같은 NVDIMM 입니다. 휘발성이 없고, flash 보다 빠르고, RAM 에 비해 가격 경쟁력이 좋죠.
RAM-based NVDIMM 은 의도한 대상이 아닙니다. 그것들은 RAM 대비 가격 경쟁력이 없기 때문이라는군요.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc3/</link>
      <pubDate>Mon, 21 Jan 2019 09:21:14 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc3/</guid>
      <description>LSF/MM 2019: Call for Proposals https://lkml.kernel.org/r/51b4b263-a0f2-113d-7bdc-f7960b540929@kernel.dk
올해의 LSF/MM 을 위한 발표 모집입니다. 올해는 푸에르토리코에서 4월 30일부터 5월 2일까지 열리는군요.
[LSF/MM TOPIC] NUMA, memory hierarchy and device memory https://lkml.kernel.org/r/20190118174512.GA3060@redhat.com
LSF/MM 을 위한 발표 지원입니다. NUMA API 가 다계층 메모리에 적용될 때의 단점에 대해서 이야기 해보겠다는군요.
[PATCH 00/22] Increase success rates and reduce latency of compaction v3 https://lkml.kernel.org/r/20190118175136.31341-1-mgorman@techsingularity.net
Mel Gorman 의 compaction 개선 패치셋 세번째 버전입니다.
Linux 5.0-rc3 https://lkml.kernel.org/r/CAHk-=whS=6Z_UxzoMjLANupOk3u-8ycERLPnaZxShMTviW0jkQ@mail.gmail.com
5.0 세번째 릴리즈입니다. 지난 릴리즈에서 여행 중이지만 항상 그렇듯 일요일 릴리즈를 하려 한다고 했는데, 이번에도 성공적이군요.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc2/</link>
      <pubDate>Tue, 15 Jan 2019 09:06:44 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc2/</guid>
      <description>[PATCH v11 00/26] Speculative page faults https://lkml.kernel.org/r/8b0b2c05-89f8-8002-2dce-fa7004907e78@codeaurora.org
SPF 패치에서 발견된 버그 레포트입니다. ARM 위에서 데드락 문제가 발견되었군요. 버그 발견자가 패치도 같이 내놓았는데, 이에 대한 토론은 아직도 계속되고 있네요.
[RFC PATCH v7 00/16] Add support for eXclusive Page Frame Ownership https://lkml.kernel.org/r/cover.1547153058.git.khalid.aziz@oracle.com
&amp;lsquo;ret2dir&amp;rsquo; 보안 공격[1]에 대비하기 위한 패치입니다. 하지만 이로 인해 tlb 를 좀 많이 flush 해야 하는 문제가 있었고, 이 패치셋은 그에 대한 해결책도 의논하고 있습니다.
[1] http://www.cs.columbia.edu/~vpk/papers/ret2dir.sec14.pdf
[PATCH 0/4] Allow persistent memory to be used like normal RAM https://lkml.</description>
    </item>
    <item>
      <title>LKML News v5.0-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc1/</link>
      <pubDate>Mon, 07 Jan 2019 11:18:50 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v5.0-rc1/</guid>
      <description>[RFC v3 0/3] test driver to analyse vmalloc allocator https://lkml.kernel.org/r/20190102085924.14145-1-urezki@gmail.com
vmalloc 의 성능과 스트레스 테스트를 위한 모듈을 구현한 패치입니다. Selftests 에도 테스트 스크립트를 추가했군요.
[RFC PATCH 0/1] mm: add a warning about high order allocations https://lkml.kernel.org/r/20181225153927.2873-1-khorenko@virtuozzo.com
특정 노드의 메모리에 접근이 많이 되고 있는 상황에서 해당 메모리가 fragment 되어 있고 이 시점에서 high order allocation 이 요청되면 이걸 위해 compaction 등이 작동하니까 다른 태스크의 latency 가 떨어질 수 있습니다. 이런 상황을 모니터링 할 수 있게끔, 이 패치는 vm.</description>
    </item>
    <item>
      <title>LKML News for v4.20</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20/</link>
      <pubDate>Fri, 21 Dec 2018 08:35:03 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20/</guid>
      <description>[PATCH V5 0/3] mm/kvm/vfio/ppc64: Migrate compound pages out of CMA https://lkml.kernel.org/r/20181219034047.16305-1-aneesh.kumar@linux.ibm.com
ppc64 에서는 guest os page table 을 CMA area 내에 할당하는데, VFIO 를 쓰는 경우 이게 pinning 되어 있다 보니 CMA area 밖으로 migrate 하는데 실패해, guest os page table 할당에 실패하고, 이로 인해 guest 시작조차 불가능하게 되는 문제가 있었습니다.
이 패치는 compound page 에 대해서도 CMA area 밖으로의 migration 이 가능하게 합니다.
[RESEND PATCH V3 0/5] arm64/mm: Enable HugeTLB migration https://lkml.</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc7/</link>
      <pubDate>Mon, 17 Dec 2018 09:16:11 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc7/</guid>
      <description>[PATCH -V9 00/21] swap: Swapout/swapin THP in one piece https://lkml.kernel.org/r/20181214062754.13723-1-ying.huang@intel.com
아직 머지되지 못한 THP swap in 패치셋의 아홉번째 버전입니다.
[RFC 0/3] reduce THP fault thrashing https://lkml.kernel.org/r/20181211142941.20500-1-vbabka@suse.cz
THP fault 로 인한 로컬 노드 thrashing 을 해결하기 위한 패치의 RFC 입니다. THP fault 성공률을 낮추는 부작용도 있긴 하군요. 아직 테스트도 안된 첫번째 RFC 이니, 이대로 머지되진 않겠지 싶긴 합니다만 재밌네요.
Linux 4.20-rc76 https://lkml.kernel.org/r/CAHk-=whv9u9aTEPoCz8h83JJbVK4fmHELJF=GG01ht9=1_MaCQ@mail.gmail.com
일곱번째 rc 버전의 릴리즈입니다&amp;hellip; 만, 이번엔 릴리즈 메일 제목에 오타가 있었군요.</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc6/</link>
      <pubDate>Wed, 05 Dec 2018 08:20:36 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc6/</guid>
      <description>[PATCH memory-model 0/3] Updates to the formal memory model https://lkml.kernel.org/r/20181203230411.GA27476@linux.ibm.com
리눅스 커널 메모리 모델의 업데이트 입니다.
smp_mb__after_unlock_lock() 을 추가로 모델링했고, github 리트머스 테스트를 체크하기 위한 스크립트가 추가되었으며, -j 옵션을 서포트 하게 되었습니다.
[tip:core/rcu] tracing: Replace synchronize_sched() and call_rcu_sched() https://lkml.kernel.org/r/tip-7440172974e85b1828bdd84ac6b23b5bcad9c5eb@git.kernel.org
synchronize_rcu() 가 이제는 RCU read-side 크리티컬 섹션 만이 아니라 preempt-disable 코드 영역도 기다리므로, synchronize_sched() 를 대체할 수 있고, call_rcu_sched() 도 call_rcu() 로 대체될 수 있습니다. 이 패치는 이 대체를 진행하고 있습니다.</description>
    </item>
    <item>
      <title>LKML News by 4.20-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc5/</link>
      <pubDate>Thu, 29 Nov 2018 08:14:01 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc5/</guid>
      <description>[PATCH V12 00/20] block: support multi-page bvec https://lkml.kernel.org/r/20181126021720.19471-1-ming.lei@redhat.com
struct bio_bvec 하나가 물리적으로 연속적인 여러개의 페이지를 담을 수 있게 해서 block layer 의 효율성을 높이기 위한 시도입니다.
[PATCH] aio: Convert ioctx_table to XArray https://lkml.kernel.org/r/20181128183531.5139-1-willy@infradead.org
aio 쪽의 ioctx_table 이라는 자료구조가 스펙터에 취약한 자료구조인데, 인덱스 오버플로 문제가 없는 XArray 로 교체하는 패치입니다. 정말 코드가 깔끔해지는군요.
[PATCH 0/4][V4] drop the mmap_sem when doing IO in the fault path https://lkml.kernel.org/r/20181130195812.19536-1-josef@toxicpanda.com
ps 등의 도구를 사용해 시스템 상황을 모니터링하는 커다란 어플리케이션을 사용 중인데, 이 과정에서 다른 task 의 mmap_sem 을 down_read() 해야 하는 경우가 종종 생긴다는군요.</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc4/</link>
      <pubDate>Mon, 26 Nov 2018 08:06:40 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc4/</guid>
      <description>[PATCH -V7 00/21] swap: Swapout/swapin THP in one piece https://lkml.kernel.org/r/20181120085449.5542-1-ying.huang@intel.com
Transparent Huge Page 를 쪼개지 않고 swap out / swap in 함으로써 스왑 성능을 최적화 하는 패치의 일곱번째 버전입니다. 이 블로그에서도 소개한 바 있죠. 크게 바뀐 부분은 없지만 최신 버전에 맞춰 리베이스 되었고, Daniel 에 의해 발견된 주소 정렬 관련 문제를 해결했군요.
[PATCH 0/5] Fragmentation avoidance improvements v5 https://lkml.kernel.org/r/20181123114528.28802-1-mgorman@techsingularity.net
시스템이 충분히 오래 운영되거나 특정한 패턴의 워크로드가 동작하게 되면 시스템의 메모리는 fragment 되게 마련이어서, 장기적으로 물리적 연속 페이지 할당이 실패하게 됩니다.</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc3/</link>
      <pubDate>Mon, 19 Nov 2018 16:53:04 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc3/</guid>
      <description>Linux 4.20-rc3 https://lkml.kernel.org/r/CAHk-=wiZmPvR64hDy-pcVJqcxoAwMRd4GrRhRjK04Mhng4nL4g@mail.gmail.com
리누스 토발즈의 개인적 여행이 있었다는 점을 제외하고는 이상할 것 없는 한주였습니다만, 이번 릴리즈의 변경 사항은 rc3 치고는 상당히 적었다고 하는군요.</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc2/</link>
      <pubDate>Mon, 12 Nov 2018 08:30:21 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc2/</guid>
      <description>[PATCH 0/5] Fragmentation avoidance improvements v2 https://lkml.kernel.org/r/20181107183822.15567-1-mgorman@techsingularity.net
장시간 운영되는 시스템은 결국 메모리가 단편화 (fragmentation) 되게 되어 있습니다. 페이징을 사용하면 단일 페이지 단위 할당은 문제가 없지만, 물리적으로 연속적인 페이지를 할당받기가 어려워지죠. Mel Gorman 의 이 패치는 이런 메모리 분절화를 좀 더 잘 막을 수 있는 방법을 포함하고 있습니다.
첫번째 패치는 단일 페이지 또는 적은 물리적 연속 페이지들의 할당 시에 불필요하게 higher order free page zone 을 사용하지 않게 하고, 두번째와 세번째 패치는 kswapd 와 kcompactd 를 사용한 defragmentation 을 좀 더 적극적으로 하게 합니다.</description>
    </item>
    <item>
      <title>I will have a talk at the kernel summit</title>
      <link>https://sjp38.github.io/posts/en/ksummit2018_talk/</link>
      <pubDate>Thu, 08 Nov 2018 06:11:48 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/ksummit2018_talk/</guid>
      <description>지난 토요일, Theodore Ts&amp;rsquo;o 로부터 올해 Linux Plumbers Conference 의 한 트랙으로 열리는 커널 서밋에서 GCMA 발표를 해줄 수 있겠냐는 제의를 받았고 물론 그러겠노라고 했습니다. 발표 일정의 [첫번째 드래프트][1]가 올라왔군요. 화요일 아침에 발표하게 됐습니다.
[1] https://lists.linuxfoundation.org/pipermail/ksummit-discuss/2018-November/006238.html</description>
    </item>
    <item>
      <title>LKML News by v4.20-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc1/</link>
      <pubDate>Wed, 07 Nov 2018 14:43:56 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.20-rc1/</guid>
      <description>리눅스 4.19 버전 릴리즈 후부터 4.20-rc1 버전의 릴리즈까지 LKML 에 오간 메일 중 흥미로운 메일들을 소개합니다.
[RFC PATCH v4 00/13] ktask: multithread CPU-intensive kernel work https://lkml.kernel.org/r/20181105165558.11698-1-daniel.m.jordan@oracle.com
CPU intensive 한 커널의 일을 여러 work queue 를 이용해 병렬화 시키기 위한 새로운 프레임웍, ktask 구현 및 적용 패치입니다. 이 프레임웍을 이용해 병렬화 시킬 일은 여러가지가 있을텐데, 이 패치는 ktask 프레임웍의 구현과 함께 VFIO 페이지 pinning, 부팅 시점에서의 struct page 초기화, gigantic page 의 초기화, 그리고 HugeTLB 페이지의 할당에 ktask 를 적용하고 있습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.19</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19/</link>
      <pubDate>Mon, 22 Oct 2018 17:45:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19/</guid>
      <description>Linux 4.19 https://lkml.kernel.org/r/20181022073224.GA5658@kroah.com
드디어 9 주간의 안정화를 거쳐 4.19 버전이 릴리즈 되었습니다. 역시 토발즈가 쉬고 있는 관계로 Greg KroahHartman 이 릴리즈 했습니다. 지난 네번의 릴리즈 가운데 가장 큰 릴리즈군요. 그리고 이 버전은 &amp;ldquo;Long Tern&amp;rdquo; 커널 중 하나가 될 예정입니다.
이번 릴리즈 메일은 토발즈가 잠시 쉬겠다고 했던 메일을 연상케 할정도로 내용이 긴데요, 꽤 많은 부분은 이번 버전 개발 과정에서 이야기 되었던, 새로운 커뮤니티 참여자들과의 관계와 태도에 대한 내용입니다. Greg 이 매년 발표하고 있는 커널 커뮤니티의 작업 방식 이야기를 예로 들며 설명하네요.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc8/</link>
      <pubDate>Mon, 15 Oct 2018 15:59:17 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc8/</guid>
      <description>Linux 4.19-rc8 https://lkml.kernel.org/r/20181015064915.GA10710@kroah.com
여덟번째 rc 버전입니다. 여전히 그렉이 릴리즈 하는군요. 여덟번째 rc 인만큼, 큰 변화는 없었고, 대부분 앞서 고친 것들에 대한 수정이었군요. 아마도 다음주에는 예상대로 4.19 버전이 나올 것 같다고 합니다.
[RFC v4 PATCH 0/5] Eliminate zone-&amp;gt;lock contention for will-it-scale/page_fault1 and parallel free https://lkml.kernel.org/r/20181017063330.15384-1-aaron.lu@intel.com
4 KB 크기 페이지를 위한 will-it-scale/page_fault1 워크로드를 2 소켓 112 코어 인텔 스카이레이크 서버에서 돌려보면 80% 의 CPU 시간이 zone-&amp;gt;lock 을 기다리는데 소모된다고 합니다. 이는 struct page 의 캐시 미스 때문이라는군요.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc7/</link>
      <pubDate>Mon, 08 Oct 2018 07:54:09 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc7/</guid>
      <description>Linux 4.19-rc7 https://lkml.kernel.org/r/20181007154529.GA4493@kroah.com
토발즈 없이 진행되는 4.19를 위한 일곱번째 rc 릴리즈입니다. 이번에도 그렉이 대신 하는군요. 이번 릴리즈는 후반부임에도 rc6 보다 조금 더 커졌습니다. 하지만 그렇게까지 큰 차이는 아니라고 하는군요.
일반적이라면 다음 릴리즈가 4.19 정식 릴리즈일텐데, 10월에 컨퍼런스가 많이 있다보니 rc 릴리즈를 한번 더 할 생각이라는군요. 간만에 rc8 을 보겠습니다.
[PATCH -V6 00/21] swap: Swapout/swapin THP in one piece https://lkml.kernel.org/r/20181010071924.18767-1-ying.huang@intel.com
THP 를 한방에 swap out / swap in 하는 Huang Ying 의 패치, 여섯번째 버전입니다.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc6/</link>
      <pubDate>Mon, 01 Oct 2018 12:20:27 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc6/</guid>
      <description>Linux 4.19-rc6 https://lkml.kernel.org/r/20180930150308.GA5010@kroah.com
이번주도 Greg 에 의해 여섯번째 rc 버전이 릴리즈 되었습니다. 평소 일정대로면 2주일 후 4.19 정식 버전이 릴리즈 될텐데, 아마도 그때까지도 Greg 이 릴리즈 하지 않을까 싶기도 하군요. 전체적으로 특이사항은 없고 Greg 의 시스템에서는 잘 동작하고 있으며 별다른 이슈를 보고받지도 못했다는군요.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc5/</link>
      <pubDate>Mon, 24 Sep 2018 10:10:40 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc5/</guid>
      <description>Linux 4.19-rc5 https://lkml.kernel.org/r/20180923175547.GA4462@kroah.com
지난주 토발즈가 휴식을 선언한 이유로 한동안 릴리즈는 Greg 이 맡게 되었죠. 이번 릴리즈는 그래서 Greg 이 합니다.
사회적으로야 이런저런 일이 많았지만 (토발즈의 휴가, Code of Conduct 머지에 관련해 갑론을박이 많군요.) 기술적으로는 별 일 없었던 한주라 평가되는군요.
사소하지만 재밌는 건 Greg 의 자기 서명. greg &amp;quot;keeping the seat warm for a few weeks&amp;quot; k-h 라고 하는군요. 토발즈가 휴가 가있는 동안 의자를 뎁혀 두는 역할이라는 겸손함이 눈에 띄네요.
[PATCH -V5 RESEND 00/21] swap: Swapout/swapin THP in one piece https://lkml.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc4/</link>
      <pubDate>Mon, 17 Sep 2018 08:03:05 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc4/</guid>
      <description>Linux 4.19-rc4 released, an apology, and a maintainership note https://lkml.kernel.org/r/CA+55aFy+Hv9O5citAawS+mVZO+ywCKd9NQ2wxUmGsz9ZJzqgJQ@mail.gmail.com
한국시간 새벽 네시 좀 넘어 이 메일을 받았습니다. 평범한 릴리즈 메일이겠거니 했는데 제목이 뭔가 심상치 않군요.
일단 4.19를 위한 네번째 release candidate 릴리즈가 되었습니다. 약 3주 후 정식 4.19 버전이 릴리즈 되겠군요. 하지만 이 메일은 그보다 많은 내용을 담고 있습니다.
자유분방하고 형식에 구애되지 않는 해커 문화에 기원을 두고 있는 리눅스 커뮤니티는 조금 거친 언어 문화로 유명했습니다. 예를 들어 이상한 코드를 보내면 리누스 토발즈와 커뮤니티의 일부 사람들이 이 코드를 꾸짖을 수 있는데 그 과정에서 욕설도 있을 수 있다는 거죠.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc3/</link>
      <pubDate>Tue, 11 Sep 2018 06:01:49 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc3/</guid>
      <description>Linux 4.19-rc3 https://lkml.kernel.org/r/CA+55aFwSxCt0aKkTxcBstthYXqJ5LtxRbO-CDyqgNwU94Ldq+w@mail.gmail.com
세번째 rc 릴리즈입니다. 어느새 이번 안정화 기간도 중반을 향하는군요. 시간 참 빠릅니다. 전체적으로 평범한 릴리즈입니다. 딱히 언급할 거리가 없군요.
[RFC PATCH v2 0/8] lru_lock scalability and SMP list functions https://lkml.kernel.org/r/20180911004240.4758-1-daniel.m.jordan@oracle.com
올해 LSF/MM 서밋에서도 이야기되었던, lru_lock 의 확장성을 개선하기 위한 노력의 정리입니다. LRU 리스트에 여러 쓰레드가 실제 데이터를 겹쳐 쓰지 않는다면 동시에 접근할 수 있는 새로운 오퍼레이션 세개 (smp_list_del(), smp_list_splice(), smp_list_add())을 추가했구요. 두번째로, lru_lock 을 spinlock 에서 rwlock 으로 교체했군요.</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc2/</link>
      <pubDate>Mon, 03 Sep 2018 11:34:35 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc2/</guid>
      <description>Linux 4.19-rc2 https://lkml.kernel.org/r/CA+55aFyG0GbDfoghEhAmKBPcZCiPu6CCpPRz9GwjCzLuP_Vv5Q@mail.gmail.com
리눅스 4.19 두번째 릴리즈 후보 버전의 릴리즈입니다. 첫번째 릴리즈 후보 버전 릴리즈 후엔 사람들이 좀 쉬게 마련이고 버그를 찾기엔 시간이 많지 않았기에 큰 변화는 없었습니다. 유럽사람들의 경우 아직 휴가기간인 사람도 많구요. 미국 OSSummit 이 지난주 진행된 것도 한 영향이겠네요.
[PATCH -V5 00/21] swap: Swapout/swapin THP in one piece https://lkml.kernel.org/r/20180903072214.24602-1-ying.huang@intel.com
관심있게 지켜보고 있는, THP swapout/in 패치입니다. 다음 머지 윈도우에선 들어갈 수 있을까요?
Plumbers 2018 - Performance and Scalability Microconference https://lkml.</description>
    </item>
    <item>
      <title>The Paper about GCMA Accepted to TC</title>
      <link>https://sjp38.github.io/posts/en/gcma_accepted_to_tc/</link>
      <pubDate>Wed, 29 Aug 2018 21:53:56 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/gcma_accepted_to_tc/</guid>
      <description>A paper about GCMA project has accepted to a top-level computer science journal, Transactions on Computers[1]. It will be published soon.
[1] https://www.computer.org/web/tc</description>
    </item>
    <item>
      <title>LKML News after v4.19-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc1/</link>
      <pubDate>Mon, 27 Aug 2018 17:11:28 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.19-rc1/</guid>
      <description>Linux 4.19-rc1 https://lkml.kernel.org/r/CA+55aFw9mxNPX6OtOp-aoUMdXSg=gBkQudGGamo__sh_ts_LdQ@mail.gmail.com
이주일의 머지 윈도우가 끝나고 리눅스 4.19 버전을 향한 안정화 단계가 시작되었습니다.
토발즈에겐 결코 즐겁지 않은 머지 윈도우였습니다 (frustrating merge window 였다고 표현하는군요). 일단 머지 윈도우 초기부터 L1TF 취약점 이슈가 나왔죠. 하지만 이슈가 처음 발견된 건 아니고 공식 보고된 거다보니 그 전부터 수정은 하고 있었기에 머지만 하면 됐습니다. 토발즈는 -next 트리와 다양한 커널 테스트 시스템들이 잘 갖추어져 있다는 증거라고 이야기 합니다.
또, TLB 슛다운 버그에 대한 보고가 있었군요. 결국은 큰 문제는 아니었다고 결론났음에도 토발즈의 신경을 많이 긁었다고 합니다.</description>
    </item>
    <item>
      <title>Lkml_news_v4.18</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18/</link>
      <pubDate>Mon, 13 Aug 2018 10:50:27 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18/</guid>
      <description>Linux 4.18 https://lkml.kernel.org/r/CA+55aFzos7tr=OLju10Oe-z7r=eB2dSaFa7vwz2ApGO13B=z_g@mail.gmail.com
자, 오랫만에 rc 버전을 8개나 내며 긴 안정화 기간을 거친 4.18 버전이 릴리즈 되었습니다. 따라서 지난주는 조용해야 했고 실제로 조용했지만 그럼에도 불구하고 vfs 레이스 컨디션 문제 수정 등의 변경도 있긴 했습니다. 이번 정식 릴리즈로 포함된 기능 중 개인적으로는 Restartable Sequence 가 눈에 띄고 흥미롭군요. 아마 2015년? 인가에 서울에서 커널 서밋 열려서 거기서 발표 들었을 때부터 관심있었거든요. 유저스페이스에서 이 기능을 잘 사용하면 멀티코어 성능확장성에 큰 개선이 가능할 것 같습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.18-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc8/</link>
      <pubDate>Mon, 06 Aug 2018 17:53:02 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc8/</guid>
      <description>Linux 4.18-rc8 https://lkml.kernel.org/r/CA+55aFw49Bh9u3KvGsMbnSLfHvevpWPuqgrWQT0tC0XCajNwzA@mail.gmail.com
원래대로라면 오늘 4.18 정식 릴리즈가 있어야 했지만, 지난주 동안 여러 일이 있었고, 결국 여덟번째 rc 버전이 나오고 말았습니다. VM 쪽 이슈가 큰 이유였고, 그것만 문제였으면 그냥 정식 릴리즈를 하려 했지만 네트워킹 쪽에서도 뒤늦은 문제가 터지고 VFS 쪽에도 이슈가 있었던 관계로 정식 릴리즈를 미루기로 결심했다고 합니다.
8월에 휴가를 많이 떠나는 유럽 개발자들을 고려해서 토발즈는 휴가가 예정되어 있다면 그냥 원래 예상된 스케쥴대로 이번주부터 머지 윈도우 열렸다고 생각하고 풀리퀘스트 보내고 휴가 가라고 대인배라면 대인배 같은 면모를 보이는군요.</description>
    </item>
    <item>
      <title>Linux Release History</title>
      <link>https://sjp38.github.io/posts/en/linux_release_history/</link>
      <pubDate>Mon, 30 Jul 2018 09:14:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/linux_release_history/</guid>
      <description>Linux 4.19-rc2 https://lkml.kernel.org/r/CA+55aFyG0GbDfoghEhAmKBPcZCiPu6CCpPRz9GwjCzLuP_Vv5Q@mail.gmail.com
2018-09-02 14:45 PDT
Linux 4.19-rc1 https://lkml.kernel.org/r/CA+55aFw9mxNPX6OtOp-aoUMdXSg=gBkQudGGamo__sh_ts_LdQ@mail.gmail.com
2018-08-26 14:49 PDT
Linux 4.18 https://lkml.kernel.org/r/CA+55aFzos7tr=OLju10Oe-z7r=eB2dSaFa7vwz2ApGO13B=z_g@mail.gmail.com
2018-08-12 14:10:49 PDT
Linux 4.18-rc8 https://lkml.kernel.org/r/CA+55aFw49Bh9u3KvGsMbnSLfHvevpWPuqgrWQT0tC0XCajNwzA@mail.gmail.com
2018-08-05 12:58 PDT
Linux 4.18-rc7 https://lkml.kernel.org/r/CA+55aFxpFefwVdTGVML99PSFUqwpJXPx5LVCA3D=g2t2_QLNsA@mail.gmail.com
2018-07-29 22:09 UTC
Linux 4.18-rc6 https://lkml.kernel.org/r/CA+55aFzMheDA-2z=MdGgJrz-REcrknb+4OEvRKaJipm+x6xEhw@mail.gmail.com
2018-07-23 20:46 UTC
Linux 4.18-rc5 https://lkml.kernel.org/r/CA+55aFwfMr2D2A_yesUyt_Lo3XMRk9epzgeBMt2HxMHiXMDYcg@mail.gmail.com
2018-07-15 20:28 UTC
Linux 4.18-rc4 https://lore.kernel.org/lkml/CA+55aFwXGyZ1Yx+Z8a93gpvb596ZRJ5ppiQL_+-k7gjeQLtcsQ@mail.gmail.com/T/#u
2018-07-08 23:57 UTC
Linux 4.18-rc3 https://lkml.kernel.org/r/CA+55aFwGk-pWKKCtp+kQUN_hov9tW+vUo6Wgob91bewwBL17fA@mail.gmail.com
2018-07-01 23:46 UTC</description>
    </item>
    <item>
      <title>LKML News after v4.18-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc7/</link>
      <pubDate>Mon, 30 Jul 2018 08:49:12 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc7/</guid>
      <description>Linux 4.18-rc7 https://lkml.kernel.org/r/CA+55aFxpFefwVdTGVML99PSFUqwpJXPx5LVCA3D=g2t2_QLNsA@mail.gmail.com
일곱번째 rc 릴리즈입니다. 별다른 일 없으면 다음주에 4.18이 릴리즈 되겠다고 토발즈도 이야기 하는군요.
[PATCH v4 0/6] kmalloc-reclaimable caches https://lkml.kernel.org/r/20180731090649.16028-1-vbabka@suse.cz
내부적으로 SLAB 할당자를 사용하는 kmem cache 들은 SLAB_RECLAIM_ACCOUNT 플래그를 가지고 생성될 경우에 시스템 메모리가 부족한 경우 기존에 할당받은 오브젝트들을 회수해도 좋다고 알리게 됩니다.
일반적인 kmem cache 들은 이 플래그 없이 생성되서는 시스템의 메모리가 부족한 경우에 회수되어도 좋은 오브젝트의 할당에 사용되기도 하는데, 다양한 크기의 오브젝트들은 SLAB_RECLAIM_ACCOUNT 플래그를 가진 하나의 kmem cache 에서 처리될 수 없기 때문이죠.</description>
    </item>
    <item>
      <title>LKML News after v4.18-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc6/</link>
      <pubDate>Tue, 24 Jul 2018 06:19:53 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc6/</guid>
      <description>Linux 4.18-rc6 https://lkml.kernel.org/r/CA+55aFzMheDA-2z=MdGgJrz-REcrknb+4OEvRKaJipm+x6xEhw@mail.gmail.com
이번 rc는 평소보다 조금 크게 되었는데, 네트워킹 쪽 메인테이너인 David 가 많은 수정사항을 아직 보내지 않았다가 이번에 모아서 보냈기 때문이라는군요. 그렇다 해도 그렇게 큰 양까진 아니라는 토발즈의 설명입니다.
지난 rc5 작업 주간을 귀찮게 했던 VM 버그에 대한 두줄의 수정이 rc5 에 들어갔었지만 32비트 환경에 대한 고려가 없었기에 이번에 그 수정이 들어갔다는군요.
[PATCH 0/7] memory management documentation updates https://lkml.kernel.org/r/1532517970-16409-1-git-send-email-rppt@linux.vnet.ibm.com
메모리 관리 부분 문서화 업데이트입니다. sphinx 기반 문서화 업데이트를 일부 메인테이너들은 반기지 않는 것도 사실이지만, 확실히 가독성이 좋아진 덕에 이런 문서화 노력이 더 활발해 지는 것 아닌가 하는 생각도 드는군요.</description>
    </item>
    <item>
      <title>Alpine for LKML</title>
      <link>https://sjp38.github.io/posts/en/alpine-for-lkml/</link>
      <pubDate>Wed, 18 Jul 2018 21:09:54 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/alpine-for-lkml/</guid>
      <description>리눅스 커널 커뮤니티는 버그 레포팅, 패치 업로드, 리뷰, 릴리즈, 토론 등등 모든 활동은 이메일을 통해 이루어집니다. 이 포스트에서는 리누스 토발즈도 쓰는 이메일 클라이언트인 Alpine 을 gmail 과 연동하는 방법을 알아봅니다.
먼저 alpine 설치는 대부분 리눅스 배포판의 패키지 시스템에 등록되어 있으므로 해당 패키지 시스템을 사용해 쉽게 설치할 수 있습니다. 데비안 계열이면 apt install alpine, 페도라 계열이면 dnf install alpine 이죠.
gmail imap 정보 입력 S (Settings) -&amp;gt; L (collectionLists) -&amp;gt; A (Add Cltn)</description>
    </item>
    <item>
      <title>Lkml_news_v4.18 Rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc5/</link>
      <pubDate>Mon, 16 Jul 2018 06:07:33 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc5/</guid>
      <description>Linux 4.18-rc5 https://lkml.kernel.org/r/CA+55aFwfMr2D2A_yesUyt_Lo3XMRk9epzgeBMt2HxMHiXMDYcg@mail.gmail.com
다섯번째 rc 릴리즈입니다. 토발즈 개인적으로는 조금 바쁘단 느낌이 있었지만 숫자로 보면 평범한 rc 릴리즈 주간이었다는 평입니다.
토발즈를 귀찮게 만들었던 건 VM 쪽 버그로, 단 두줄의 수정으로 고쳐졌다는데, 아무래도 아래 패치인 것 같군요: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=bce73e4842390f7b7309c8e253e139db71288ac3
그리고 repeatable sequence 에 대한 cleanup 도 있었군요.
[GIT PULL rcu/next] RCU commits for 4.19 https://lkml.kernel.org/r/20180716175125.GA4287@linux.vnet.ibm.com
4.19 리눅스 릴리즈를 위한 RCU 쪽 변경사항들 pull request 입니다.</description>
    </item>
    <item>
      <title>Lkml_news_v4.18 Rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc4/</link>
      <pubDate>Mon, 09 Jul 2018 10:01:05 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc4/</guid>
      <description>Linux 4.18-rc4 https://lkml.kernel.org/r/CA+55aFwXGyZ1Yx+Z8a93gpvb596ZRJ5ppiQL_+-k7gjeQLtcsQ@mail.gmail.com
어느덧 네번째 RC 버전 릴리즈입니다. 지루할 정도로 평범한 릴리즈라는군요. 대부분 드라이버쪽 업데이트이고, bpf, cifs, ext4, 스케쥴러, 그리고 일부 arch 업데이트가 대부분입니다.
[PATCH v9 00/17] Improve shrink_slab() scalability (old complexity was O(n^2), new is O(n)) https://lkml.kernel.org/r/153112469064.4097.2581798353485457328.stgit@localhost.localdomain
shrink_slab() 의 compexity 를 O(n^2) 에서 O(n) 으로 낮춰 확장성을 높인 패치의 아홉번째 버전입니다.
[PATCH 0/2] CMA: remove unsupported gfp mask parameter https://lkml.kernel.org/r/20180709122018eucas1p277147b1e6385d552b5a8930d0a8ba91c~-sqSan6292733527335eucas1p2-@eucas1p2.samsung.com
cma_alloc() 과 dma_alloc_from_contiguous() 함수는 gfp mask 패러미터를 받지만 실질적으론 __GFP_NORARN 플래그만을 지원하고 있습니다.</description>
    </item>
    <item>
      <title>Lkml_news_v4.18 Rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc3/</link>
      <pubDate>Mon, 02 Jul 2018 11:18:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc3/</guid>
      <description>Linux 4.18-rc3 https://lkml.kernel.org/r/CA+55aFwGk-pWKKCtp+kQUN_hov9tW+vUo6Wgob91bewwBL17fA@mail.gmail.com
4.18 을 향하는 세번째 릴리즈입니다. 그간 일본에 중국을 방문하고 있던 토발즈가 집에 돌아와서 이번엔 평소처럼 한국시간으로는 월요일 아침 릴리즈가 되었군요.
큰 이상은 없고 드라이버, arch, 파일시스템 등에 변경이 있군요.
그리고, 오늘이 리누스 토발즈가 리눅스 파운데이션 소속으로 일하게 된지 15주년이라는군요. 리눅스 파운데이션도 리눅스도 오래오래 건강했으면 좋겠습니다.
[PATCH v2 0/2] x86/numa_emulation: Introduce uniform split capability https://lkml.kernel.org/r/153089327581.27680.11402583130804677094.stgit@dwillia2-desk3.amr.corp.intel.com
X86 에서는 커널 패러미터를 줘서 NUMA emulation 이 가능한데, 각 NUMA node 의 메모리 사이즈를 모두 똑같게 하기보다는 요청된 NUMA node 수를 맞추는걸 우선시 하고 있습니다.</description>
    </item>
    <item>
      <title>Lkml_news_v4.18 Rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc2/</link>
      <pubDate>Mon, 25 Jun 2018 08:45:22 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc2/</guid>
      <description>Linux 4.18-rc2 https://lkml.kernel.org/r/alpine.LFD.2.21.999.1806242116240.20621@xps13.linux-foundation.org
이번주도 지난주처럼 평소보단 빠른 릴리즈입니다. 토발즈가 여전히 여행중이라는군요. 지난주엔 일본이었고, 이번주는 중국이라는군요. 그런고로 중국 시간으로 일요일 저녁의 rc 릴리즈입니다.
이번 rc 에서도 큰 변경은 없고 평범한 rc 입니다.
[PATCH tip/core/rcu 0/40] RCU -&amp;gt;gp_seq conversion for v4.19 https://lkml.kernel.org/r/20180626000841.GA15696@linux.vnet.ibm.com
RCU 의 -&amp;gt;gpnum 과 -&amp;gt;completed 필드를 하나의 -&amp;gt;gp_seq 로 대체하는 패치입니다. 그동안 -&amp;gt;gpnum 과 -&amp;gt;completed 로 grace period 를 관리해오고 있지만 사실상 -&amp;gt;gpnum 과 -&amp;gt;completed 는 수가 똑같거나 하나 차이이니 하나의 bit 으로도 같은 정보를 처리할 수 있을 뿐더러 로드 횟수를 두번에서 한번으로 줄일 수 있다는 거죠.</description>
    </item>
    <item>
      <title>Lkml_news_v4.18 Rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc1/</link>
      <pubDate>Sun, 17 Jun 2018 11:59:59 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.18-rc1/</guid>
      <description>Linux 4.18-rc1 https://lkml.kernel.org/r/CA+55aFw34Dh6p0qAZ_Ja=fjuJ89ojZZTWtmrRPKmB1QuP3C7hw@mail.gmail.com
평소보다 많이 빠르게 4.18 머지윈도우가 닫혔습니다. 토발즈가 지금 일본에 있기 때문에 자기는 이미 일요일이고, 오후엔 뱃놀이 하러 갈거라서 일찍 릴리즈 한다네요.
전체적으로 크기에서도 한 일에 있어서도 평범한 릴리즈입니다. 4.17 에서 더이상 사용되지 않는 과거 코드 삭제를 많이 했던 것처럼 이번에도 미사용 코드 제거가 좀 있군요, 하지만 4.17 때만큼 큰 변화는 아닙니다.
제거된 컴포넌트들 가운데 특이할만한 점은 Lustre 의 제거군요. Staging 트리에서 머물던 Lustre 는 계속 out of tree 로 개발이 진행되어왔고, Staging 딱지를 떼지 못한채 커널 소스트리에서 제거되게 되었습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.17</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17/</link>
      <pubDate>Mon, 04 Jun 2018 11:29:16 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17/</guid>
      <description>Linux 4.17 https://lkml.kernel.org/r/CA+55aFxhx_tKGm02UySguvbyfB_7oTF31QfgOHCK0YkBvmfV0g@mail.gmail.com
4.17 버전 리눅스 릴리즈입니다. 지난주에 토발즈가 이야기한 것처럼 별다른 지연 없이 릴리즈 되었군요.
git object 의 갯수라던지 릴리즈를 위한 스크립트 등이 리눅스 5.x 버전으로의 메이저 버전 업데이트가 될 준비가 되었다고 하지만 토발즈는 딱히 5.x 로 아직은 넘어갈 생각이 없군요. 너무 멀지 않은 미래에 넘어가겠지만, 적어도 지금은 아니라고 합니다.
항상 그렇듯 이 릴리즈는 4.18을 위한 머지 윈도우의 시작이기도 한데, 토발즈는 두번째 주에 여행을 갈거라 가능하면 첫째주에 중요한 머지를 마무리 했으면 한다고 하네요.</description>
    </item>
    <item>
      <title>LKML News after 4.17-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc7/</link>
      <pubDate>Mon, 28 May 2018 10:41:50 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc7/</guid>
      <description>Linux 4.17-rc7 https://lkml.kernel.org/r/CA+55aFwUqz9z1Rf4Wwr29W7DeKxQ67qKEW5xty+JPyCY3aNQ=A@mail.gmail.com
일곱번째 rc 입니다. 지난 몇주보다는 조금 변경사항이 있었지만 그렇다 해도 그렇게 심한 정도는 아니었기에 아마도 이게 마지막 rc 일 거라는군요.
[PATCH 00/13] Introdue io.latency io controller for cgroups https://lkml.kernel.org/r/20180529211724.4531-1-josef@toxicpanda.com
Cgroup 에 응답시간 (latency) 기반의 I/O 컨트롤러를 추가하는 패치셋입니다. Cgroup 은 용량 기반의 컨트롤러는 많지만 응답시간 기반의 컨트롤러가 부족하다고 느껴왔는데, 역시 추가되어 가는군요.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc6/</link>
      <pubDate>Mon, 21 May 2018 10:19:16 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc6/</guid>
      <description>Linux v4.17-rc6 https://lkml.kernel.org/r/CA+55aFxxYQFL3mwsQcC+__R23ZmO8c3F0SThi6r44TdK0ePNDQ@mail.gmail.com
여섯번째 release candidate 버전입니다. 이번 릴리즈에도 특기할 만한 일은 없었습니다. 이제 충분히 안정화 되었을 거라고 하는군요.
[PATCH -mm -V3 00/21] mm, THP, swap: Swapout/swapin THP in one piece https://lkml.kernel.org/r/20180523082625.6897-1-ying.huang@intel.com
이전에도 이 시리즈로 소개했던, THP 의 swap out 과 swap in 최적화 마지막 단계 패치의 세번째 버전입니다. 마지막 단계 이야기 하니 문득 인피니티워의 오역 논란이 떠오르는군요 ;) 두번째 버전 이후 특정 컨피규레이션에서의 빌드 버그를 수정했고, mmotm/master 브랜치의 5월 18일자 버전으로 rebase 한게 차이점의 전부군요.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc5/</link>
      <pubDate>Mon, 14 May 2018 10:23:45 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc5/</guid>
      <description>Linux 4.17-rc5 https://lkml.kernel.org/r/CA+55aFxi-Q6hvdHn+JwYSQ9b3feNGoFM3eeAuKNhpkfxVNAGpA@mail.gmail.com
4.17을 향한 다섯번째 rc 릴리즈입니다. 이번 릴리즈도 여느 때와 다름없이 평범하군요. 대부분 드라이버 변경들이고, amd gpu 쪽 변경이 있지만 나머지 부분들은 그렇게 많지 않고 대부분 한두줄 짜리 변경들입니다. 이대로라면 이번 4.17 릴리즈는 꽤 무난무난하게 끝나겠군요.
[PATCH v11 00/26] Speculative page faults https://lkml.kernel.org/r/1526555193-7242-1-git-send-email-ldufour@linux.vnet.ibm.com
이 블로그에서도 몇차례 소개한, speculative page fault 의 11번째 버전입니다. 지난 LSFMM 에서도 관련해 논의를 한 것 같던데, 아주 긍정적 반응은 아니었던 것 같습니다만, 어쨌든 오랫만에 올라온 새로운 버전의 패치셋이군요.</description>
    </item>
    <item>
      <title>Linux Kernel Debugging Using QEMU</title>
      <link>https://sjp38.github.io/posts/en/qemu_kernel_debugging/</link>
      <pubDate>Mon, 07 May 2018 18:21:01 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/qemu_kernel_debugging/</guid>
      <description>You can use classical debugger for your Linux kernel programming, though Torvalds doesn&amp;rsquo;t like it. I also do not prefer such use of debuggers, but admit that sometimes debuggers are quite useful. ;)
There are several ways to debug Linux kernel, but one of above is to set up a Linux virtual machine using QEMU and debugging the Linux kernel of the virtual machine from the host machine. This post summarises how to debug the Linux kernel in this way.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc4/</link>
      <pubDate>Mon, 07 May 2018 12:12:32 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc4/</guid>
      <description>Linux 4.17-rc4 https://lkml.kernel.org/r/CA+55aFyry0qeZvYjU5pf8a6zvb_ALmP-2T9+HZH2DHK93P6rQg@mail.gmail.com
어느새 네번째 rc 버전입니다. v4.17 을 향한 여정이 절반을 넘어가는군요. 이번 릴리즈도 특이사항 없이 평범합니다.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc3/</link>
      <pubDate>Mon, 30 Apr 2018 12:59:19 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc3/</guid>
      <description>Linux 4.17-rc3 https://lkml.kernel.org/r/CA+55aFyu=y0SBesB+vx3JZFGcOhP+tuVG7sjfrkfBhXHTe0Skg@mail.gmail.com
세번째 rc 버전이 나왔습니다. 평소보다 좀 일찍 왔군요. rc2 에 비해 커다란 릴리즈이긴 한데, 그렇다 해도 평범한 릴리즈라고 리누스는 이야기 합니다. 대부분의 변경 사항이 드라이버 쪽 수정이기 때문이라고 하는군요.
[PATCH v4 00/16] Rearrange struct page https://lkml.kernel.org/r/20180430202247.25220-1-willy@infradead.org
이 블로그에서도 소개했던, Matthew Wilcox 의 &amp;lsquo;struct page&amp;rsquo; 정리 패치의 네번째 버전입니다. 지난주 LSFMM 에서도 소개한 모양인데, 이 변화의 전/후를 google spread sheet 로 정리한 문서도 여기서 공개했나보군요: https://docs.google.com/spreadsheets/d/1tvCszs_7FXrjei9_mtFiKV6nW1FLnYyvPvW-qNZhdog/edit?usp=sharing
[PATCH v2 0/4] Interface for higher order contiguous allocations https://lkml.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc2/</link>
      <pubDate>Mon, 23 Apr 2018 12:03:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc2/</guid>
      <description>Linux v4.17-rc2 https://lkml.kernel.org/r/CA+55aFwzkGuq5ASF-vhYj7mEX26V0K+uZCLWi1BLYq+9F1n-Rw@mail.gmail.com
두번째 rc 버전의 릴리즈입니다. perf 와 테스트 스크립트 쪽에 변경사항이 좀 많긴 하지만 평소와 크게 다르지 않은 추이라는군요.</description>
    </item>
    <item>
      <title>LKML News after v4.17-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc1/</link>
      <pubDate>Mon, 16 Apr 2018 10:59:58 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.17-rc1/</guid>
      <description>Linux v4.17-rc1 https://lkml.kernel.org/r/CA+55aFx62iBkj+hOmhLksUtvjwTcm_o1dwcyvaNnVpJ-AmvzVQ@mail.gmail.com
2주간의 머지 윈도우가 지나고, v4.17-rc1 이 릴리즈 되었습니다. 크게 특별할 것 없이 평범한 머지 윈도우였다고 토발즈는 평하는군요. 그리고 이번에 git objects mark 가 4백만을 넘겼습니다. 따라서 다음 커널이 v5.0 이어도 될 것 같은데, 꼭 다음 버전에서 그렇게 할지는 모르겠다는군요. 리눅스 커널에서 버전은 그저 시간이 흘렀음을 의미할 뿐, 큰 변화가 있어서 메이저 버전 넘버가 바뀌는게 아니기 때문이죠. 참고로 v3.0 과 v4.0 은 각각 git objects mark 2백만과 4백만에서 이루어졌군요.</description>
    </item>
    <item>
      <title>LKML News after v4.16</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16/</link>
      <pubDate>Mon, 02 Apr 2018 07:13:40 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16/</guid>
      <description>Linux 4.16 https://lkml.kernel.org/r/CA+55aFyxn0bu5jOAJvO_63GHaGMkJ0uA=bVBm2T3HVX9SimZzw@mail.gmail.com
릴리즈 마지막 주 치고는 네트워킹 쪽에 조금 변경사항이 있었습니다만, 큰 문제가 될 정도는 아니었습니다. 결과, 4.16이 드디어 릴리즈 되었습니다! 동시에 4.17 머지 윈도우가 시작되는군요.
[PATCH 0/2] Move kfree_rcu out of rcu code and use kfree_bulk https://lkml.kernel.org/r/1522647064-27167-1-git-send-email-rao.shoaib@oracle.com
kfree_rcu() 대신 kfree_bulk() 라는 새로 만들어진, 더 효율적인 기능을 사용하도록 하는 패치입니다.
[RFC PATCH 0/1] mm: Support multiple kswapd threads per node https://lkml.kernel.org/r/1522661062-39745-1-git-send-email-buddy.lumpkin@oracle.com
NUMA 아키텍쳐에서 리눅스 커널은 NUMA 노드당 하나의 kswapd 쓰레드를 띄웁니다.</description>
    </item>
    <item>
      <title>LKML News after v4.16-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc7/</link>
      <pubDate>Mon, 26 Mar 2018 08:45:19 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc7/</guid>
      <description>Linux 4.16-rc7 https://lkml.kernel.org/r/CA+55aFxpxHnWBeTXN+DKqwCMW_=T2cR8UxSBVk_6c8LL7Et5JQ@mail.gmail.com
4.16을 향한 일곱번째 rc 가 릴리즈 되었습니다. 평소대로라면 이게 마지막 rc 여야 할텐데, 평소와 다름없거나 변경사항이 적은 편이던 그동안의 rc와 달리 이번 rc 는 좀 변경사항이 많군요. 그렇다곤 해도 아마도 네트워킹 쪽 코드 머지가 늦었기 때문으로 보이며 rc8을 릴리즈할 생각은 아직은 없다고 토발즈는 이야기 하네요.
더불어, 토발즈가 rc 릴리즈 때마다 변경 사항들을 정리하기 위해 주로 사용하는 git 사용 스크립트를 공개했습니다.
다음주는 4.16이 릴리즈 될까요? 아니면, rc8이?
[PATCH] mm/list_lru: replace spinlock with RCU in __list_lru_count_one https://lkml.</description>
    </item>
    <item>
      <title>LKML News after v4.16-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc6/</link>
      <pubDate>Mon, 19 Mar 2018 10:19:34 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc6/</guid>
      <description>Linux 4.16-rc6 https://lkml.kernel.org/r/CA+55aFzV1nffUeriZLksK90noD49T+w+WmgBsYMAO13rTbn3Pg@mail.gmail.com
4.16 여섯번째 rc 버전이 나왔습니다. 4.16을 향한 이번 사이클은 상당히 순탄하게 진행되는군요. rc7 까진 만들 예정이라고 하는데, 그 후엔 4.16이 안정적으로 나오게 될 것 같습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.16-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc5/</link>
      <pubDate>Mon, 12 Mar 2018 10:08:11 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc5/</guid>
      <description>Linux 4.16-rc5 https://lkml.kernel.org/r/CA+55aFxXAMHeD8zz1BLv9r_2rjWJ6xE=cNGVAoWOvQJog7oz9A@mail.gmail.com
여전히 특이사항 없는 한주를 거쳐 다섯번째 rc 버전이 나왔습니다. 이번 릴리즈가 기존의 rc5 단계보단 조금 크지만 특이할 정도는 아닌 모양이군요. 개인적으로 눈에 띈 부분은, overlayfs, xfs 등의 파일시스템의 변경, 그리고 perf 와 selftest 쪽 변경이 있군요.
[PATCH v9 00/24] Speculative page faults https://lkml.kernel.org/r/1520963994-28477-1-git-send-email-ldufour@linux.vnet.ibm.com
Speculative page faults 의 9번째 패치셋입니다. Michael Hocko 가 이거 너무 자주 올리는 거 아니냐고 한마디 했고, 패치 저자인 Laurent Dufour 도 오케이 했네요.</description>
    </item>
    <item>
      <title>LKML News after v4.16-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc4/</link>
      <pubDate>Mon, 05 Mar 2018 10:50:48 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc4/</guid>
      <description>Linux 4.16-rc4 https://lkml.kernel.org/r/CA+55aFxXg8hi+T_DNCG_OrAotqSheyREw-Njf9XgUD1vXqAyHQ@mail.gmail.com
벌써 개발 단계의 중반이라 할 수 있는 rc4 의 릴리즈입니다. 4.16 버전의 릴리즈도 얼마 남지 않았군요. 여전히 충분히 조용한 한주였습니다. 다만 여기저기에 조금씩 변경사항이 골고루 있군요.
[PATCH 00/34 v3] PTI support for x32 https://lkml.kernel.org/r/1520245563-8444-1-git-send-email-joro@8bytes.org
x86-32 를 위한 Page Table Isolation 패치입니다.</description>
    </item>
    <item>
      <title>Lkml_news_v4.16 Rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc3/</link>
      <pubDate>Mon, 26 Feb 2018 18:38:53 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc3/</guid>
      <description>Linux 4.16-rc3 https://lkml.kernel.org/r/CA+55aFxk5KBxL9DvRtBivP3hKT-aOAzvSA_B47L1+y0P2GLe_A@mail.gmail.com
4.16 세번째 rc 버전이 릴리즈 되었습니다. rc2 보단 변경사항이 많지만, rc2 때 이야기 했듯 rc2 때는 대부분의 경우 고칠 것들을 찾지도 못했기 때문이 크기 때문이죠. 즉, 스펙터와 멜트다운으로 끔찍했던 4.15 때와 달리, 모든게 정상적이고 예상대로라고 합니다.
대부분의 변경은 드라이버이고, 네트워킹 쪽 변경도 좀 크군요.
[PATCH tip/core/rcu 0/5] SRCU updates https://lkml.kernel.org/r/20180226215614.GA31616@linux.vnet.ibm.com
RCU critical section 안에서 sleep 을 할 수 있는 SRCU 의 간단한 업데이트 패치셋입니다.
[PATCH tip/core/rcu 0/12] Torture-test updates https://lkml.</description>
    </item>
    <item>
      <title>LKML News v4.16-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc2/</link>
      <pubDate>Mon, 19 Feb 2018 11:09:15 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc2/</guid>
      <description>Linux 4.16-rc2 https://lkml.kernel.org/r/CA+55aFwDnBq9V6TVbc82DzVYpf-ELF7UcYzHuY0ei1Xjnob+0A@mail.gmail.com
4.16 두번째 rc 버전의 릴리즈입니다. 이번 한주는 매우 조용한 한주였군요. 머지 윈도우가 끝나고 사람들이 좀 쉬기 때문일수도, 아직 버그를 찾지 못해서일 수도 있고 일반적으로 rc2 는 조용한 편이지만, 어쨌든 토발즈는 만족스러운 눈치입니다. 4.15 에서의 spectre &amp;amp; meltdown 때문에 더 그럴지도 모르겠지만요.</description>
    </item>
    <item>
      <title>LKML News after v4.16-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc1/</link>
      <pubDate>Tue, 13 Feb 2018 13:56:47 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.16-rc1/</guid>
      <description>Linux 4.16-rc1 https://lkml.kernel.org/r/CA+55aFzXVqgCMhPL9EaMW_D9E=HCQ9+JSQAbBPe3Oa_iQtky=g@mail.gmail.com
어느덧 2주일이 지났습니다. 머지 윈도우가 닫히고 4.16 첫번째 rc 버전이 나왔습니다. 4.15는 역시 토발즈에게 고통스러웠던 시간이었던지 이번 머지 윈도우는 4.15 보다 훨씬 나았다는 토발즈의 이야기입니다.
이번 릴리즈에서는 GPU 쪽 변경 사항이 많고 대부분은 드라이버라 아주 큰 변화는 거의 없지만, 여전히 arch 쪽에도, 네트워킹과 파일시스템 등에도 변경이 없지는 않다고 정리하고 있습니다. 스펙터 / 멜트다운 이슈에 대한 x86 외 아키텍쳐의 변경사항들도 들어왔군요.
[PATCH v8 00/24] Speculative page faults https://lkml.kernel.org/r/1518794738-4186-1-git-send-email-ldufour@linux.vnet.ibm.com</description>
    </item>
    <item>
      <title>LKML News after v4.15</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15/</link>
      <pubDate>Mon, 29 Jan 2018 09:20:38 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15/</guid>
      <description>Linux 4.15 https://lkml.kernel.org/r/CA+55aFzARtx-nA=d1j7vLOLf4FHMJLyRiQ-PKkoexJuTUHogdw@mail.gmail.com
드디어 4.15 버전이 릴리즈 되었습니다. 지난 한주는 매우 조용하고 변경된 사항이 거의 없었다는군요.
이렇게 meltdown/spectre 로 시끄럽고 길었던, 평범하지 않았던 릴리즈 사이클이 끝났습니다. 하지만, meltdown/spectre 관련한 일이 아주 끝난 건 아니라고 이야기 하는군요. 특히, indirect bracnh mitigation 을 위한 가장 큰 수정사항을 반영받기 위해선 커널만 업데이트 해선 안되고 컴파일러의 &amp;ldquo;retpoline&amp;rdquo; 지원이 있어야 합니다.
cat /sys/devices/system/cpu/vulnerabilities/spectre_v2 로 컴파일러 지원이 있는지 알 수 있는데, 컴파일러 지원이 없다면
Vulnerable: Minimal generic ASM retpoline 이란 출력이 뜰겁니다.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc9</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc9/</link>
      <pubDate>Tue, 23 Jan 2018 12:16:07 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc9/</guid>
      <description>Not final 4.15 this weekend https://lkml.kernel.org/r/CA+55aFxzQBH5gnG92ah-PREfOqb5_rjWriLH3fWHMWS1=BSQFw@mail.gmail.com
원래대로라면 4.15 정식 버전의 릴리즈가 될 타이밍이었습니다만&amp;hellip; 아직 충분히 안정화 되지 않은 것 같다는 토발즈의 판단 아래 이번주에도 rc 버전이 나왔습니다. rc9 입니다. 2011년의 3.1-rc9 이후 처음 나온 rc9 이네요.
이번 릴리즈는 x86, arm powerpc, mips 쪽의 arch 업데이트, 드라이버, 그리고 네트워킹 핵심부 업데이트가 주된 변경이군요.
다음주에는 꼭 4.15를 릴리즈 하고 싶다고 하는데, 아마도 다음주에는 4.15 정식 버전이 릴리즈되길 빕니다.
[LSF/MM TOPIC] CMA and larger page sizes https://lkml.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc8/</link>
      <pubDate>Tue, 16 Jan 2018 13:26:26 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc8/</guid>
      <description>Linux 4.15-rc8 https://lkml.kernel.org/r/CA+55aFz=PcxdARFpCTyQCJKaJcBwVUB9y6XAXM8VyyxnbRD=bw@mail.gmail.com
마침내 여덟번째 rc 버전의 릴리즈입니다. 스펙터 버그를 성능 저하 없이 막기 위한 구글의 해결책, Retpoline 지원이 들어갔군요. 그 외에는 드라이버 업데이트여서 일단 rc8 에 걸맞는 조용함이긴 하다고 토발즈는 평하네요. 자, 다음주에는 4.15 가 릴리즈될런지? 아니면 rc9 이 나오고 말런지?</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc7/</link>
      <pubDate>Sat, 13 Jan 2018 10:30:13 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc7/</guid>
      <description>Linux 4.15-rc7 https://lkml.kernel.org/r/CA+55aFwbmKznuQZe_VemxXJPSmB-9yy8uyWsMZcrkA4T=m8xkw@mail.gmail.com
Meltdown 과 Spectre 로 떠들썩했던 시간을 지나 4.15 의 일곱번째 rc 버전이 릴리즈 되었습니다. 지난 여섯번째 릴리즈 때도 상당히 안정화에 신경써야 할 시점임에도 x86 pti (page table isolation) 업데이트 패치가 많이 머지되어 의아했는데, 이게 Meltdown 과 Spectre 버그 때문이었음도 밝혀졌죠. 그렇다곤 해도 그 외의 부분은 예상대로 상당히 안정화 되어가고 있다고 합니다.
더불어, Thomas Geixner 등의 인텔쪽 커널 개발자들의 노력 덕에 pti 등 Meltdown 과 Spectre 버그를 위한 패치가 잘 관리되어 비교적 쉽게 머지될 수 있었음에 리누스가 감사를 표하네요.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc6/</link>
      <pubDate>Tue, 02 Jan 2018 13:34:11 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc6/</guid>
      <description>Linux 4.15-rc6 https://lkml.kernel.org/r/CA+55aFzU_Q04CVEABo50x24yeTaP-yzzrB1wTPeOiOgAbSKiDA@mail.gmail.com
한국시간으로는 1월 1일, 토발즈의 현지 시각으로는 2017년의 마지막날, 4.15 의 여섯번째 rc 버전이 릴리즈 되었습니다.
지난주는 크리스마스 등의 연휴 때문인지 참 조용했죠. 덕분에 이번 릴리즈의 변경사항도 많지 않습니다. 다만 x86 pti 쪽 업데이트가 있었기 때문에 이번엔 rc8 까지 릴리즈 할수도 있을 것 같다고 하는군요.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc4/</link>
      <pubDate>Sun, 24 Dec 2017 14:24:13 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc4/</guid>
      <description>Linux 4.15-rc5 https://lkml.kernel.org/r/CA+55aFy1U+uBLEAoCWU3=BqEbROW6rsbaHUdYJArR6iYQQWo_A@mail.gmail.com
4.15 의 다섯번째 rc 버전이 평소 스케쥴보다 하루 일찍 릴리즈 되었습니다. 원래대로라면 내일일텐데, 미국 시간으로는 크리스마스 이브라서 그냥 오늘 릴리즈 한다는군요.
이번 rc5 의 변경 사항들도 지난 릴리즈의 rc5 와 비슷했다고 하는데, 다만 x86 의 커널 페이지 테이블 격리화 관련 작업이 진행 중인 게 좀 예외라고 하는군요.
[RFC v3 PATCH 0/5] Eliminate zone-&amp;gt;lock contention for will-it-scale/page_fault1 and parallel free https://lkml.kernel.org/r/20180509085450.3524-1-aaron.lu@intel.com
패치셋 저자는 112개 CPU를 갖는 Intel Skylake 서버에서 will-it-scale/page_fult1 워크로드를 돌려보았고 80% CPU 가 zone-&amp;gt;lock 에서 스핀하며 시간을 보내고 있음을 파악했습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc5/</link>
      <pubDate>Sun, 24 Dec 2017 14:24:13 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc5/</guid>
      <description>Linux 4.15-rc5 https://lkml.kernel.org/r/CA+55aFy1U+uBLEAoCWU3=BqEbROW6rsbaHUdYJArR6iYQQWo_A@mail.gmail.com
4.15 의 다섯번째 rc 버전이 평소 스케쥴보다 하루 일찍 릴리즈 되었습니다. 원래대로라면 내일일텐데, 미국 시간으로는 크리스마스 이브라서 그냥 오늘 릴리즈 한다는군요.
이번 rc5 의 변경 사항들도 지난 릴리즈의 rc5 와 비슷했다고 하는데, 다만 x86 의 커널 페이지 테이블 격리화 관련 작업이 진행 중인 게 좀 예외라고 하는군요.
Re: About the try to remove cross-release feature entirely by Ingo https://lkml.kernel.org/r/20171229014736.GA10341@X58A-UD3R
Lockdep 의 cross release 기능은 너무 느렸고, false positive 가 많다는 이유로, 특히 false positive 가 너무 많다는 이유로 Ingo Molnar 에 의해 제거되려 하고 있습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc4</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc4/</link>
      <pubDate>Mon, 18 Dec 2017 17:46:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc4/</guid>
      <description>Linux 4.15-rc4 https://lkml.kernel.org/r/CA+55aFysmVGm_shBvK4kmaS+_PsMEt3Mz_b+Dm0SDrmVtUofbA@mail.gmail.com
4.15 의 네번째 rc 버전입니다. 지난 rc 버전들이 생각보다 커서 토발즈가 좀 걱정했는데, 이번 릴리즈에 들어서는 평범한 네번째 rc 만큼이나 변화가 많이 없어 충분히 안정화 되기 시작한 것 같다고 하는군요.
이번에 가장 눈에 띌만한 변화는 suspend/resume 처리를 정리하고 고친 것이라고 합니다. 크로스 락킹 디버깅 기능은 부팅 시간을 늘리는 문제 등도 있어선지 이번에 일단 제거되었네요. 나중에 다시 되살릴 계획은 있는 것 같습니다.
[PATCH v2 1/1] Move kfree_call_rcu() to slab_common.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc3</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc3/</link>
      <pubDate>Mon, 11 Dec 2017 11:25:13 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc3/</guid>
      <description>Linux 4.15-rc3 https://lkml.kernel.org/r/CA+55aFz9O9R8u3ori-QNPz4ALU+0B=Es0gd+oWmsce5qxugxXA@mail.gmail.com
4.15 의 세번째 rc 버전입니다. 지난주보단 조금 늦게 릴리즈 되었네요.
일반적으로 rc3 릴리즈는 좀 변경사항이 많지만 이번엔 그중에서도 변경사항이 많은 편이라 걱정된다고 하는군요. 대부분은 드라이버쪽 변경인데 perf 쪽 변경도 꽤 있고 core, networking, kvm, arch, 문서 업데이트도 물론 있습니다. 어쨌든 토발즈는 이제는 정말 안정화가 되어가길 바라는 마음이라는군요.
[PATCH v2] mm/slab: Do not hash pointers when debugging slab https://lkml.kernel.org/r/1513179267-2509-1-git-send-email-geert+renesas@glider.be
이번 버전에 들어와 포인터 값을 기반으로 한 예측을 통해 공격이 들어오는 걸 방지하기 위해 &amp;lsquo;%p&amp;rsquo; 가 포인터를 그냥 출력하는게 아니라 hash 한 다음에 출력하도록 바뀌었죠.</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc2</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc2/</link>
      <pubDate>Mon, 04 Dec 2017 13:38:11 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc2/</guid>
      <description>Linux 4.15-rc2 https://lkml.kernel.org/r/CA+55aFxPBszFBt91KRNBrsQdJ10b+6fh9ySNzSKSX7JOq4WRPw@mail.gmail.com
4.15 의 두번째 rc 버전이 나왔습니다.
동부 지방을 여행 중인가 보군요. 평소보다 좀 이른 시간에 릴리즈가 됐습니다. 원하던 것보단 큰 릴리즈가 되어버렸지만 대부분 fixup 이기에 큰 문제는 없는 것 같다는군요. Kernel ASLR leak 을 막기 위해 모든 &amp;ldquo;%P&amp;rdquo; 로 프린트되는 어드레스 주소를 해시해 버린다고 하네요. 이럼 디버깅할 때 좀 짜증날 수 있긴 하겠지만 다른 방법이 별로 없었다고&amp;hellip;
[RFC PATCH v3 0/7] ktask: multithread CPU-intensive kernel work https://lkml.kernel.org/r/20171205195220.28208-1-daniel.m.jordan@oracle.com</description>
    </item>
    <item>
      <title>LKML News after v4.15-rc1</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc1/</link>
      <pubDate>Mon, 27 Nov 2017 11:09:15 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.15-rc1/</guid>
      <description>Linux 4.15-rc1 https://lkml.kernel.org/r/CA+55aFzcudOPSwbD9XfVxBgFsQOhBjyncyYnGDYwZUEHOGUwcw@mail.gmail.com
예정대로 2주만에 4.15 의 첫번째 rc 버전이 나왔습니다.
지난주는 추수감사절이라 다들 휴가인 사람이 많았기에 첫번째 주에 최대한 많이 풀리퀘스트를 받았고 지난주는 좀 더 까다롭게 풀리퀘스트를 검사했군요. 토발즈는 두번째 주 동안 랩톱 들고 여행중이었고, 랩톱에서는 전체 모듈 빌드를 하지 않기 때문이라 합니다. 메인테이너들도 가능한 첫번째 주에 중요 플리퀘스트를 보내는 식으로 협조를 해줬다고 합니다. 그네들도 두번째주는 휴가가고 싶었을테니&amp;hellip; ;)
4.14 가 LTS 였기에 이번 머지윈도우에는 변화가 크지 않을 것으로 예상했는데 생각보다 많은 풀리퀘스트가 있었다고 합니다.</description>
    </item>
    <item>
      <title>LKML News after v4.14</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14/</link>
      <pubDate>Mon, 13 Nov 2017 17:07:44 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14/</guid>
      <description>Linux 4.14 htpps://lkml.kernel.org/r/CA+55aFwqXh4rgJJ3T98k8wa-JYF7t8mWuwUjdxkbZyOyDEcGzQ@mail.gmail.com
드디어 v4.14 의 릴리즈입니다. 이번 버전은 또하나의 LTS 커널이 될 예정이군요.
동시에, v4.15 를 위한 머지 윈도우가 열렸습니다. 이번 머지 윈도우는 thanks giving 이랑 겹치게 되었는데, 이때문에 머지 윈도우를 연장할지 아니면 아예 1주일 줄일지 토발즈는 고민중인 것 같네요.
[RFC PATCH v11 for 4.15 01/24] Restartable sequences system call https://lkml.kernel.org/r/20171114200414.2188-2-mathieu.desnoyers@efficios.com
몇년전부터 올라오고 있으나 아직 머지되지 못한, restartable sequence 패치의 최신 버전이 또 올라왔습니다. 유저스페이스의 크리티컬 섹션을 커널에게 제어할 수 있도록 도와주는 기능입니다.</description>
    </item>
    <item>
      <title>LKML News after v4.14-rc8</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc8/</link>
      <pubDate>Wed, 08 Nov 2017 04:19:47 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc8/</guid>
      <description>Linux 4.14-rc8 https://lwn.net/Articles/738207/
v4.14 를 향한 (아마도) 마지막 rc 버전의 릴리즈입니다.
정말로 별다른 일 없었다면 그냥 이번에 v4.14 릴리즈를 할 계획이었지만 그정도는 아니었다고 하는군요. 어쨌든 rc8 덕분에 v4.15 merge window 는 thanksgiving week 를 포함하게 되었는데 토발즈는 이때 가족과 휴가를 갈 계획이라 랩톱 가지고 휴가다니는 동안에도 머지를 잘 할 수 있길 바라지만 문제가 생기면 merge window 를 연장할 수도 있겠다고 하네요. 일단 어떻게 될지 두고보자는군요.
이번 릴리즈에 포함된 변경은 대부분 드라이버 쪽 변경이고, SPDK 관련 소스코드에 라이센스 추가 등을 한 사소하지만 커다란 양의 변경이 있습니다.</description>
    </item>
    <item>
      <title>LKML News after v4.14-rc7</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc7/</link>
      <pubDate>Fri, 03 Nov 2017 14:51:35 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc7/</guid>
      <description>Linux 4.14-rc7 https://lkml.kernel.org/r/CA+55aFwhgxivTE3k88nshbrH9nd-4nhmhXGzw-MxRVGxf-R8Eg@mail.gmail.com
일곱번째 rc 버전의 릴리즈입니다.
OSSE 와 kernel summit 으로 프라하를 방문했던 토발즈인데, 집에 잘 돌아왔다는군요. 이번 rc 버전은 기존의 rc7 보다도 작은 편에 가깝다고 합니다만, 다음 한주간이 정말 조용하지 않는한은 rc8 릴리즈를 할 생각이라는군요.
Re: Page allocator bottleneck https://lkml.kernel.org/r/1c218381-067e-7757-ccc2-4e5befd2bfc3@mellanox.com
멜라녹스의 빠른 네트워크 카드를 사용하는 환경에서는 page allocator 의 속도가 bottleneck 이 된다는 이야기에 대한 업데이트입니다. 여전히 해당 부분이 bottleneck 이며, queued_spin_lock_slowpath() 가 85 % 가까이 CPU 를 차지하고 있군요.</description>
    </item>
    <item>
      <title>LKML News after v4.14-rc6</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc6/</link>
      <pubDate>Wed, 25 Oct 2017 12:56:27 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc6/</guid>
      <description>Linux 4.14-rc6 https://lkml.kernel.org/r/CA+55aFxSJGeN=2X-uX-on1Uq2Nb8+v1aiMDz5H1+tKW_N5Q+6g@mail.gmail.com
여섯번째 rc 버전의 릴리즈입니다.
토발즈 집 인터넷 문제로 평소보다 늦은 릴리즈였군요. 이번 rc 버전은 기대보다는 좀 많은 내용이 추가되었는데, 때문에 어쩌면 rc8 까지 나올지도 모르겠다고 하는군요. 물론 확정되거나 한건 아니라고 합니다.
Re: [GIT PULL rcu/next] RCU commits for 4.15 https://lkml.kernel.org/r/20171023204502.GA2776@linux.vnet.ibm.com
4.15 에 들어가야 할 RCU 쪽 커밋들의 풀리퀘스트 입니다.
문서, RCU CPU Stall warning 업데이트, rcutorture 쪽 업데이트가 포함되었네요.
[GIT PULL de-alpha] Make core code not need to know about Alpha for v4.</description>
    </item>
    <item>
      <title>LKML News after v4.14-rc5</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc5/</link>
      <pubDate>Tue, 17 Oct 2017 20:54:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_v4.14-rc5/</guid>
      <description>Linux 4.14-rc5 https://lkml.kernel.org/r/CA+55aFyKgEL3dj7XGYsPQd8y_z0GWx91TLZPSQAxjrua1aWOLw@mail.gmail.com
다섯번째 rc 버전의 릴리즈입니다.
Lazy TLB flushing 변경은 지나치게 게으르게 TLB flushing 을 해서 AMD 칩 일부에서 문제를 일으키기도 했었다는군요.
일부 서브시스템에서 fuzzing 을 통한 문제 발견과 수정이 있었는데 좋은 현상이라고도 언급합니다.
전체적으로 x86, powerpc, mips 에의 arch 업데이트, gpu, networking, usb, sound, misc 드라이버 업데이트, lockdep, networking, mm 쪽 코어 커널 업데이트, 그리고 perf 와 selftest 에의 업데이트가 있었다고 이번 릴리즈를 정리하는군요.
[PATCH 0/2] mm, thp: introduce dedicated transparent huge page https://lkml.</description>
    </item>
    <item>
      <title>LKML News - Intro</title>
      <link>https://sjp38.github.io/posts/en/lkml_news_0000/</link>
      <pubDate>Tue, 10 Oct 2017 18:37:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_news_0000/</guid>
      <description>LKML 을 모니터링 하면서 흥미가는 패치나 토론을 lkml news 라는 카테고리로 묶어서 비정기적, 비형식적으로 간략히 정리하고 관련 소식을 업데이트 해보고자 합니다. 주로 모니터링 하는 메일은 메모리 매니지먼트 쪽과 rcu 관련 메일들이 될겁니다.</description>
    </item>
    <item>
      <title>Idle Page Tracking Tools</title>
      <link>https://sjp38.github.io/posts/en/idle_page_tracking/</link>
      <pubDate>Wed, 13 Sep 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/idle_page_tracking/</guid>
      <description>idle_page_tracking[1] is a simple, stupid toolbox for idle pages tracking. It can be used to get real working set size of a process.
Tools This section describes two tools in the box though more tools exists. You can get more description about each tool from the README in the repository[1].
userprog userprog is a sample synthetic workload for test of other tools. It interactively allocates and access specified pages in the allocated pages.</description>
    </item>
    <item>
      <title>TPC-H on MariaDB (MySQL)</title>
      <link>https://sjp38.github.io/posts/en/tpch-on-mariadb/</link>
      <pubDate>Sun, 10 Sep 2017 10:54:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/tpch-on-mariadb/</guid>
      <description>Benchmarks for Database can be roughly divided into two kinds, OLTP and OLAP[1]. One of the most popular OLTP benchamrks is TPC-C, while that of OLAP is TPC-H[2]. This post describes how you can run TPC-H against MariaDB.
Environment Setup The versions of the OS and programs I used for writeup of this post are as below.
Ubuntu 16.04.2 Server MariaDB 10.2.8 TPC-H toolkit 2.17.2 Automated Scripts I automated whole things I will describe below using scripts and uploaded the scripts to the Github: https://github.</description>
    </item>
    <item>
      <title>Kernel text addresses removed from calltrace</title>
      <link>https://sjp38.github.io/posts/en/kernel-text-addresses-removed-from-calltrace/</link>
      <pubDate>Fri, 16 Jun 2017 16:46:09 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/kernel-text-addresses-removed-from-calltrace/</guid>
      <description>최근 커널은 stakc dump 에서 콜 트레이스(Call Trace) 에 각 코드의 메모리 어드레스를 찍어주지 않습니다. 이에 대해 포스팅을 해봅니다.
Call Trace 커널은 문제가 발생하거나 하면 문제의 원인을 찾을 수 있는 다양한 정보를 담고 있는 stack dump 를 로그로 뿌려 줍니다. 문제의 원인을 찾는데 매우 소중한 정보입니다. 그 정보 중에서도 중요한 것 중 하나가 콜 트레이스로, 이 문제의 순간에 오기까지 어느 함수의 어느 지점에서 어느 함수를 호출해서 여기까지 왔는가를 담는 정보입니다.</description>
    </item>
    <item>
      <title>lkml livestream</title>
      <link>https://sjp38.github.io/posts/en/lkml_go/</link>
      <pubDate>Sun, 28 May 2017 17:51:43 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/lkml_go/</guid>
      <description>I wrote a simple, stupid program[1] that showing LKML[2] mails in terminal briefly like twitter livestream in Go language. It is just an early version and so many things to be complemented exists, though. Nevertheless, now it just works as I wanted at first.
References [1] https://github.com/sjp38/lkml
[2] https://en.wikipedia.org/wiki/Linux_kernel_mailing_list</description>
    </item>
    <item>
      <title>Install / execute spec cpu2006 benchmark</title>
      <link>https://sjp38.github.io/posts/en/spec_cpu2006_install/</link>
      <pubDate>Wed, 29 Mar 2017 05:10:55 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/spec_cpu2006_install/</guid>
      <description>SPEC, which is a standard corporation for the benchmark[1], makes and shares various benchmark suites. SPEC CPU 2006[1] is one of those benchmark suites. It has made to measure performance of computation intensive workload and widely being used now. It has released v1.0 in 2006, 1.1 in 2008, and 1.2 in 2011. This post briefly describes the way to install and execute the SPEC CPU 2006 v1.1 on Ubuntu 16.04 servers.</description>
    </item>
    <item>
      <title>Fetching linux kernel source code</title>
      <link>https://sjp38.github.io/posts/en/fetching-linux-source-code/</link>
      <pubDate>Mon, 20 Mar 2017 22:37:03 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/fetching-linux-source-code/</guid>
      <description>리눅스 커널은 오픈 소스 소프트웨어이므로 그 소스코드가 공개되어 있어 누구나 인터넷을 통해 쉽게 얻을 수 있습니다. 이 글에서는 리눅스 커널 소스코드를 받아올 수 있는 몇가지 방법을 설명합니다.
kernel.org 리눅스 커널 소스 코드를 받아오기 위한 기본적 공식 사이트는 [kernel.org] (https://www.kernel.org) 라 할 수 있겠는데, 이 사이트에는 소스 코드를 포함해 리눅스 커널을 위한 다양한 리소스가 정리되어 있습니다. 이 사이트에 웹브라우저를 통해 들어가보면 첫페이지에서부터 가장 최근에 릴리즈된 버전의 소스코드, 가장 최근의 안정화된 버전의 소스코드 등을 tar.</description>
    </item>
    <item>
      <title>Updating Google Chrome on Fedora 23</title>
      <link>https://sjp38.github.io/posts/en/fedora-chrome-update/</link>
      <pubDate>Mon, 20 Mar 2017 22:24:26 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/fedora-chrome-update/</guid>
      <description>I am using Fedora 23 laptop and installed stable version Google Chrome from its official website [0]. In this case, just using Updates of Fedora Software program doesn&amp;rsquo;t update Chrome automatically. For the case, follow below commands to update your Chrome:
$ sudo dnf update google-chrome-stable ... $ sudo killall chrome $ google-chrome-stable The second killall command is necessary because Chrome doesn&amp;rsquo;t kill its process by just cliking Close button. Or, you may reboot your computer but you wouldn&amp;rsquo;t like that.</description>
    </item>
    <item>
      <title>Golang kakaotalk chat bot making</title>
      <link>https://sjp38.github.io/posts/en/kakaobot/</link>
      <pubDate>Wed, 15 Mar 2017 22:40:32 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/kakaobot/</guid>
      <description>I have developed a chat bot [1] for Kakaotalk [2] using Go language because I have been curious about the process of Kakaotalk chat bot development process. Implementation to major version has consumed only two hours owing to power of Go language, simpleness of Kakaotalk auto-reply API, and simple simple functionality requirement of my bot. It has coded really simply and in brute-force manner, do only simple echoing. However, for the reason, the code could be helpful for beginner of Kakaotalk chat bot or Go language Restful API server programmer.</description>
    </item>
    <item>
      <title>Using arping to know ip-MAC mapping</title>
      <link>https://sjp38.github.io/posts/en/arping-howto/</link>
      <pubDate>Tue, 07 Mar 2017 19:41:16 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/arping-howto/</guid>
      <description>You can use arping to know IP address to MAC address mapping of your local network. Usage is simple:
arping [-AbDfhqUV] [-c count] [-w deadline] [-s source] -I interface destination For example, you may use the command as below:
$ arping -I eth0 10.0.0.1 ARPING 10.0.0.1 from 10.0.0.2 eth0 Unicast reply from 10.0.0.1 [11:22:33:44:55:66] 0.123ms Unicast reply from 10.0.0.1 [11:22:33:44:55:66] 0.251ms ... Secret of the tool is ARP protocol [1]. To know the MAC address of the machine that has a specific IP address, IP protocol layer uses the protocol.</description>
    </item>
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>https://sjp38.github.io/posts/en/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/gcma/</guid>
      <description>The importance of physically contiguous memory has increased in modern computing environments, including both low- and high-end systems. Existing physically contiguous memory allocators generally have critical limitations. For example, the most commonly adopted solution, the memory reservation technique, wastes a significant amount of memory space. Scatter/Gather direct memory access (DMA) and input-output memory management units (IOMMUs) avoid this problem by utilizing additional hardware for address space virtualization. However, additional hardware means an increase in costs and power consumption, which is especially disadvantageous for small systems and they do not provide real contiguous memory.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://sjp38.github.io/posts/en/about/</link>
      <pubDate>Sat, 14 Jan 2017 04:51:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/about/</guid>
      <description>Bio SeongJae Park is a Linux kernel programmer who maintains DAMON, a data access monitoring framework for the Linux kernel. He is developing a data access-aware Linux system for AWS using this framework as a core component. He basically enjoys analyzing and developing systems, and is particularly interested in operating system kernels, parallel computing, and memory management. He received his PhD degree from the Department of Computer Science, Seoul National University in 2019.</description>
    </item>
    <item>
      <title>&#34;Is Parallel Programming Hard, And, If So, What Can You Do About It?&#34; Translation</title>
      <link>https://sjp38.github.io/posts/en/perfbook-kokr/</link>
      <pubDate>Tue, 10 Jan 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/en/perfbook-kokr/</guid>
      <description>&amp;ldquo;Is Parallel Programming is Hard, And, If So, What Can You Do About It?&amp;quot;[1] 은 parallel programming 분야에서 대가라 불릴만한 분으로, 이쪽 분야에서 매우 중요한 동기화 메커니즘인 RCU[2] 를 개발했으며 리눅스 커널의 RCU 메인테이너로 활동하고 있는 Paul E. McKenney[3] 가 오픈소스 방식으로 저술하고 있는, parallel programming 에 대한 책입니다.
개인적으로 이 책의 한국어 번역을 오픈소스[4]로 진행하고 있습니다. 이 프로젝트는 원저작자인 Paul 에게 공식 한국어 번역으로 인증받았습니다[5].
컨트리뷰션에 대해서도 열려 있으니, 이에 관심 있는 분은 repository 내의 README 문서의 Contribution 섹션[6] 을 참고 바랍니다.</description>
    </item>
  </channel>
</rss>
