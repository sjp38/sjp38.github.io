<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on hacklog</title>
    <link>https://sjp38.github.io/posts/</link>
    <description>Recent content in Posts on hacklog</description>
    <image>
      <title>hacklog</title>
      <url>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sjp38.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 May 2025 07:59:31 -0700</lastBuildDate>
    <atom:link href="https://sjp38.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I will have a talk at the Kernel Recipes 2025</title>
      <link>https://sjp38.github.io/posts/kernel_recipes_2025_talk/</link>
      <pubDate>Fri, 23 May 2025 07:59:31 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/kernel_recipes_2025_talk/</guid>
      <description>DAMON talk for Kernel Recipes 2025 has been scheduled. The title of the talk is &amp;ldquo;Overcoming Observer Effects in Memory Management with DAMON&amp;rdquo;. It will introduce DAMON at whole for wider audience.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2025</title>
      <link>https://sjp38.github.io/posts/ossummit_na_2025_talk/</link>
      <pubDate>Mon, 07 Apr 2025 21:12:06 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/ossummit_na_2025_talk/</guid>
      <description>DAMON talk for OSSummit North America 2025 has been accepted and scheduled. The title of the talk is &amp;ldquo;Self-Driving DAMON/S: Controlled and Automated Access-aware Efficient Systems&amp;rdquo;. It will present DAMON&amp;rsquo;s two auto-tuning features for access monitoring and access-aware system operations.</description>
    </item>
    <item>
      <title>I will have two sessions for DAMON at LSFMM&#43;BPF 2025</title>
      <link>https://sjp38.github.io/posts/lsfmmbpf_2025_talks/</link>
      <pubDate>Sat, 22 Mar 2025 13:58:08 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/lsfmmbpf_2025_talks/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON, and any requirements to DAMON for more access-aware memory management kernel subsystem of future in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2025. The title of the talks are &amp;ldquo;DAMON Updates and Plans: Monitoring Parameters Auot-tuning and Memory Tiering&amp;rdquo; and &amp;ldquo;DAMON Requirements for Access-aware MM of Future&amp;rdquo;, respectively.
Detailed schedules can be found from the below Google doc spreadsheet.</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2024</title>
      <link>https://sjp38.github.io/posts/my_opensource_commits_stat_2024/</link>
      <pubDate>Tue, 31 Dec 2024 10:16:21 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/my_opensource_commits_stat_2024/</guid>
      <description>As today is the last day of 2024, I checked my open source commits statistics using my simple and buggy scripts. Similar statistics for 2023 is available at another post.
Note that the script may have bugs, and numbers don&amp;rsquo;t tell everything.
In short, I made 7th and 2nd biggest changes to Linux kernel memory management subsystem among the 340 people, in terms of lines of changes (2,347) and commits (102).</description>
    </item>
    <item>
      <title>I will have a talk at the FOSDEM 2025</title>
      <link>https://sjp38.github.io/posts/fosdem2025_talk/</link>
      <pubDate>Fri, 13 Dec 2024 09:08:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/fosdem2025_talk/</guid>
      <description>I will present DAMON in FOSDEM&#39;25. The title of the talk is &amp;ldquo;DAMON: Kernel Subsystem for Data Access Monitoring and Access-aware System Operations&amp;rdquo;.</description>
    </item>
    <item>
      <title>Creating DAMON logo using DAMON</title>
      <link>https://sjp38.github.io/posts/damon_heatmap_logo/</link>
      <pubDate>Sat, 13 Jul 2024 13:56:02 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/damon_heatmap_logo/</guid>
      <description>I just made a DAMON logo using DAMON, like below.
$ git clone https://github.com/sjp38/masim &amp;amp;&amp;amp; cd masim $ cat damon_pixel_2 11111111 11 11 111111 11111111 11 11 11111111 11111111 1111 11111111 11111111 11 11 11111111 11111111 1111 11111111 $ ./pixels_to_access_config.py ./damon_pixel_2 $((100*1024*1024)) 300 damon.cfg $ sudo damo record &amp;#34;./masim ./configs/stairs.cfg&amp;#34; $ sudo damo report heatmap --output damon.png The output is below:
The cropped one:</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit Euroe 2024</title>
      <link>https://sjp38.github.io/posts/ossummit_eu_2024_talk/</link>
      <pubDate>Wed, 12 Jun 2024 21:22:55 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/ossummit_eu_2024_talk/</guid>
      <description>DAMON talk for OSSummit EU 2024 has accepted and scheduled. The talk will focus on use cases of DAMON for saving memory including those for real world products.
The title of the talk is &amp;ldquo;DAMON Recipes: Ways to Save Memory Using a Linux Kernel Subsystem in the Real World&amp;rdquo;.</description>
    </item>
    <item>
      <title>I will have a session for DAMON at LSFMM 2024</title>
      <link>https://sjp38.github.io/posts/lsfmmbpf_2024_talk/</link>
      <pubDate>Wed, 08 May 2024 07:48:52 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/lsfmmbpf_2024_talk/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2024. The title of the talks is &amp;ldquo;DAMON updates and Plans: Automation of DAMON tuning, tiering, and VM guest scaling&amp;rdquo;.
https://docs.google.com/spreadsheets/d/176LXLys9Uh6A-Eal2flrzcbUSJMUXGkGwyihr9jAAaQ/edit#gid=0</description>
    </item>
    <item>
      <title>Hackermail v1 is released</title>
      <link>https://sjp38.github.io/posts/hackermail_v1/</link>
      <pubDate>Sat, 17 Feb 2024 10:40:58 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/hackermail_v1/</guid>
      <description>I started subscribing linux kernel mailing list with my gmail account in 2013. Dealing with the large amount of mails was not that easy, probably due to my poor setup and being lazy at trying more tools.
In 2019, while returning from Linux Plumbers Conference, I read an LWN article saying Linus Torvalds is now considering unsubscribing the linux kernel mailing list, owing to the evolvement of the public-inbox and lore.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2024</title>
      <link>https://sjp38.github.io/posts/ossummit_na_2024_talk/</link>
      <pubDate>Wed, 14 Feb 2024 23:05:59 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/ossummit_na_2024_talk/</guid>
      <description>DAMON talk for OSSummit North America 2024 has been accepted and scheduled. The talk will present DAMOS auto-tuning and hopefully, more new DAMO features. The features are still under development, but hopefully, the power of presentation-driven development will make it. ;) Looking forward to meeting you there!</description>
    </item>
    <item>
      <title>Perfbook 2nd edition translation is complete</title>
      <link>https://sjp38.github.io/posts/perfbook_2nd_edition_translation_complete/</link>
      <pubDate>Sun, 11 Feb 2024 10:05:34 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/perfbook_2nd_edition_translation_complete/</guid>
      <description>After about 8 years of progress on my little hobby project[1], the Korean translation of Paul E. McKenney &amp;rsquo;s book, I&amp;rsquo;m marking it as completed a humble milestone[2]. It was a very fun and informative journey.
[1] https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/perfbook.git/commit/?id=edbfcdee0460 [2] https://lore.kernel.org/perfbook/20240211175355.4986-1-sj38.park@gmail.com/</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2023</title>
      <link>https://sjp38.github.io/posts/my_opensource_commits_stat_2023/</link>
      <pubDate>Sun, 31 Dec 2023 12:57:52 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/my_opensource_commits_stat_2023/</guid>
      <description>As today is the last day of 2023, I checked some open source commits statistics using my simple and buggy script, and github. Similar statistics for 2022 is available at another post.
In short, I made 8th and 4th biggest changes to Linux kernel memory management subsystem among the 295 people, for lines of changes (1,910) and commits (66).
For the Linux kernel whole tree, the numbers become 264th (3,562 lines) and 80th (147 commits) among 5,006 people.</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit Europe 2023</title>
      <link>https://sjp38.github.io/posts/ossummit_eu_2023_talk/</link>
      <pubDate>Fri, 30 Jun 2023 16:01:51 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/ossummit_eu_2023_talk/</guid>
      <description>DAMON talk for OSSummit EU 2023 has accepted and scheduled. The talk will focus on its user-space tool, damo. It&amp;rsquo;s mainly for helping more audiences to digest the content easier, and also for accelerating the development of damo. By the time, hopefully the version of damo would reach to, or exceed 2.0.0, and newer interface and features will be introduced together.
The title of the talk is &amp;ldquo;Data Access Monitoring Operator (DAMO): User-Space Tool/Python Library for Access-Aware Profiling and Optimization of Your Linux Systems&amp;rdquo;.</description>
    </item>
    <item>
      <title>DAMON Publications and Presentations</title>
      <link>https://sjp38.github.io/posts/damon_publications_talks/</link>
      <pubDate>Sat, 06 May 2023 12:17:00 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/damon_publications_talks/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_publications_talks. This out-dated post will be removed soon.
Below is a list of publications and presentations that cover DAMON project.
This list is not exhaustive and is compiled to the best of our ability, as some publications or presentations may have been made without the knowledge of the DAMON maintainers. If you find a publication or announcement that should be added to this list, please let us know at sj@kernel.</description>
    </item>
    <item>
      <title>DAMON News List</title>
      <link>https://sjp38.github.io/posts/damon_news/</link>
      <pubDate>Sat, 06 May 2023 11:27:07 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/damon_news/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_news. This out-dated post will be removed soon.
Below is a list of news around DAMON project.
This list is not exhaustive but just a DAMON maintainer&amp;rsquo;s collection of news. If you find a news that should be added to this list, please let us know at sj@kernel.org and/or damon@lists.linux.dev.
2024 2024-10-15: DAMON debugfs interface removal RFC patch has posted.
2024-10-10: Monthly PyPI downloads of DAMON user-space too, DAMO, doubled again after ten days.</description>
    </item>
    <item>
      <title>I will have a session for DAMON at the LSFMM 2023</title>
      <link>https://sjp38.github.io/posts/lsfmmbpf_2023_talk/</link>
      <pubDate>Thu, 04 May 2023 18:13:37 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/lsfmmbpf_2023_talk/</guid>
      <description>I will present and discuss about the current status and future plans of DAMON in Linux Storage/File System/Memory Management/BPF (LSFMM+BPF) 2023. The title of the talks is &amp;ldquo;DAMON updates and future plans&amp;rdquo;.
https://events.linuxfoundation.org/lsfmm/program/schedule-at-a-glance/</description>
    </item>
    <item>
      <title>I will have a talk at the Open Source Summit North America 2023</title>
      <link>https://sjp38.github.io/posts/ossummit_na_2023_talk/</link>
      <pubDate>Sat, 18 Mar 2023 09:34:33 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/ossummit_na_2023_talk/</guid>
      <description>I will present DAMON, DAMOS, and DAMO in Open Source Summit North America 2023. The title of the talk is &amp;ldquo;DAMON, DAMOS, and DAMO: Kernel Subsystems and User-Space Tools for Data Access-Aware System Analysis/Optimizations&amp;rdquo;.
https://sched.co/1K5HS</description>
    </item>
    <item>
      <title>DAMON-based System Optimization Guide</title>
      <link>https://sjp38.github.io/posts/damon_optimization_guide/</link>
      <pubDate>Sun, 15 Jan 2023 10:36:11 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/damon_optimization_guide/</guid>
      <description>This document helps you estimating the amount of benefit that you could get from DAMON-based system optimizations, and describes how you could achieve it.
Check The Signs No optimization can provide same extent of benefit to every case. Therefore you should first guess how much improvements you could get using DAMON. If some of below conditions match your situation, you could consider using DAMON.
Low IPC and High Cache Miss Ratios.</description>
    </item>
    <item>
      <title>DAMON Evaluation</title>
      <link>https://sjp38.github.io/posts/damon_evaluation/</link>
      <pubDate>Sun, 15 Jan 2023 10:34:06 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/damon_evaluation/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon_evaluation. This out-dated post will be removed soon.
DAMON is lightweight. It increases system memory usage by 0.39% and slows target workloads down by 1.16%.
DAMON is accurate and useful for memory management optimizations. An experimental DAMON-based operation scheme for THP, namely &amp;rsquo;ethp&amp;rsquo;, removes 76.15% of THP memory overheads while preserving 51.25% of THP speedup. Another experimental DAMON-based &amp;lsquo;proactive reclamation&amp;rsquo; implementation, namely &amp;lsquo;prcl&amp;rsquo;, reduces 93.</description>
    </item>
    <item>
      <title>My opensource commits statistics in 2022</title>
      <link>https://sjp38.github.io/posts/my_opensource_commits_stat_2022/</link>
      <pubDate>Sat, 31 Dec 2022 13:48:12 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/my_opensource_commits_stat_2022/</guid>
      <description>As today is the last day of 2022, I checked some open source commits statistics using my simple and buggy script[1], and github.
Linux kernel statistics I ran my buggy script[1] to show some 2022 statistics for memory management subsystem and whole tree of Linux kernel as below.
Memory Management In 2022, 305 people participated in Linux kernel memory management subsystem development by making 81,631 lines of changes with 2,135 commits.</description>
    </item>
    <item>
      <title>Summary of DAMON Development in 2022</title>
      <link>https://sjp38.github.io/posts/damon_stat_2022/</link>
      <pubDate>Thu, 29 Dec 2022 19:35:00 -0800</pubDate>
      <guid>https://sjp38.github.io/posts/damon_stat_2022/</guid>
      <description>A summary of DAMON development in 2022 has posted: https://lore.kernel.org/damon/20221229171209.162356-1-sj@kernel.org/
2022 was a year of active and healthy DAMON development.
Seven new DAMON major features were delivered to users. Some of those were featured in articles and academic papers.
It was possible thanks to the DAMON community. The community has expanded with its own mailing list and an open bi-weekly chat series. 40 people contributed their great code to DAMON via making their 275 commits merged into the mainline.</description>
    </item>
    <item>
      <title>My 10th anniversary of the Linux kernel contribution</title>
      <link>https://sjp38.github.io/posts/linux_kernel_contribution_10th_anniversary/</link>
      <pubDate>Sun, 16 Oct 2022 09:09:55 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/linux_kernel_contribution_10th_anniversary/</guid>
      <description>Today is the 10th anniversary of my Linux kernel contribution. Including the tiny and trivial patch, I made 381 patches merged in the mainline during the 10 years.
$ git log --author SeongJae --reverse commit cf174b0ef52ad8184779e1da4132e2d9d17247e5 Author: SeongJae Park &amp;lt;sj38.park@gmail.com&amp;gt; Date: Tue Oct 16 16:47:50 2012 +0900 staging: csr: csr_framework_ext_types.h: fix coding style Fix coding style of csr_framework_ext_types.h Signed-off-by: SeongJae Park &amp;lt;sj38.park@gmail.com&amp;gt; Signed-off-by: Greg Kroah-Hartman &amp;lt;gregkh@linuxfoundation.org&amp;gt; [...] $ git log --author SeongJae --oneline | wc -l 381 I&amp;rsquo;m looking forward to the next 10 years.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2022</title>
      <link>https://sjp38.github.io/posts/kernelsummit2022_talk/</link>
      <pubDate>Fri, 29 Jul 2022 21:02:43 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/kernelsummit2022_talk/</guid>
      <description>I will present current status and future plans for DAMON in KernelSummit&#39;22. The title of the talk is &amp;ldquo;Current Status and Future Plans of DAMON&amp;rdquo;.
https://lpc.events/event/16/contributions/1224/</description>
    </item>
    <item>
      <title>My paper introducing DAMON and related works has accepted to appear in the HPDC 2022</title>
      <link>https://sjp38.github.io/posts/hpdc2022_talk/</link>
      <pubDate>Wed, 04 May 2022 07:12:26 -0700</pubDate>
      <guid>https://sjp38.github.io/posts/hpdc2022_talk/</guid>
      <description>My paper introducing DAMON and related works for making Linux a more data access-aware operating system has been accepted to be presented by the HPDC&#39;22. The title of the paper is &amp;ldquo;DAOS: Data Access-aware Operating System&amp;rdquo;.</description>
    </item>
    <item>
      <title>Linux Memory Management Subsystem Development Statistics in 2021 (Short)</title>
      <link>https://sjp38.github.io/posts/linux-mm-dev-stat-2021-short/</link>
      <pubDate>Fri, 31 Dec 2021 07:52:00 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/linux-mm-dev-stat-2021-short/</guid>
      <description>Whenever reading the kernel development statistics report for each release from LWN, I wanted to scope it down to specific subsystems. For that, I wrote a script.
Belows are the top 10 kernel hackers who contributed to the memory management subsystem of Linux kernel, sorted by number of commits and changed (added, deleted, or modified) lines, respectively.
$ ./authors.py ~/linux --file mm/ --since 2021-01-01 --author_identity name --sortby lines --max_nr_authors 10 1.</description>
    </item>
    <item>
      <title>Papers I read in 2021 Q4</title>
      <link>https://sjp38.github.io/posts/paper_reading_2021_q4/</link>
      <pubDate>Sat, 30 Oct 2021 09:16:33 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/paper_reading_2021_q4/</guid>
      <description>record interesting papers that I (partially) read</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2021</title>
      <link>https://sjp38.github.io/posts/kernelsummit2021_talk/</link>
      <pubDate>Wed, 08 Sep 2021 07:12:32 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/kernelsummit2021_talk/</guid>
      <description>I will present DAMON/DAMOS in KernelSummit&#39;21. The title of the talk is &amp;ldquo;Writing a fine-grained access pattern-oriented lightweight kernel module using DAMON/DAMOS in 10 minutes&amp;rdquo;.
https://linuxplumbersconf.org/event/11/contributions/984/</description>
    </item>
    <item>
      <title>OSDI 2021 papers summary</title>
      <link>https://sjp38.github.io/posts/osdi2021_papers_review/</link>
      <pubDate>Sat, 07 Aug 2021 09:27:55 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/osdi2021_papers_review/</guid>
      <description>This post is for recording some notes from a few OSDI&#39;21 papers that I got fun.
DMon: Efficient Detection and Correction of Data Locality Problems Using Selective Profiling https://www.usenix.org/system/files/osdi21-khan.pdf
DMon is a compiler-based data locality optimization system. The approach is quite similar to that of daphicx or similar things. It injects data access profiling code in the target program, build and run it with some workload, collect the profiling code-generated results, analyze the profile results to figure out what kind of optimization can provide some benefit to the program, injects the optimization code in the program, built it again, and deploy the version to the production.</description>
    </item>
    <item>
      <title>Starting perfbook translation again</title>
      <link>https://sjp38.github.io/posts/perfbook_translate_restart/</link>
      <pubDate>Sat, 27 Mar 2021 13:01:07 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/perfbook_translate_restart/</guid>
      <description>I stopped translation of perfbook since 2019-09-27. Because the 2nd edition of perfbook is released[0], I&amp;rsquo;m starting the translation again[1], from the scratch. The old versions are still available, of course[2].
[0] https://mirrors.edge.kernel.org/.../perfbook/perfbook.html
[1] https://github.com/sjp38/perfbook-ko_KR/commit/1c44ef30179b
[2] https://github.com/sjp38/perfbook-ko_KR-pdf</description>
    </item>
    <item>
      <title>An example of DAMON usage for profiling</title>
      <link>https://sjp38.github.io/posts/damon_profile_callstack_example/</link>
      <pubDate>Thu, 25 Feb 2021 07:20:30 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/damon_profile_callstack_example/</guid>
      <description>I realized I didn&amp;rsquo;t introduce a good, intuitive example use case of DAMON[0] for profiling so far, though DAMON is not for only profiling. One straightforward and realistic usage of DAMON as a profiling tool would be recording the monitoring results with callstack and visualize those by timeline together.
For example, below shows that visualization for a realistic workload, namely &amp;lsquo;fft&amp;rsquo; in SPLASH-2X benchmark suite. The upper-most graph shows how DAMON-detected working set size of the workload (y-axis) changes by time (x-axis).</description>
    </item>
    <item>
      <title>Watching OSDI 2020 presentation videos</title>
      <link>https://sjp38.github.io/posts/osdi2020_videos_review/</link>
      <pubDate>Sat, 19 Dec 2020 22:35:27 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/osdi2020_videos_review/</guid>
      <description>I set watching at least one OSDI&#39;20 presentation video per day during the long vacation as one of my plans.
A large scale analysis of hundreds of in-memory cache clusters at Twitter https://www.youtube.com/watch?v=OQtMM5vdhlI&amp;amp;feature=emb_title
The authors traced and analyzed the workloads on the Twitter&amp;rsquo;s in-memory cache systems. To me, below findings were interesting.
There are many write requests. Size of each object is not so big (median 200 bytes), so metadata, which sizes 64 bytes per each object, is a burden Size of each key is not small compared to the size of each value.</description>
    </item>
    <item>
      <title>Tests package for DAMON is released under GPL v2</title>
      <link>https://sjp38.github.io/posts/damon-tests_open_sourced/</link>
      <pubDate>Sat, 26 Sep 2020 08:47:12 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/damon-tests_open_sourced/</guid>
      <description>DAMON contains a number of tests based on the kselftest and kunit in its patchset itself. As it is preferred to contain only tests having short runtime in kernel tree, I organized time consuming tests in a package and used it in my company only. Tests could be used as a good document and essential for contributors. For the reason, I promised I will make it open source in the last kernel summit talk (https://linuxplumbersconf.</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2020</title>
      <link>https://sjp38.github.io/posts/kernelsummit2020_talk/</link>
      <pubDate>Sat, 08 Aug 2020 07:10:32 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/kernelsummit2020_talk/</guid>
      <description>My talk proposal to the Linux Kernel Summit of this year which is co-located with the Linux Plumbers Conference has accepted! Hope to (virtually) see you there. The title of the talk is, &amp;ldquo;DAMON: Data Access Monitoring Framework for Fun and Memory Management Optimizations&amp;rdquo;.</description>
    </item>
    <item>
      <title>Opening a Showcase Website for DAMON</title>
      <link>https://sjp38.github.io/posts/damon_github_page/</link>
      <pubDate>Tue, 19 May 2020 06:27:47 +0000</pubDate>
      <guid>https://sjp38.github.io/posts/damon_github_page/</guid>
      <description>A DAMON showcase website[1] is open. There are
the official documentation of DAMON[2], the heatmap format dynamic access pattern of various realistic workloads for heap area[3], mmap()-ed area[4], and stack[5] area, the dynamic working set size distribution[6] and chronological working set size changes[7], and the latest performance test results[8]. [1] https://damonitor.github.io
[2] https://damonitor.github.io/doc/html/latest
[3] https://damonitor.github.io/test/result/visual/latest/heatmap.0.html
[4] https://damonitor.github.io/test/result/visual/latest/heatmap.1.html
[5] https://damonitor.github.io/test/result/visual/latest/heatmap.2.html
[6] https://damonitor.github.io/test/result/visual/latest/wss_sz.html
[7] https://damonitor.github.io/test/result/visual/latest/wss_time.html
[8] https://damonitor.github.io/test/result/perf/latest/html/index.html</description>
    </item>
    <item>
      <title>Sphynx document on Github pages Needs `.nojekyll` File</title>
      <link>https://sjp38.github.io/posts/sphynx_doc_on_github_pages_needs_nojekyll/</link>
      <pubDate>Wed, 13 May 2020 06:40:03 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/sphynx_doc_on_github_pages_needs_nojekyll/</guid>
      <description>I recently tried to upload the Linux kernel document which is generated in html form using the Sphynx build system[1] on a Github page[2] so that people can read DAMON[3] document from everywhere. The upload was very easy. I simply created the repo, put the generated html doc at Documentation/output/ into the repo and pushed. However, the theme was not applied.
Github assumes every Github pages to be based on Jekyll[4], and because every files and directories starting with underscores are handled special in Jekyll, some directories Sphynx created were ignored.</description>
    </item>
    <item>
      <title>ACM DL is allowing open access to every article until June</title>
      <link>https://sjp38.github.io/posts/acmdl_is_open_until_june/</link>
      <pubDate>Wed, 22 Apr 2020 06:45:20 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/acmdl_is_open_until_june/</guid>
      <description>ACM has decided to allow open access to every article in ACM DL until June 30, to help people doing remote works due to COVID-19. I found this by checking my papers in ACM DL. I believe this is a great decision of ACM.</description>
    </item>
    <item>
      <title>Eurosys&#39;20 will be held online</title>
      <link>https://sjp38.github.io/posts/eurosys20_will_be_held_online/</link>
      <pubDate>Sun, 05 Apr 2020 09:05:11 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/eurosys20_will_be_held_online/</guid>
      <description>With the upload of the accepted papers list, EuroSys homepage also updated its notice about COVID-19 related notification. It previously tried to reschedule the offline meeting, however seems they changed mind and decided to do virtual (online) conference. It&amp;rsquo;s a bad news for authors and people who planned to participate the offline meetings, but a good new for other people, because they would be allowed to participate in the conference without fee.</description>
    </item>
    <item>
      <title>RCX: Read-Copy Transact</title>
      <link>https://sjp38.github.io/posts/rcx/</link>
      <pubDate>Sat, 15 Feb 2020 09:11:55 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/rcx/</guid>
      <description>Read-copy update (RCU) can provide ideal scalability for read-mostly workloads, but some believe that it provides only poor performance for updates. This belief is due to the lack of RCU-centric update synchronization mechanisms. RCU instead works with a range of update-side mechanisms, such as locking. In fact, many developers embrace simplicity by using global locking. Logging, hardware transactional memory, or fine-grained locking can provide better scalability, but each of these approaches has limitations, such as imposing overhead on readers or poor scalability on non-uniform memory access (NUMA) systems, mainly due to their lack of NUMA-aware design principles.</description>
    </item>
    <item>
      <title>My paper has accepted to appear in the EuroSys2020</title>
      <link>https://sjp38.github.io/posts/eurosys2020_talk/</link>
      <pubDate>Fri, 14 Feb 2020 19:44:36 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/eurosys2020_talk/</guid>
      <description>The last research paper I wrote before joining my current team, has been accepted to be presented by the EuroSys&#39;20. The title of the paper is “An HTM-Based Update-side Synchronization for RCU on NUMA systems”.</description>
    </item>
    <item>
      <title>A thing you should know if you are using multiple email accounts with `git send-email`</title>
      <link>https://sjp38.github.io/posts/git_send_email_multiple_email_caution/</link>
      <pubDate>Mon, 06 Jan 2020 21:10:05 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/git_send_email_multiple_email_caution/</guid>
      <description>In some case, we need to send patches that made by other people instead. git send-email command can know this situation by itself by comparing the commit author information and mail sender&amp;rsquo;s information. In that case, git send-email automatically add From: line pointing the real author of the patch in the body of the mail so that maintainers applying the patches can set the author information correctly.
For example, if &amp;ldquo;Alice alice@abc.</description>
    </item>
    <item>
      <title>Setting Git for email send</title>
      <link>https://sjp38.github.io/posts/git_email_setup/</link>
      <pubDate>Sat, 28 Dec 2019 09:58:49 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/git_email_setup/</guid>
      <description>Many communities are using Github nowadays, but some communities still use mailing list based development style. The Linux kernel community would be a good example. In the style, all major communications are made by email only. Patches are submitted to the maintainers and one more open mailing lists as a mail. Reviews are also made as replies to the mail.
Because some email clients can distort the original content for so-called ``rich user experience&amp;rsquo;&amp;rsquo; (e.</description>
    </item>
    <item>
      <title>DAMON: Data Access Monitor</title>
      <link>https://sjp38.github.io/posts/damon/</link>
      <pubDate>Fri, 27 Dec 2019 18:21:07 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/damon/</guid>
      <description>!! NOTE !!
This post has migrated to https://damonitor.github.io/posts/damon. This out-dated post will be removed soon.
With increasingly data-intensive workloads and limited DRAM capacity, optimal memory management based on dynamic access patterns is becoming increasingly important. Such mechanisms are only possible if accurate and efficient dynamic access pattern monitoring is available.
DAMON is a Data Access MONitoring framework subsystem for the Linux kernel developed for such memory management. It is designed with some key mechanism (refer to Design for the detail) that make it</description>
    </item>
    <item>
      <title>Build, Install, and Use QEMU on Ubuntu</title>
      <link>https://sjp38.github.io/posts/qemu_setup_on_ubuntu/</link>
      <pubDate>Thu, 12 Dec 2019 00:46:05 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/qemu_setup_on_ubuntu/</guid>
      <description>This post describes how you can build, install, and use QEMU on an Ubuntu machine. I basically refererenced http://wiki.qemu.org/Hosts/Linux. The test has proceeded on an Ubuntu 18.04 server machine.
QEMU Build sudo apt install libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev \ libgtk-3-dev git clone git://git.qemu-project.org/qemu.git cd qemu git checkout v4.2.0 mkdir -p $HOME/qemu.sandbox/bin cd $HOME/qemu.sandbox/bin ../../qemu/configure --enable-debug --enable-gtk time make -j143 ./x86_64-softmmu/qemu-system-x86_64 -L pc-bios Guest OS Install Get an Ubuntu server install image:</description>
    </item>
    <item>
      <title>My recent research will be presented at the MIDDLEWARE&#39;19</title>
      <link>https://sjp38.github.io/posts/middleware19_paper/</link>
      <pubDate>Wed, 04 Dec 2019 18:00:27 +0100</pubDate>
      <guid>https://sjp38.github.io/posts/middleware19_paper/</guid>
      <description>A research paper, which I wrote before joining Amazon, will be presented at the Industry session of the ACM/IFIP MIDDLEWARE&#39;19. The title of the paper is &amp;ldquo;Profiling Dynamic Data Access Patterns with Controlled Overhead and Quality&amp;rdquo;.</description>
    </item>
    <item>
      <title>Richard Stallman Resigns</title>
      <link>https://sjp38.github.io/posts/rms_resigns/</link>
      <pubDate>Thu, 19 Sep 2019 21:57:01 +0200</pubDate>
      <guid>https://sjp38.github.io/posts/rms_resigns/</guid>
      <description>몇일 전, 리차드 스톨만이 FSF 회장은 물론이고 의장직에서도 사임한다는 소식이 전해졌습니다. 무슨 일이 있었는지 아래의 reddit 코멘트가 가장 잘 설명하고 있다는 LWN 코멘트[1] 를 참고해, 해당 reddit 코멘트를 번역해 봅니다.
[1] https://lwn.net/Articles/799391/
최근 공개된 한 여성의 증언에 따르면 그녀가 17세 때, Epstein 이 그녀에게 Marvin Minsky 와 성관계를 가지라고 했습니다. Minsky 는 MIT Media Lab 창시자이자 A.I 선도자였으며, 2016년에 사망했습니다. 스톨만은 한 메일링 리스트에서 (Minsky 를 성폭행으로 비난하는 어느 시위 주도자의 주장에 대한 답변으로) 이렇게 주장했습니다, 자신도 Epstein 은 비난하지만, Minsky 는 그녀가 강요당한 걸 몰랐을 가능성이 있다구요:</description>
    </item>
    <item>
      <title>I will have a talk at the Linux Kernel Summit 2019</title>
      <link>https://sjp38.github.io/posts/kernelsummit2019_talk/</link>
      <pubDate>Sat, 20 Jul 2019 02:41:46 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/kernelsummit2019_talk/</guid>
      <description>My talk proposal to the Linux Kernel Summit of this year which is co-located with the Linux Plumbers has accepted! Hope to see you in Lisbon. The title of the talk is, &amp;ldquo;Tracing Data Access Pattern with Bounded Overhead and Best-effort Accuracy&amp;rdquo;.</description>
    </item>
    <item>
      <title>My Job Interview Record (2019 summer)</title>
      <link>https://sjp38.github.io/posts/my_job_interview/</link>
      <pubDate>Mon, 17 Jun 2019 18:16:05 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/my_job_interview/</guid>
      <description>이번 여름 졸업을 앞두고 구직 활동을 한 결과, 얼마전 운좋게도 미국에 본사를 두고 있는 한 글로벌 IT 기업의 커널/하이퍼바이저 팀으로부터 잡 오퍼를 받았습니다. 취업을 향한 한걸음 한걸음이 어둠 속을 더듬더듬, 때로는 막무가내로 헤쳐나가는 느낌이었는데, 이런 저의 경험을 공유하는게 어떤 분들께는 도움이 되지 않을까 싶어 공유해 봅니다.
목표설정 취업을 할까 포닥을 할까 모호한 고민만 하다가 어느새 4월 중순이 되어서야 해외 IT 회사로 직장을 구하겠다는 목표가 설정되었습니다. 그제서야 든 생각은 너무 늦었다, 준비가 부족하다, 하는 것이었습니다.</description>
    </item>
    <item>
      <title>Linux Development History Visualization Youtube Channel</title>
      <link>https://sjp38.github.io/posts/linux_develop_visualization_youtube/</link>
      <pubDate>Tue, 04 Jun 2019 10:44:33 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/linux_develop_visualization_youtube/</guid>
      <description>I created a Youtube channel[1]. I will upload videos for the git history between each release of the Linux kernel, just for jun. I use gource[2] for the visualization for now. The scripts I use for these videos are available[3] under GPL v3. If you want, you may use the scripts for your own video generation.
[1] https://www.youtube.com/channel/UCI7qoGt1hOfCsI8hFqriYCg
[2] https://gource.io/
[3] https://github.com/sjp38/linux_development_visualization</description>
    </item>
    <item>
      <title>DAPHICX: Data Access Pattern Hint Injecting Compiler Extension</title>
      <link>https://sjp38.github.io/posts/daphicx/</link>
      <pubDate>Thu, 30 May 2019 18:59:53 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/daphicx/</guid>
      <description>Memory pressure is inevitable as the size of working sets is rapidly growing while the capacity of dynamic random access memory (DRAM) is not. Meanwhile, storage devices have evolved so that their speed is comparable to the speed of DRAM while their capacity scales are comparable to that of hard disk drives (HDD). Thus, hierarchial memory systems configuring DRAM as the main memory and high-end storages as swap devices will be common.</description>
    </item>
    <item>
      <title>Biscuit (OS Written in Go) Install</title>
      <link>https://sjp38.github.io/posts/biscuit_os_install/</link>
      <pubDate>Sun, 26 May 2019 23:27:44 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/biscuit_os_install/</guid>
      <description>$ git clone https://go.googlesource.com/go go1.4; cd go1.4 $ git checkout release-branch.go1.4; cd src $ ./make.bash $ cd ../../ $ git clone https://github.com/mit-pdos/biscuit.git; cd biscuit/src $ ./make.bash $ cd ../biscuit/ $ make qemu CPUS=2 </description>
    </item>
    <item>
      <title>Fedora28 ibus-hangul input problem</title>
      <link>https://sjp38.github.io/posts/fedora28_hangul_problem/</link>
      <pubDate>Fri, 26 Apr 2019 11:05:59 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/fedora28_hangul_problem/</guid>
      <description>어느날부터 Fedora 터미널에서 한글 입력이 매우 불편해졌습니다. 한글 모드에서는 backspace, enter, esc 등의 특수키가 하나도 안먹힙니다. Vim 을 쓰는 입장에선 매우 불편하죠. 알고보니 ibus-hangul 버그인 것 같습니다[1]. 아래 커맨드로 ibus-hangul 을 문제 없던 버전으로 다운그레이드 시키고 세션을 재시작 하면 문제가 사라집니다.
sudo dnf downgrade ibus-hangul-1.5.0-12.fc28.x86_64 [1] http://www.fedoralinux.or.kr/board-read.do?boardId=bbs3&amp;amp;boardNo=153170459823549&amp;amp;command=READ&amp;amp;page=1&amp;amp;categoryId=-1</description>
    </item>
    <item>
      <title>I will have a talk at the Hotstorage&#39;19</title>
      <link>https://sjp38.github.io/posts/hotstorage2019_talk/</link>
      <pubDate>Thu, 18 Apr 2019 09:37:04 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/hotstorage2019_talk/</guid>
      <description>HotStorage&#39;19 에 제출한 제 최근 연구에 대한 논문이 accept 되어 7월에 해당 워크샵에서 이에 대한 내용을 발표하게 되었습니다. 논문 제목은 &amp;ldquo;Automating Context Based Access Pattern Hint Injection for System Performance and Swap Storage Durability&amp;rdquo; 입니다.</description>
    </item>
    <item>
      <title>Backtrace on C language program</title>
      <link>https://sjp38.github.io/posts/backtrace_c_language/</link>
      <pubDate>Tue, 09 Apr 2019 17:33:50 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/backtrace_c_language/</guid>
      <description>디버깅 과정에선 현재 어떤 코드가 어떤 함수를 거쳐 수행됐는지를 통한 컨텍스트 파악이 중요합니다. Java, Python, Go 등 대부분의 언어가 이를 위해 콜스택을 뽑을 수 있는 기능을 제공하죠. C 언어의 경우 gdb 등을 사용하면 쉽게 이를 볼 수 있지만 경우에 따라선 gdb 를 포기하고 printf() 등에만 의존해야 하기도 합니다. 이를 위한 기능이 c 라이브러리에도 있습니다, backtrace() 함수입니다. man 에도 이에 대한 설명이 있습니다만, 여기서도 간단히 소개해 봅니다.
Example Source Code 예제로 설명하는게 가장 쉽죠.</description>
    </item>
    <item>
      <title>Unit test for the Linux kernel using Kunit</title>
      <link>https://sjp38.github.io/posts/kunit_intro/</link>
      <pubDate>Wed, 20 Mar 2019 15:32:29 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/kunit_intro/</guid>
      <description>Update (2020-01-01): KUnit has merged in v5.5 merge window. From the writing of this post, it had some changes, so below content, especially the test setup and running will not work. Recommend you to refer to the official document in the kernel for detailed tutorial. It also has a python version dependency now, so you would encounter a problem with Ubuntu 16.04. Recommend you to use later Python or Ubuntu 18.</description>
    </item>
    <item>
      <title>I will have a talk at the FAST&#39;19</title>
      <link>https://sjp38.github.io/posts/fast2019_talk/</link>
      <pubDate>Sat, 02 Feb 2019 11:13:29 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/fast2019_talk/</guid>
      <description>FAST&#39;19 Work-in-progress 세션 에서 현재 진행중인 연구에 대해 발표하게 되었습니다. 발표 제목은 &amp;ldquo;Automated Data Access Pattern Hint Instrumentation for System Performance and Durability of Swap Storage&amp;rdquo; 입니다.</description>
    </item>
    <item>
      <title>I will have a talk at the kernel summit</title>
      <link>https://sjp38.github.io/posts/ksummit2018_talk/</link>
      <pubDate>Thu, 08 Nov 2018 06:11:48 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/ksummit2018_talk/</guid>
      <description>지난 토요일, Theodore Ts&amp;rsquo;o 로부터 올해 Linux Plumbers Conference 의 한 트랙으로 열리는 커널 서밋에서 GCMA 발표를 해줄 수 있겠냐는 제의를 받았고 물론 그러겠노라고 했습니다. 발표 일정의 [첫번째 드래프트][1]가 올라왔군요. 화요일 아침에 발표하게 됐습니다.
[1] https://lists.linuxfoundation.org/pipermail/ksummit-discuss/2018-November/006238.html</description>
    </item>
    <item>
      <title>The Paper about GCMA Accepted to TC</title>
      <link>https://sjp38.github.io/posts/gcma_accepted_to_tc/</link>
      <pubDate>Wed, 29 Aug 2018 21:53:56 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/gcma_accepted_to_tc/</guid>
      <description>A paper about GCMA project has accepted to a top-level computer science journal, Transactions on Computers[1]. It will be published soon.
[1] https://www.computer.org/web/tc</description>
    </item>
    <item>
      <title>Linux Release History</title>
      <link>https://sjp38.github.io/posts/linux_release_history/</link>
      <pubDate>Mon, 30 Jul 2018 09:14:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/linux_release_history/</guid>
      <description>Linux 4.19-rc2 https://lkml.kernel.org/r/CA+55aFyG0GbDfoghEhAmKBPcZCiPu6CCpPRz9GwjCzLuP_Vv5Q@mail.gmail.com
2018-09-02 14:45 PDT
Linux 4.19-rc1 https://lkml.kernel.org/r/CA+55aFw9mxNPX6OtOp-aoUMdXSg=gBkQudGGamo__sh_ts_LdQ@mail.gmail.com
2018-08-26 14:49 PDT
Linux 4.18 https://lkml.kernel.org/r/CA+55aFzos7tr=OLju10Oe-z7r=eB2dSaFa7vwz2ApGO13B=z_g@mail.gmail.com
2018-08-12 14:10:49 PDT
Linux 4.18-rc8 https://lkml.kernel.org/r/CA+55aFw49Bh9u3KvGsMbnSLfHvevpWPuqgrWQT0tC0XCajNwzA@mail.gmail.com
2018-08-05 12:58 PDT
Linux 4.18-rc7 https://lkml.kernel.org/r/CA+55aFxpFefwVdTGVML99PSFUqwpJXPx5LVCA3D=g2t2_QLNsA@mail.gmail.com
2018-07-29 22:09 UTC
Linux 4.18-rc6 https://lkml.kernel.org/r/CA+55aFzMheDA-2z=MdGgJrz-REcrknb+4OEvRKaJipm+x6xEhw@mail.gmail.com
2018-07-23 20:46 UTC
Linux 4.18-rc5 https://lkml.kernel.org/r/CA+55aFwfMr2D2A_yesUyt_Lo3XMRk9epzgeBMt2HxMHiXMDYcg@mail.gmail.com
2018-07-15 20:28 UTC
Linux 4.18-rc4 https://lore.kernel.org/lkml/CA+55aFwXGyZ1Yx+Z8a93gpvb596ZRJ5ppiQL_+-k7gjeQLtcsQ@mail.gmail.com/T/#u
2018-07-08 23:57 UTC
Linux 4.18-rc3 https://lkml.kernel.org/r/CA+55aFwGk-pWKKCtp+kQUN_hov9tW+vUo6Wgob91bewwBL17fA@mail.gmail.com
2018-07-01 23:46 UTC</description>
    </item>
    <item>
      <title>Alpine for LKML</title>
      <link>https://sjp38.github.io/posts/alpine-for-lkml/</link>
      <pubDate>Wed, 18 Jul 2018 21:09:54 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/alpine-for-lkml/</guid>
      <description>리눅스 커널 커뮤니티는 버그 레포팅, 패치 업로드, 리뷰, 릴리즈, 토론 등등 모든 활동은 이메일을 통해 이루어집니다. 이 포스트에서는 리누스 토발즈도 쓰는 이메일 클라이언트인 Alpine 을 gmail 과 연동하는 방법을 알아봅니다.
먼저 alpine 설치는 대부분 리눅스 배포판의 패키지 시스템에 등록되어 있으므로 해당 패키지 시스템을 사용해 쉽게 설치할 수 있습니다. 데비안 계열이면 apt install alpine, 페도라 계열이면 dnf install alpine 이죠.
gmail imap 정보 입력 S (Settings) -&amp;gt; L (collectionLists) -&amp;gt; A (Add Cltn)</description>
    </item>
    <item>
      <title>Linux Kernel Debugging Using QEMU</title>
      <link>https://sjp38.github.io/posts/qemu_kernel_debugging/</link>
      <pubDate>Mon, 07 May 2018 18:21:01 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/qemu_kernel_debugging/</guid>
      <description>You can use classical debugger for your Linux kernel programming, though Torvalds doesn&amp;rsquo;t like it. I also do not prefer such use of debuggers, but admit that sometimes debuggers are quite useful. ;)
There are several ways to debug Linux kernel, but one of above is to set up a Linux virtual machine using QEMU and debugging the Linux kernel of the virtual machine from the host machine. This post summarises how to debug the Linux kernel in this way.</description>
    </item>
    <item>
      <title>Idle Page Tracking Tools</title>
      <link>https://sjp38.github.io/posts/idle_page_tracking/</link>
      <pubDate>Wed, 13 Sep 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/idle_page_tracking/</guid>
      <description>idle_page_tracking[1] is a simple, stupid toolbox for idle pages tracking. It can be used to get real working set size of a process.
Tools This section describes two tools in the box though more tools exists. You can get more description about each tool from the README in the repository[1].
userprog userprog is a sample synthetic workload for test of other tools. It interactively allocates and access specified pages in the allocated pages.</description>
    </item>
    <item>
      <title>TPC-H on MariaDB (MySQL)</title>
      <link>https://sjp38.github.io/posts/tpch-on-mariadb/</link>
      <pubDate>Sun, 10 Sep 2017 10:54:24 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/tpch-on-mariadb/</guid>
      <description>Benchmarks for Database can be roughly divided into two kinds, OLTP and OLAP[1]. One of the most popular OLTP benchamrks is TPC-C, while that of OLAP is TPC-H[2]. This post describes how you can run TPC-H against MariaDB.
Environment Setup The versions of the OS and programs I used for writeup of this post are as below.
Ubuntu 16.04.2 Server MariaDB 10.2.8 TPC-H toolkit 2.17.2 Automated Scripts I automated whole things I will describe below using scripts and uploaded the scripts to the Github: https://github.</description>
    </item>
    <item>
      <title>Kernel text addresses removed from calltrace</title>
      <link>https://sjp38.github.io/posts/kernel-text-addresses-removed-from-calltrace/</link>
      <pubDate>Fri, 16 Jun 2017 16:46:09 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/kernel-text-addresses-removed-from-calltrace/</guid>
      <description>최근 커널은 stakc dump 에서 콜 트레이스(Call Trace) 에 각 코드의 메모리 어드레스를 찍어주지 않습니다. 이에 대해 포스팅을 해봅니다.
Call Trace 커널은 문제가 발생하거나 하면 문제의 원인을 찾을 수 있는 다양한 정보를 담고 있는 stack dump 를 로그로 뿌려 줍니다. 문제의 원인을 찾는데 매우 소중한 정보입니다. 그 정보 중에서도 중요한 것 중 하나가 콜 트레이스로, 이 문제의 순간에 오기까지 어느 함수의 어느 지점에서 어느 함수를 호출해서 여기까지 왔는가를 담는 정보입니다.</description>
    </item>
    <item>
      <title>lkml livestream</title>
      <link>https://sjp38.github.io/posts/lkml_go/</link>
      <pubDate>Sun, 28 May 2017 17:51:43 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/lkml_go/</guid>
      <description>I wrote a simple, stupid program[1] that showing LKML[2] mails in terminal briefly like twitter livestream in Go language. It is just an early version and so many things to be complemented exists, though. Nevertheless, now it just works as I wanted at first.
References [1] https://github.com/sjp38/lkml
[2] https://en.wikipedia.org/wiki/Linux_kernel_mailing_list</description>
    </item>
    <item>
      <title>Install / execute spec cpu2006 benchmark</title>
      <link>https://sjp38.github.io/posts/spec_cpu2006_install/</link>
      <pubDate>Wed, 29 Mar 2017 05:10:55 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/spec_cpu2006_install/</guid>
      <description>SPEC, which is a standard corporation for the benchmark[1], makes and shares various benchmark suites. SPEC CPU 2006[1] is one of those benchmark suites. It has made to measure performance of computation intensive workload and widely being used now. It has released v1.0 in 2006, 1.1 in 2008, and 1.2 in 2011. This post briefly describes the way to install and execute the SPEC CPU 2006 v1.1 on Ubuntu 16.04 servers.</description>
    </item>
    <item>
      <title>Fetching linux kernel source code</title>
      <link>https://sjp38.github.io/posts/fetching-linux-source-code/</link>
      <pubDate>Mon, 20 Mar 2017 22:37:03 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/fetching-linux-source-code/</guid>
      <description>리눅스 커널은 오픈 소스 소프트웨어이므로 그 소스코드가 공개되어 있어 누구나 인터넷을 통해 쉽게 얻을 수 있습니다. 이 글에서는 리눅스 커널 소스코드를 받아올 수 있는 몇가지 방법을 설명합니다.
kernel.org 리눅스 커널 소스 코드를 받아오기 위한 기본적 공식 사이트는 [kernel.org] (https://www.kernel.org) 라 할 수 있겠는데, 이 사이트에는 소스 코드를 포함해 리눅스 커널을 위한 다양한 리소스가 정리되어 있습니다. 이 사이트에 웹브라우저를 통해 들어가보면 첫페이지에서부터 가장 최근에 릴리즈된 버전의 소스코드, 가장 최근의 안정화된 버전의 소스코드 등을 tar.</description>
    </item>
    <item>
      <title>Updating Google Chrome on Fedora 23</title>
      <link>https://sjp38.github.io/posts/fedora-chrome-update/</link>
      <pubDate>Mon, 20 Mar 2017 22:24:26 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/fedora-chrome-update/</guid>
      <description>I am using Fedora 23 laptop and installed stable version Google Chrome from its official website [0]. In this case, just using Updates of Fedora Software program doesn&amp;rsquo;t update Chrome automatically. For the case, follow below commands to update your Chrome:
$ sudo dnf update google-chrome-stable ... $ sudo killall chrome $ google-chrome-stable The second killall command is necessary because Chrome doesn&amp;rsquo;t kill its process by just cliking Close button. Or, you may reboot your computer but you wouldn&amp;rsquo;t like that.</description>
    </item>
    <item>
      <title>Golang kakaotalk chat bot making</title>
      <link>https://sjp38.github.io/posts/kakaobot/</link>
      <pubDate>Wed, 15 Mar 2017 22:40:32 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/kakaobot/</guid>
      <description>I have developed a chat bot [1] for Kakaotalk [2] using Go language because I have been curious about the process of Kakaotalk chat bot development process. Implementation to major version has consumed only two hours owing to power of Go language, simpleness of Kakaotalk auto-reply API, and simple simple functionality requirement of my bot. It has coded really simply and in brute-force manner, do only simple echoing. However, for the reason, the code could be helpful for beginner of Kakaotalk chat bot or Go language Restful API server programmer.</description>
    </item>
    <item>
      <title>Using arping to know ip-MAC mapping</title>
      <link>https://sjp38.github.io/posts/arping-howto/</link>
      <pubDate>Tue, 07 Mar 2017 19:41:16 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/arping-howto/</guid>
      <description>You can use arping to know IP address to MAC address mapping of your local network. Usage is simple:
arping [-AbDfhqUV] [-c count] [-w deadline] [-s source] -I interface destination For example, you may use the command as below:
$ arping -I eth0 10.0.0.1 ARPING 10.0.0.1 from 10.0.0.2 eth0 Unicast reply from 10.0.0.1 [11:22:33:44:55:66] 0.123ms Unicast reply from 10.0.0.1 [11:22:33:44:55:66] 0.251ms ... Secret of the tool is ARP protocol [1]. To know the MAC address of the machine that has a specific IP address, IP protocol layer uses the protocol.</description>
    </item>
    <item>
      <title>GCMA: Guaranteed Contiguous Memory Allocator</title>
      <link>https://sjp38.github.io/posts/gcma/</link>
      <pubDate>Sat, 14 Jan 2017 23:11:23 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/gcma/</guid>
      <description>The importance of physically contiguous memory has increased in modern computing environments, including both low- and high-end systems. Existing physically contiguous memory allocators generally have critical limitations. For example, the most commonly adopted solution, the memory reservation technique, wastes a significant amount of memory space. Scatter/Gather direct memory access (DMA) and input-output memory management units (IOMMUs) avoid this problem by utilizing additional hardware for address space virtualization. However, additional hardware means an increase in costs and power consumption, which is especially disadvantageous for small systems and they do not provide real contiguous memory.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://sjp38.github.io/posts/about/</link>
      <pubDate>Sat, 14 Jan 2017 04:51:08 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/about/</guid>
      <description>Bio SeongJae Park is a Linux kernel programmer who maintains DAMON, a data access monitoring framework for the Linux kernel. He is developing a data access-aware Linux system for AWS using this framework as a core component. He basically enjoys analyzing and developing systems, and is particularly interested in operating system kernels, parallel computing, and memory management. He received his PhD degree from the Department of Computer Science, Seoul National University in 2019.</description>
    </item>
    <item>
      <title>&#34;Is Parallel Programming Hard, And, If So, What Can You Do About It?&#34; Translation</title>
      <link>https://sjp38.github.io/posts/perfbook-kokr/</link>
      <pubDate>Tue, 10 Jan 2017 13:46:00 +0900</pubDate>
      <guid>https://sjp38.github.io/posts/perfbook-kokr/</guid>
      <description>&amp;ldquo;Is Parallel Programming is Hard, And, If So, What Can You Do About It?&amp;quot;[1] 은 parallel programming 분야에서 대가라 불릴만한 분으로, 이쪽 분야에서 매우 중요한 동기화 메커니즘인 RCU[2] 를 개발했으며 리눅스 커널의 RCU 메인테이너로 활동하고 있는 Paul E. McKenney[3] 가 오픈소스 방식으로 저술하고 있는, parallel programming 에 대한 책입니다.
개인적으로 이 책의 한국어 번역을 오픈소스[4]로 진행하고 있습니다. 이 프로젝트는 원저작자인 Paul 에게 공식 한국어 번역으로 인증받았습니다[5].
컨트리뷰션에 대해서도 열려 있으니, 이에 관심 있는 분은 repository 내의 README 문서의 Contribution 섹션[6] 을 참고 바랍니다.</description>
    </item>
  </channel>
</rss>
